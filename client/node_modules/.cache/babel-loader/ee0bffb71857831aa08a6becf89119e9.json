{"ast":null,"code":"import _slicedToArray from\"/Users/bruceseymour/ra-video/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import socketIOClient from\"socket.io-client\";import React,{setState,useState,useEffect}from'react';export default function Pinball(){console.log(\"Starting Pinball Controls\");// change endpoint to public IP with port forward to local servers\nvar ENDPOINT=\"http://24.60.168.240:8080\";//local const ENDPOINT = \"http://192.168.86.250:8080\";\n// Live Tesing (Hardware Available)\nvar socket=socketIOClient(ENDPOINT);//Local Testing (No Hardware Available)\n//const socket = { emit : ()=>{console.log(\"TESTING\")}}\nvar _useState=useState(0),_useState2=_slicedToArray(_useState,2),buttonCount=_useState2[0],setButtonCount=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),keyHistory=_useState4[0],updateKeyHistory=_useState4[1];var keyPressedTimeStart=useState(new Date().getTime());var keyPressedTimeEnd=useState(new Date().getTime());var buttonDuration=useState(keyPressedTimeEnd[0]-keyPressedTimeStart[0]);function increaseButtonCount(buttonCount){setButtonCount(function(prevCount){return prevCount+1;});}// PINBALL RELAY CONTROLS - BELOW -\nfunction turnOnLeftFlipper(){console.log(\"Turn On Left Flipper\");//  socket.emit(\"turnOnLeftFlipper\",1);\nsocket.emit(\"changeLeftFlipper\",1);}function turnOffLeftFlipper(){console.log(\"Turn Off Left Flipper\");//  socket.emit(\"turnOnLeftFlipper\",0)\nsocket.emit(\"changeLeftFlipper\",0);}function turnOnRightFlipper(){console.log(\"Turn On Left Flipper\");//  socket.emit(\"turnOnRightFlipper\",1);\nsocket.emit(\"changeRightFlipper\",1);}function turnOffRightFlipper(){console.log(\"Turn Off Right Flipper\");//  socket.emit(\"turnOnRightFlipper\",0)\nsocket.emit(\"changeRightFlipper\",0);}function turnOnUpperRightFlipper(){console.log(\"Turn On Upper Right Flipper\");socket.emit(\"changeUpperRightFlipper\",1);}function turnOffUpperRightFlipper(){console.log(\"Turn Off Upper Right Flipper\");socket.emit(\"changeUpperRightFlipper\",0);}// SHOOT BUTTON\nfunction turnOnShootButton(){console.log(\"Turn On Shoot Button\");socket.emit(\"shootButton\",1);}function turnOffShootButton(){console.log(\"Turn Off Shoot Button\");socket.emit(\"shootButton\",0);}// START / CREDIT BUTTON\nfunction turnOnStartButton(){console.log(\"Turn On Start Button\");socket.emit(\"startButton\",1);}function turnOffStartButton(){console.log(\"Turn Off Start Button\");socket.emit(\"startButton\",0);}// PINBALL RELAY CONTROLS - ABOVE -\n// KEYBOARD CONTROLS\nvar leftFlipperKey1=useKeyPress('a');var leftFlipperKey2=useKeyPress('A');var leftFlipperKey3=useKeyPress('ArrowLeft');var leftFlipperKey4=useKeyPress(',');var leftFlipperKey5=useKeyPress('<');var rightFlipperKey1=useKeyPress('s');var rightFlipperKey2=useKeyPress('S');var rightFlipperKey3=useKeyPress('ArrowRight');var rightFlipperKey4=useKeyPress('.');var rightFlipperKey5=useKeyPress('>');var upperRightFlipperKey1=useKeyPress('d');var upperRightFlipperKey2=useKeyPress('D');var upperRightFlipperKey3=useKeyPress('ArrowDown');var upperRightFlipperKey4=useKeyPress('/');var upperRightFlipperKey5=useKeyPress('?');var startKey1=useKeyPress('w');var startKey2=useKeyPress('W');var startKey3=useKeyPress(' ');var startKey4=useKeyPress('ArrowUp');var startKey5=useKeyPress('N');var startKey6=useKeyPress('n');var shootKey1=useKeyPress('e');var shootKey2=useKeyPress('E');var shootKey3=useKeyPress('p');var shootKey4=useKeyPress('P');var shootKey5=useKeyPress('1');var shootKey6=useKeyPress('M');var shootKey7=useKeyPress('n');function useKeyPress(targetKey){// State for keeping track of whether key is pressed\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),keyPressed=_useState6[0],setKeyPressed=_useState6[1];var duplicateKeyFlag=useState(false);var keyHistoryLength;// If pressed key is our target key then set to true\nfunction downHandler(_ref){var key=_ref.key;keyHistory.push(key);console.log(\"Key Pressed: \",key);//    console.log(\"Key History Length\", keyHistoryLength);\nif(keyHistory[keyHistoryLength]==targetKey){duplicateKeyFlag=true;//       console.log(\"Duplicate Key \", duplicateKeyFlag);\n}else{duplicateKeyFlag=false;//      console.log(\"Duplicate Key \", duplicateKeyFlag);\n};if(key===targetKey){setKeyPressed(true);keyPressedTimeStart[0]=new Date().getTime();if(duplicateKeyFlag===true){//     console.log(\"Duplicate Key \", duplicateKeyFlag);\nkeyPressedTimeStart[0]=keyPressedTimeStart[0];//      console.log(\"Key Down Time:\", keyPressedTimeStart[0])\n}else{keyPressedTimeStart[0]=new Date().getTime();}switch(targetKey){case\"a\":case\"A\":case\"ArrowLeft\":case\"<\":case\",\":turnOnLeftFlipper();increaseButtonCount();break;case\"s\":case\"S\":case\"ArrowRight\":case\">\":case\".\":turnOnRightFlipper();turnOnUpperRightFlipper();increaseButtonCount();break;case\"w\":case\"W\":case\" \":case\"ArrowUp\":case\"M\":case\"m\":turnOnShootButton();break;case\"e\":case\"E\":case\"p\":case\"P\":case\"n\":case\"N\":case\"1\":turnOnStartButton();break;case\"d\":case\"D\":case\"ArrowDown\":case\"/\":case\"?\":turnOnUpperRightFlipper();increaseButtonCount();break;default:// code block\n}}}// If released key is our target key then set to false\nvar upHandler=function upHandler(_ref2){var key=_ref2.key;if(key===targetKey){setKeyPressed(false);keyPressedTimeEnd[0]=new Date().getTime();//  console.log(\"Key Up Time:\", keyPressedTimeEnd[0])\nbuttonDuration=keyPressedTimeEnd[0]-keyPressedTimeStart[0];buttonDuration=buttonDuration.toFixed(2)/1000;//    console.log(\"Key Pressed Time (buttonDuration):\", keyPressedTimeEnd[0],keyPressedTimeStart[0], buttonDuration)\nswitch(targetKey){case\"a\":case\"A\":case\"ArrowLeft\":case\"<\":case\",\":turnOffLeftFlipper();break;case\"s\":case\"S\":case\"ArrowRight\":case\">\":case\".\":turnOffRightFlipper();turnOffUpperRightFlipper();break;case\"w\":case\"W\":case\" \":case\"ArrowUp\":case\"M\":case\"m\":turnOffShootButton();break;case\"e\":case\"E\":case\"p\":case\"P\":case\"n\":case\"N\":case\"1\":turnOffStartButton();break;case\"d\":case\"D\":case\"ArrowDown\":case\"/\":case\"?\":turnOffUpperRightFlipper();break;default:// code block\n}}};// Add event listeners to listen for key presses\nuseEffect(function(){window.addEventListener('keydown',downHandler);window.addEventListener('keyup',upHandler);// Remove event listeners on cleanup\nreturn function(){window.removeEventListener('keydown',downHandler);window.removeEventListener('keyup',upHandler);};},[]);// Empty array ensures that effect is only run on mount and unmount\nreturn keyPressed;}// end function useKeyPress(targetKey)\nreturn/*#__PURE__*/React.createElement(React.Fragment,null);}","map":{"version":3,"sources":["/Users/bruceseymour/ra-video/client/src/Components/Pinball.js"],"names":["socketIOClient","React","setState","useState","useEffect","Pinball","console","log","ENDPOINT","socket","buttonCount","setButtonCount","keyHistory","updateKeyHistory","keyPressedTimeStart","Date","getTime","keyPressedTimeEnd","buttonDuration","increaseButtonCount","prevCount","turnOnLeftFlipper","emit","turnOffLeftFlipper","turnOnRightFlipper","turnOffRightFlipper","turnOnUpperRightFlipper","turnOffUpperRightFlipper","turnOnShootButton","turnOffShootButton","turnOnStartButton","turnOffStartButton","leftFlipperKey1","useKeyPress","leftFlipperKey2","leftFlipperKey3","leftFlipperKey4","leftFlipperKey5","rightFlipperKey1","rightFlipperKey2","rightFlipperKey3","rightFlipperKey4","rightFlipperKey5","upperRightFlipperKey1","upperRightFlipperKey2","upperRightFlipperKey3","upperRightFlipperKey4","upperRightFlipperKey5","startKey1","startKey2","startKey3","startKey4","startKey5","startKey6","shootKey1","shootKey2","shootKey3","shootKey4","shootKey5","shootKey6","shootKey7","targetKey","keyPressed","setKeyPressed","duplicateKeyFlag","keyHistoryLength","downHandler","key","push","upHandler","toFixed","window","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import socketIOClient from \"socket.io-client\";\nimport React, { setState, useState, useEffect } from 'react';\nexport default function Pinball() {\n\nconsole.log(\"Starting Pinball Controls\");\n\n// change endpoint to public IP with port forward to local servers\nconst ENDPOINT = \"http://24.60.168.240:8080\"\n//local const ENDPOINT = \"http://192.168.86.250:8080\";\n\n// Live Tesing (Hardware Available)\nconst socket = socketIOClient(ENDPOINT);\n\n//Local Testing (No Hardware Available)\n//const socket = { emit : ()=>{console.log(\"TESTING\")}}\n\nlet [buttonCount, setButtonCount] = useState(0);\nlet [keyHistory, updateKeyHistory] = useState([]);\nlet keyPressedTimeStart = useState(new Date().getTime())\nlet keyPressedTimeEnd = useState(new Date().getTime())\nlet buttonDuration = useState(keyPressedTimeEnd[0] - keyPressedTimeStart[0])\n\nfunction increaseButtonCount(buttonCount) {\n  setButtonCount( prevCount => prevCount+1);\n}\n\n// PINBALL RELAY CONTROLS - BELOW -\n\nfunction turnOnLeftFlipper(){\n  console.log(\"Turn On Left Flipper\");\n//  socket.emit(\"turnOnLeftFlipper\",1);\n  socket.emit(\"changeLeftFlipper\",1);\n}\n\nfunction turnOffLeftFlipper(){\n  console.log(\"Turn Off Left Flipper\");\n//  socket.emit(\"turnOnLeftFlipper\",0)\n  socket.emit(\"changeLeftFlipper\",0);\n}\n\nfunction turnOnRightFlipper(){\n  console.log(\"Turn On Left Flipper\");\n//  socket.emit(\"turnOnRightFlipper\",1);\n  socket.emit(\"changeRightFlipper\",1);\n}\n\nfunction turnOffRightFlipper(){\n  console.log(\"Turn Off Right Flipper\");\n//  socket.emit(\"turnOnRightFlipper\",0)\n  socket.emit(\"changeRightFlipper\",0);\n}\n\nfunction turnOnUpperRightFlipper(){\n  console.log(\"Turn On Upper Right Flipper\");\n  socket.emit(\"changeUpperRightFlipper\",1);\n}\n\nfunction turnOffUpperRightFlipper(){\n  console.log(\"Turn Off Upper Right Flipper\");\n  socket.emit(\"changeUpperRightFlipper\",0);\n}\n\n// SHOOT BUTTON\nfunction turnOnShootButton(){\n  console.log(\"Turn On Shoot Button\");\n  socket.emit(\"shootButton\",1);\n}\n\nfunction turnOffShootButton(){\n  console.log(\"Turn Off Shoot Button\");\n  socket.emit(\"shootButton\",0)\n}\n\n// START / CREDIT BUTTON\nfunction turnOnStartButton(){\n  console.log(\"Turn On Start Button\");\n  socket.emit(\"startButton\",1);\n}\n\nfunction turnOffStartButton(){\n  console.log(\"Turn Off Start Button\");\n  socket.emit(\"startButton\",0)\n}\n\n// PINBALL RELAY CONTROLS - ABOVE -\n\n\n// KEYBOARD CONTROLS\n\nconst leftFlipperKey1 = useKeyPress('a');\nconst leftFlipperKey2 = useKeyPress('A');\nconst leftFlipperKey3 = useKeyPress('ArrowLeft');\nconst leftFlipperKey4 = useKeyPress(',');\nconst leftFlipperKey5 = useKeyPress('<');\n\nconst rightFlipperKey1 = useKeyPress('s');\nconst rightFlipperKey2 = useKeyPress('S');\nconst rightFlipperKey3 = useKeyPress('ArrowRight');\nconst rightFlipperKey4 = useKeyPress('.');\nconst rightFlipperKey5 = useKeyPress('>');\n\nconst upperRightFlipperKey1 = useKeyPress('d');\nconst upperRightFlipperKey2 = useKeyPress('D');\nconst upperRightFlipperKey3 = useKeyPress('ArrowDown');\nconst upperRightFlipperKey4 = useKeyPress('/');\nconst upperRightFlipperKey5 = useKeyPress('?');\n\nconst startKey1 = useKeyPress('w');\nconst startKey2 = useKeyPress('W');\nconst startKey3 = useKeyPress(' ');\nconst startKey4 = useKeyPress('ArrowUp');\nconst startKey5 = useKeyPress('N');\nconst startKey6 = useKeyPress('n');\n\nconst shootKey1 = useKeyPress('e');\nconst shootKey2 = useKeyPress('E');\nconst shootKey3 = useKeyPress('p');\nconst shootKey4 = useKeyPress('P');\nconst shootKey5 = useKeyPress('1');\nconst shootKey6 = useKeyPress('M');\nconst shootKey7 = useKeyPress('n');\n\n\nfunction useKeyPress(targetKey) {\n\n    // State for keeping track of whether key is pressed\n    const [keyPressed, setKeyPressed] = useState(false);\n    let duplicateKeyFlag = useState(false);\n    let keyHistoryLength\n\n            // If pressed key is our target key then set to true\n    function downHandler({ key }) {\n                keyHistory.push(key);\n                console.log(\"Key Pressed: \", key);\n            //    console.log(\"Key History Length\", keyHistoryLength);\n                if (keyHistory[keyHistoryLength] == targetKey ){\n                  duplicateKeyFlag = true;\n            //       console.log(\"Duplicate Key \", duplicateKeyFlag);\n                } else {\n                  duplicateKeyFlag = false\n            //      console.log(\"Duplicate Key \", duplicateKeyFlag);\n                };\n\n                if (key === targetKey) {\n                  setKeyPressed(true);\n                  keyPressedTimeStart[0] = new Date().getTime();\n\n        if (duplicateKeyFlag === true){\n      //     console.log(\"Duplicate Key \", duplicateKeyFlag);\n            keyPressedTimeStart[0] = keyPressedTimeStart[0]\n      //      console.log(\"Key Down Time:\", keyPressedTimeStart[0])\n          } else {\n            keyPressedTimeStart[0] = new Date().getTime();\n          }\n\n          switch(targetKey) {\n            case \"a\":\n            case \"A\":\n            case \"ArrowLeft\":\n            case \"<\":\n            case \",\":\n                turnOnLeftFlipper()\n                increaseButtonCount()\n                break;\n            case \"s\":\n            case \"S\":\n            case \"ArrowRight\":\n            case \">\":\n            case \".\":\n                turnOnRightFlipper()\n                turnOnUpperRightFlipper()\n                increaseButtonCount()\n              break;\n            case \"w\":\n            case \"W\":\n            case \" \":\n            case \"ArrowUp\":\n            case \"M\":\n            case \"m\":\n                turnOnShootButton()\n                break;\n            case \"e\":\n            case \"E\":\n            case \"p\":\n            case \"P\":\n            case \"n\":\n            case \"N\":\n            case \"1\":\n                turnOnStartButton()\n                break;\n            case \"d\":\n            case \"D\":\n            case \"ArrowDown\":\n            case \"/\":\n            case \"?\":\n                turnOnUpperRightFlipper()\n                increaseButtonCount()\n                break;\n            default:\n              // code block\n          }\n\n      }\n    }\n\n\n    // If released key is our target key then set to false\n    const upHandler = ({ key }) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n        keyPressedTimeEnd[0] = new Date().getTime();\n      //  console.log(\"Key Up Time:\", keyPressedTimeEnd[0])\n        buttonDuration =   keyPressedTimeEnd[0] - keyPressedTimeStart[0];\n          buttonDuration = buttonDuration.toFixed(2)/1000\n    //    console.log(\"Key Pressed Time (buttonDuration):\", keyPressedTimeEnd[0],keyPressedTimeStart[0], buttonDuration)\n\n        switch(targetKey) {\n            case \"a\":\n            case \"A\":\n            case \"ArrowLeft\":\n            case \"<\":\n            case \",\":\n            turnOffLeftFlipper()\n            break;\n\n            case \"s\":\n            case \"S\":\n            case \"ArrowRight\":\n            case \">\":\n            case \".\":\n            turnOffRightFlipper()\n            turnOffUpperRightFlipper()\n            break;\n\n            case \"w\":\n            case \"W\":\n            case \" \":\n            case \"ArrowUp\":\n            case \"M\":\n            case \"m\":\n            turnOffShootButton()\n            break;\n\n            case \"e\":\n            case \"E\":\n            case \"p\":\n            case \"P\":\n            case \"n\":\n            case \"N\":\n            case \"1\":\n            turnOffStartButton()\n            break;\n\n            case \"d\":\n            case \"D\":\n            case \"ArrowDown\":\n            case \"/\":\n            case \"?\":\n            turnOffUpperRightFlipper()\n            break;\n          default:\n            // code block\n        }\n\n      }\n    }\n\n    // Add event listeners to listen for key presses\n    useEffect(() => {\n      window.addEventListener('keydown', downHandler);\n      window.addEventListener('keyup', upHandler);\n      // Remove event listeners on cleanup\n      return () => {\n        window.removeEventListener('keydown', downHandler);\n        window.removeEventListener('keyup', upHandler);\n      };\n    }, []); // Empty array ensures that effect is only run on mount and unmount\n\n    return keyPressed;\n  } // end function useKeyPress(targetKey)\n\nreturn (<></>)\n}\n"]},"metadata":{},"sourceType":"module"}