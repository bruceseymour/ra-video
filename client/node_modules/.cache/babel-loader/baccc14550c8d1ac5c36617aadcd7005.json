{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.WellKnownErrorsPlugin = void 0;\n\nvar _webpackModuleError = require(\"./webpackModuleError\");\n\nclass WellKnownErrorsPlugin {\n  apply(compiler) {\n    compiler.hooks.compilation.tap('WellKnownErrorsPlugin', compilation => {\n      compilation.hooks.afterSeal.tapPromise('WellKnownErrorsPlugin', async () => {\n        var _compilation$errors;\n\n        if ((_compilation$errors = compilation.errors) != null && _compilation$errors.length) {\n          compilation.errors = await Promise.all(compilation.errors.map(async err => {\n            try {\n              const moduleError = await (0, _webpackModuleError.getModuleBuildError)(compilation, err);\n              return moduleError === false ? err : moduleError;\n            } catch (e) {\n              console.log(e);\n              return err;\n            }\n          }));\n        }\n      });\n    });\n  }\n\n}\n\nexports.WellKnownErrorsPlugin = WellKnownErrorsPlugin;","map":{"version":3,"sources":["../../../../../build/webpack/plugins/wellknown-errors-plugin/index.ts"],"names":["WellKnownErrorsPlugin","apply","compiler","compilation","Promise","moduleError","console"],"mappings":";;;;;AACA,IAAA,mBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAEO,MAAMA,qBAAN,CAA4B;AACjCC,EAAAA,KAAK,CAAA,QAAA,EAAqB;AACxBC,IAAAA,QAAQ,CAARA,KAAAA,CAAAA,WAAAA,CAAAA,GAAAA,CAAAA,uBAAAA,EAAyDC,WAAD,IAAiB;AACvEA,MAAAA,WAAW,CAAXA,KAAAA,CAAAA,SAAAA,CAAAA,UAAAA,CAAAA,uBAAAA,EAEE,YAAY;AAAA,YAAA,mBAAA;;AACV,YAAA,CAAA,mBAAA,GAAIA,WAAW,CAAf,MAAA,KAAA,IAAA,IAAIA,mBAAAA,CAAJ,MAAA,EAAgC;AAC9BA,UAAAA,WAAW,CAAXA,MAAAA,GAAqB,MAAMC,OAAO,CAAPA,GAAAA,CACzBD,WAAW,CAAXA,MAAAA,CAAAA,GAAAA,CAAuB,MAAA,GAAA,IAAe;AACpC,gBAAI;AACF,oBAAME,WAAW,GAAG,MAAM,CAAA,GAAA,mBAAA,CAAA,mBAAA,EAAA,WAAA,EAA1B,GAA0B,CAA1B;AAIA,qBAAOA,WAAW,KAAXA,KAAAA,GAAAA,GAAAA,GAAP,WAAA;AACA,aANF,CAME,OAAA,CAAA,EAAU;AACVC,cAAAA,OAAO,CAAPA,GAAAA,CAAAA,CAAAA;AACA,qBAAA,GAAA;AAEH;AAZHH,WACEA,CADyBC,CAA3BD;AAeH;AAnBHA,OAAAA;AADFD,KAAAA;AAF+B;;AAAA","sourcesContent":["import { Compiler } from 'webpack'\nimport { getModuleBuildError } from './webpackModuleError'\n\nexport class WellKnownErrorsPlugin {\n  apply(compiler: Compiler) {\n    compiler.hooks.compilation.tap('WellKnownErrorsPlugin', (compilation) => {\n      compilation.hooks.afterSeal.tapPromise(\n        'WellKnownErrorsPlugin',\n        async () => {\n          if (compilation.errors?.length) {\n            compilation.errors = await Promise.all(\n              compilation.errors.map(async (err) => {\n                try {\n                  const moduleError = await getModuleBuildError(\n                    compilation,\n                    err\n                  )\n                  return moduleError === false ? err : moduleError\n                } catch (e) {\n                  console.log(e)\n                  return err\n                }\n              })\n            )\n          }\n        }\n      )\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"script"}