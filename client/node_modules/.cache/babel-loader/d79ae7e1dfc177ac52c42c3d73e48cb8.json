{"ast":null,"code":"/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst isDependencyInstalled = require('./isDependencyInstalled');\n\nconst MATCH_ABSOLUTE_URL = /^https?:\\/\\/|^\\/\\//i;\n\nfunction fetchImageDimensions(pathOrUrl) {\n  if (MATCH_ABSOLUTE_URL.test(pathOrUrl)) {\n    return fetchImageDimensionsFromUrl(pathOrUrl);\n  }\n\n  return fetchImageDimensionsFromFile(pathOrUrl);\n}\n\nfunction fetchImageDimensionsFromUrl(url) {\n  return probe(url);\n}\n\nasync function fetchImageDimensionsFromFile(path) {\n  // AMP Optimizer might run in a browser\n  if (!isDependencyInstalled('fs')) {\n    throw new Error('No access to the file system');\n  }\n\n  const fs = require('fs');\n\n  if (!fs.existsSync(path)) {\n    throw new Error('Could not resolve file: ' + path);\n  }\n\n  const stream = fs.createReadStream(path);\n  return probe(stream);\n}\n\nfunction probe(input) {\n  if (!isDependencyInstalled('probe-image-size')) {\n    throw new Error('Missing optional dependency: probe-image-size');\n  }\n\n  return require('probe-image-size')(input);\n}\n\nmodule.exports = {\n  fetchImageDimensions,\n  fetchImageDimensionsFromFile,\n  fetchImageDimensionsFromUrl\n};","map":{"version":3,"sources":["/Users/bruceseymour/ra-video/client/node_modules/@ampproject/toolbox-optimizer/lib/fetchImageDimensions.js"],"names":["isDependencyInstalled","require","MATCH_ABSOLUTE_URL","fetchImageDimensions","pathOrUrl","test","fetchImageDimensionsFromUrl","fetchImageDimensionsFromFile","url","probe","path","Error","fs","existsSync","stream","createReadStream","input","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,qBAAqB,GAAGC,OAAO,CAAC,yBAAD,CAArC;;AAEA,MAAMC,kBAAkB,GAAG,qBAA3B;;AAEA,SAASC,oBAAT,CAA8BC,SAA9B,EAAyC;AACvC,MAAIF,kBAAkB,CAACG,IAAnB,CAAwBD,SAAxB,CAAJ,EAAwC;AACtC,WAAOE,2BAA2B,CAACF,SAAD,CAAlC;AACD;;AACD,SAAOG,4BAA4B,CAACH,SAAD,CAAnC;AACD;;AAED,SAASE,2BAAT,CAAqCE,GAArC,EAA0C;AACxC,SAAOC,KAAK,CAACD,GAAD,CAAZ;AACD;;AAED,eAAeD,4BAAf,CAA4CG,IAA5C,EAAkD;AAChD;AACA,MAAI,CAACV,qBAAqB,CAAC,IAAD,CAA1B,EAAkC;AAChC,UAAM,IAAIW,KAAJ,CAAU,8BAAV,CAAN;AACD;;AACD,QAAMC,EAAE,GAAGX,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAI,CAACW,EAAE,CAACC,UAAH,CAAcH,IAAd,CAAL,EAA0B;AACxB,UAAM,IAAIC,KAAJ,CAAU,6BAA6BD,IAAvC,CAAN;AACD;;AACD,QAAMI,MAAM,GAAGF,EAAE,CAACG,gBAAH,CAAoBL,IAApB,CAAf;AACA,SAAOD,KAAK,CAACK,MAAD,CAAZ;AACD;;AAED,SAASL,KAAT,CAAeO,KAAf,EAAsB;AACpB,MAAI,CAAChB,qBAAqB,CAAC,kBAAD,CAA1B,EAAgD;AAC9C,UAAM,IAAIW,KAAJ,CAAU,+CAAV,CAAN;AACD;;AACD,SAAOV,OAAO,CAAC,kBAAD,CAAP,CAA4Be,KAA5B,CAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACff,EAAAA,oBADe;AAEfI,EAAAA,4BAFe;AAGfD,EAAAA;AAHe,CAAjB","sourcesContent":["/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst isDependencyInstalled = require('./isDependencyInstalled');\n\nconst MATCH_ABSOLUTE_URL = /^https?:\\/\\/|^\\/\\//i;\n\nfunction fetchImageDimensions(pathOrUrl) {\n  if (MATCH_ABSOLUTE_URL.test(pathOrUrl)) {\n    return fetchImageDimensionsFromUrl(pathOrUrl);\n  }\n  return fetchImageDimensionsFromFile(pathOrUrl);\n}\n\nfunction fetchImageDimensionsFromUrl(url) {\n  return probe(url);\n}\n\nasync function fetchImageDimensionsFromFile(path) {\n  // AMP Optimizer might run in a browser\n  if (!isDependencyInstalled('fs')) {\n    throw new Error('No access to the file system');\n  }\n  const fs = require('fs');\n  if (!fs.existsSync(path)) {\n    throw new Error('Could not resolve file: ' + path);\n  }\n  const stream = fs.createReadStream(path);\n  return probe(stream);\n}\n\nfunction probe(input) {\n  if (!isDependencyInstalled('probe-image-size')) {\n    throw new Error('Missing optional dependency: probe-image-size');\n  }\n  return require('probe-image-size')(input);\n}\n\nmodule.exports = {\n  fetchImageDimensions,\n  fetchImageDimensionsFromFile,\n  fetchImageDimensionsFromUrl,\n};\n"]},"metadata":{},"sourceType":"script"}