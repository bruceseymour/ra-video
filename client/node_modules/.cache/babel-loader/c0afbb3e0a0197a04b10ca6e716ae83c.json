{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.getAnonymousMeta = getAnonymousMeta;\n\nvar _isDocker = _interopRequireDefault(require(\"next/dist/compiled/is-docker\"));\n\nvar _isWsl = _interopRequireDefault(require(\"next/dist/compiled/is-wsl\"));\n\nvar _os = _interopRequireDefault(require(\"os\"));\n\nvar ciEnvironment = _interopRequireWildcard(require(\"./ci-info\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nlet traits;\n\nfunction getAnonymousMeta() {\n  if (traits) {\n    return traits;\n  }\n\n  const cpus = _os.default.cpus() || [];\n  const {\n    NOW_REGION\n  } = process.env;\n  traits = {\n    // Software information\n    systemPlatform: _os.default.platform(),\n    systemRelease: _os.default.release(),\n    systemArchitecture: _os.default.arch(),\n    // Machine information\n    cpuCount: cpus.length,\n    cpuModel: cpus.length ? cpus[0].model : null,\n    cpuSpeed: cpus.length ? cpus[0].speed : null,\n    memoryInMb: Math.trunc(_os.default.totalmem() / Math.pow(1024, 2)),\n    // Environment information\n    isDocker: (0, _isDocker.default)(),\n    isNowDev: NOW_REGION === 'dev1',\n    isWsl: _isWsl.default,\n    isCI: ciEnvironment.isCI,\n    ciName: ciEnvironment.isCI && ciEnvironment.name || null,\n    nextVersion: \"10.0.5\"\n  };\n  return traits;\n}","map":{"version":3,"sources":["../../telemetry/anonymous-meta.ts"],"names":["cpus","os","process","systemPlatform","systemRelease","systemArchitecture","cpuCount","cpuModel","cpuSpeed","memoryInMb","Math","isDocker","isNowDev","NOW_REGION","isWsl","isWslBoolean","isCI","ciEnvironment","ciName","nextVersion","__NEXT_VERSION"],"mappings":";;;;;AAAA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,8BAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,2BAAA,CAAA,CAAA;;AACA,IAAA,GAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;;AAEA,IAAA,aAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA;;AAAA,IAAA,MAAA;;AAEO,SAAA,gBAAA,GAA2C;AAChD,MAAA,MAAA,EAAY;AACV,WAAA,MAAA;AAGF;;AAAA,QAAMA,IAAI,GAAGC,GAAAA,CAAAA,OAAAA,CAAAA,IAAAA,MAAb,EAAA;AACA,QAAM;AAAA,IAAA;AAAA,MAAiBC,OAAO,CAA9B,GAAA;AACA,EAAA,MAAM,GAAG;AACP;AACAC,IAAAA,cAAc,EAAEF,GAAAA,CAAAA,OAAAA,CAFT,QAESA,EAFT;AAGPG,IAAAA,aAAa,EAAEH,GAAAA,CAAAA,OAAAA,CAHR,OAGQA,EAHR;AAIPI,IAAAA,kBAAkB,EAAEJ,GAAAA,CAAAA,OAAAA,CAJb,IAIaA,EAJb;AAKP;AACAK,IAAAA,QAAQ,EAAEN,IAAI,CANP,MAAA;AAOPO,IAAAA,QAAQ,EAAEP,IAAI,CAAJA,MAAAA,GAAcA,IAAI,CAAJA,CAAI,CAAJA,CAAdA,KAAAA,GAPH,IAAA;AAQPQ,IAAAA,QAAQ,EAAER,IAAI,CAAJA,MAAAA,GAAcA,IAAI,CAAJA,CAAI,CAAJA,CAAdA,KAAAA,GARH,IAAA;AASPS,IAAAA,UAAU,EAAEC,IAAI,CAAJA,KAAAA,CAAWT,GAAAA,CAAAA,OAAAA,CAAAA,QAAAA,KAAgBS,IAAI,CAAJA,GAAAA,CAAAA,IAAAA,EAThC,CASgCA,CAA3BA,CATL;AAUP;AACAC,IAAAA,QAAQ,EAAE,CAAA,GAAA,SAAA,CAXH,OAWG,GAXH;AAYPC,IAAAA,QAAQ,EAAEC,UAAU,KAZb,MAAA;AAaPC,IAAAA,KAAK,EAAEC,MAAAA,CAbA,OAAA;AAcPC,IAAAA,IAAI,EAAEC,aAAa,CAdZ,IAAA;AAePC,IAAAA,MAAM,EAAGD,aAAa,CAAbA,IAAAA,IAAsBA,aAAa,CAApC,IAACA,IAfF,IAAA;AAgBPE,IAAAA,WAAW,EAAEjB;AAhBN,GAAT;AAgBeA,SAAYkB,MAAZlB;AAhBf","sourcesContent":["import isDockerFunction from 'next/dist/compiled/is-docker'\nimport isWslBoolean from 'next/dist/compiled/is-wsl'\nimport os from 'os'\n\nimport * as ciEnvironment from './ci-info'\n\ntype AnonymousMeta = {\n  systemPlatform: NodeJS.Platform\n  systemRelease: string\n  systemArchitecture: string\n  cpuCount: number\n  cpuModel: string | null\n  cpuSpeed: number | null\n  memoryInMb: number\n  isDocker: boolean\n  isNowDev: boolean\n  isWsl: boolean\n  isCI: boolean\n  ciName: string | null\n  nextVersion: string\n}\n\nlet traits: AnonymousMeta | undefined\n\nexport function getAnonymousMeta(): AnonymousMeta {\n  if (traits) {\n    return traits\n  }\n\n  const cpus = os.cpus() || []\n  const { NOW_REGION } = process.env\n  traits = {\n    // Software information\n    systemPlatform: os.platform(),\n    systemRelease: os.release(),\n    systemArchitecture: os.arch(),\n    // Machine information\n    cpuCount: cpus.length,\n    cpuModel: cpus.length ? cpus[0].model : null,\n    cpuSpeed: cpus.length ? cpus[0].speed : null,\n    memoryInMb: Math.trunc(os.totalmem() / Math.pow(1024, 2)),\n    // Environment information\n    isDocker: isDockerFunction(),\n    isNowDev: NOW_REGION === 'dev1',\n    isWsl: isWslBoolean,\n    isCI: ciEnvironment.isCI,\n    ciName: (ciEnvironment.isCI && ciEnvironment.name) || null,\n    nextVersion: process.env.__NEXT_VERSION as string,\n  }\n\n  return traits\n}\n"]},"metadata":{},"sourceType":"script"}