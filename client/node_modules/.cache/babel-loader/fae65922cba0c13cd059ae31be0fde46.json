{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.DropClientPage = exports.ampFirstEntryNamesMap = void 0;\n\nvar _webpack = require(\"webpack\");\n\nvar _constants = require(\"../../../next-server/lib/constants\");\n\nconst isWebpack5 = parseInt(_webpack.version) === 5;\nconst ampFirstEntryNamesMap = new WeakMap();\nexports.ampFirstEntryNamesMap = ampFirstEntryNamesMap;\nconst PLUGIN_NAME = 'DropAmpFirstPagesPlugin'; // Prevents outputting client pages when they are not needed\n\nclass DropClientPage {\n  constructor() {\n    this.ampPages = new Set();\n  }\n\n  apply(compiler) {\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation, {\n      normalModuleFactory\n    }) => {\n      // Recursively look up the issuer till it ends up at the root\n      function findEntryModule(mod) {\n        const queue = new Set([mod]);\n\n        for (const module of queue) {\n          if (isWebpack5) {\n            // @ts-ignore TODO: webpack 5 types\n            const incomingConnections = compilation.moduleGraph.getIncomingConnections(module);\n\n            for (const incomingConnection of incomingConnections) {\n              if (!incomingConnection.originModule) return module;\n              queue.add(incomingConnection.originModule);\n            }\n\n            continue;\n          }\n\n          for (const reason of module.reasons) {\n            if (!reason.module) return module;\n            queue.add(reason.module);\n          }\n        }\n\n        return null;\n      }\n\n      function handler(parser) {\n        function markAsAmpFirst() {\n          const entryModule = findEntryModule(parser.state.module);\n\n          if (!entryModule) {\n            return;\n          } // @ts-ignore buildInfo exists on Module\n\n\n          entryModule.buildInfo.NEXT_ampFirst = true;\n        }\n\n        if (isWebpack5) {\n          parser.hooks.preDeclarator.tap(PLUGIN_NAME, declarator => {\n            var _declarator$id;\n\n            if ((declarator == null ? void 0 : (_declarator$id = declarator.id) == null ? void 0 : _declarator$id.name) === _constants.STRING_LITERAL_DROP_BUNDLE) {\n              markAsAmpFirst();\n            }\n          });\n          return;\n        }\n\n        parser.hooks.varDeclaration.for(_constants.STRING_LITERAL_DROP_BUNDLE).tap(PLUGIN_NAME, markAsAmpFirst);\n      }\n\n      normalModuleFactory.hooks.parser.for('javascript/auto').tap(PLUGIN_NAME, handler);\n      normalModuleFactory.hooks.parser.for('javascript/esm').tap(PLUGIN_NAME, handler);\n      normalModuleFactory.hooks.parser.for('javascript/dynamic').tap(PLUGIN_NAME, handler);\n\n      if (!ampFirstEntryNamesMap.has(compilation)) {\n        ampFirstEntryNamesMap.set(compilation, []);\n      }\n\n      const ampFirstEntryNamesItem = ampFirstEntryNamesMap.get(compilation);\n      compilation.hooks.seal.tap(PLUGIN_NAME, () => {\n        if (isWebpack5) {\n          for (const [name, entryData] of compilation.entries) {\n            for (const dependency of entryData.dependencies) {\n              var _module$buildInfo; // @ts-ignore TODO: webpack 5 types\n\n\n              const module = compilation.moduleGraph.getModule(dependency);\n\n              if (module != null && (_module$buildInfo = module.buildInfo) != null && _module$buildInfo.NEXT_ampFirst) {\n                ampFirstEntryNamesItem.push(name); // @ts-ignore @types/webpack has outdated types for webpack 5\n\n                compilation.entries.delete(name);\n              }\n            }\n          }\n\n          return;\n        } // Remove preparedEntrypoint that has bundle drop marker\n        // This will ensure webpack does not create chunks/bundles for this particular entrypoint\n\n\n        for (let i = compilation._preparedEntrypoints.length - 1; i >= 0; i--) {\n          var _entrypoint$module, _entrypoint$module$bu;\n\n          const entrypoint = compilation._preparedEntrypoints[i];\n\n          if (entrypoint != null && (_entrypoint$module = entrypoint.module) != null && (_entrypoint$module$bu = _entrypoint$module.buildInfo) != null && _entrypoint$module$bu.NEXT_ampFirst) {\n            ampFirstEntryNamesItem.push(entrypoint.name);\n\n            compilation._preparedEntrypoints.splice(i, 1);\n          }\n        }\n\n        for (let i = compilation.entries.length - 1; i >= 0; i--) {\n          var _entryModule$buildInf;\n\n          const entryModule = compilation.entries[i];\n\n          if (entryModule != null && (_entryModule$buildInf = entryModule.buildInfo) != null && _entryModule$buildInf.NEXT_ampFirst) {\n            compilation.entries.splice(i, 1);\n          }\n        }\n      });\n    });\n  }\n\n}\n\nexports.DropClientPage = DropClientPage;","map":{"version":3,"sources":["../../../../build/webpack/plugins/next-drop-client-page-plugin.ts"],"names":["isWebpack5","parseInt","version","ampFirstEntryNamesMap","PLUGIN_NAME","DropClientPage","apply","compiler","queue","incomingConnections","compilation","incomingConnection","module","reason","entryModule","findEntryModule","parser","declarator","STRING_LITERAL_DROP_BUNDLE","markAsAmpFirst","normalModuleFactory","ampFirstEntryNamesItem","entryData","i","entrypoint"],"mappings":"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","sourcesContent":["import {\n  Compiler,\n  compilation as CompilationType,\n  Plugin,\n  version,\n} from 'webpack'\nimport { STRING_LITERAL_DROP_BUNDLE } from '../../../next-server/lib/constants'\n\nconst isWebpack5 = parseInt(version!) === 5\n\nexport const ampFirstEntryNamesMap: WeakMap<\n  CompilationType.Compilation,\n  string[]\n> = new WeakMap()\n\nconst PLUGIN_NAME = 'DropAmpFirstPagesPlugin'\n\n// Prevents outputting client pages when they are not needed\nexport class DropClientPage implements Plugin {\n  ampPages = new Set()\n\n  apply(compiler: Compiler) {\n    compiler.hooks.compilation.tap(\n      PLUGIN_NAME,\n      (compilation: any, { normalModuleFactory }: any) => {\n        // Recursively look up the issuer till it ends up at the root\n        function findEntryModule(mod: any): CompilationType.Module | null {\n          const queue = new Set([mod])\n          for (const module of queue) {\n            if (isWebpack5) {\n              // @ts-ignore TODO: webpack 5 types\n              const incomingConnections = compilation.moduleGraph.getIncomingConnections(\n                module\n              )\n\n              for (const incomingConnection of incomingConnections) {\n                if (!incomingConnection.originModule) return module\n                queue.add(incomingConnection.originModule)\n              }\n              continue\n            }\n\n            for (const reason of module.reasons) {\n              if (!reason.module) return module\n              queue.add(reason.module)\n            }\n          }\n\n          return null\n        }\n\n        function handler(parser: any) {\n          function markAsAmpFirst() {\n            const entryModule = findEntryModule(parser.state.module)\n\n            if (!entryModule) {\n              return\n            }\n\n            // @ts-ignore buildInfo exists on Module\n            entryModule.buildInfo.NEXT_ampFirst = true\n          }\n\n          if (isWebpack5) {\n            parser.hooks.preDeclarator.tap(PLUGIN_NAME, (declarator: any) => {\n              if (declarator?.id?.name === STRING_LITERAL_DROP_BUNDLE) {\n                markAsAmpFirst()\n              }\n            })\n            return\n          }\n\n          parser.hooks.varDeclaration\n            .for(STRING_LITERAL_DROP_BUNDLE)\n            .tap(PLUGIN_NAME, markAsAmpFirst)\n        }\n\n        normalModuleFactory.hooks.parser\n          .for('javascript/auto')\n          .tap(PLUGIN_NAME, handler)\n\n        normalModuleFactory.hooks.parser\n          .for('javascript/esm')\n          .tap(PLUGIN_NAME, handler)\n\n        normalModuleFactory.hooks.parser\n          .for('javascript/dynamic')\n          .tap(PLUGIN_NAME, handler)\n\n        if (!ampFirstEntryNamesMap.has(compilation)) {\n          ampFirstEntryNamesMap.set(compilation, [])\n        }\n\n        const ampFirstEntryNamesItem = ampFirstEntryNamesMap.get(\n          compilation\n        ) as string[]\n\n        compilation.hooks.seal.tap(PLUGIN_NAME, () => {\n          if (isWebpack5) {\n            for (const [name, entryData] of compilation.entries) {\n              for (const dependency of entryData.dependencies) {\n                // @ts-ignore TODO: webpack 5 types\n                const module = compilation.moduleGraph.getModule(dependency)\n                if (module?.buildInfo?.NEXT_ampFirst) {\n                  ampFirstEntryNamesItem.push(name)\n                  // @ts-ignore @types/webpack has outdated types for webpack 5\n                  compilation.entries.delete(name)\n                }\n              }\n            }\n            return\n          }\n          // Remove preparedEntrypoint that has bundle drop marker\n          // This will ensure webpack does not create chunks/bundles for this particular entrypoint\n          for (\n            let i = compilation._preparedEntrypoints.length - 1;\n            i >= 0;\n            i--\n          ) {\n            const entrypoint = compilation._preparedEntrypoints[i]\n            if (entrypoint?.module?.buildInfo?.NEXT_ampFirst) {\n              ampFirstEntryNamesItem.push(entrypoint.name)\n              compilation._preparedEntrypoints.splice(i, 1)\n            }\n          }\n\n          for (let i = compilation.entries.length - 1; i >= 0; i--) {\n            const entryModule = compilation.entries[i]\n            if (entryModule?.buildInfo?.NEXT_ampFirst) {\n              compilation.entries.splice(i, 1)\n            }\n          }\n        })\n      }\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}