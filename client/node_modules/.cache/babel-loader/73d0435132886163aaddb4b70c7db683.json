{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.getCssError = getCssError;\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _simpleWebpackError = require(\"./simpleWebpackError\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst chalk = new _chalk.default.constructor({\n  enabled: true\n});\nconst regexCssError = /^(?:CssSyntaxError|SyntaxError)\\n\\n\\(([0-9]+):([0-9]*)\\) ([\\s\\S]*)$/;\n\nfunction getCssError(fileName, err) {\n  if (!((err.name === 'CssSyntaxError' || err.name === 'SyntaxError') && err.stack === false && !(err instanceof SyntaxError))) {\n    return false;\n  } // https://github.com/postcss/postcss-loader/blob/d6931da177ac79707bd758436e476036a55e4f59/src/Error.js\n\n\n  const res = regexCssError.exec(err.message);\n\n  if (res) {\n    const [, _lineNumer, _column, reason] = res;\n    const lineNumber = Math.max(1, parseInt(_lineNumer, 10));\n    const column = Math.max(1, parseInt(_column, 10));\n    return new _simpleWebpackError.SimpleWebpackError(`${chalk.cyan(fileName)}:${chalk.yellow(lineNumber.toString())}:${chalk.yellow(column.toString())}`, chalk.red.bold('Syntax error').concat(`: ${reason}`));\n  }\n\n  return false;\n}","map":{"version":3,"sources":["../../../../../build/webpack/plugins/wellknown-errors-plugin/parseCss.ts"],"names":["chalk","Chalk","enabled","regexCssError","err","res","lineNumber","Math","parseInt","column","SimpleWebpackError","reason"],"mappings":";;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;;;;;AAEA;;AAAA,MAAMA,KAAK,GAAG,IAAIC,MAAAA,CAAAA,OAAAA,CAAJ,WAAA,CAAsB;AAAEC,EAAAA,OAAO,EAA7C;AAAoC,CAAtB,CAAd;AACA,MAAMC,aAAa,GAAnB,qEAAA;;AAEO,SAAA,WAAA,CAAA,QAAA,EAAA,GAAA,EAGuB;AAC5B,MACE,EACE,CAACC,GAAG,CAAHA,IAAAA,KAAAA,gBAAAA,IAAiCA,GAAG,CAAHA,IAAAA,KAAlC,aAAA,KACCA,GAAD,CAAA,KAACA,KADD,KAAA,IAEA,EAAEA,GAAG,YAJT,WAII,CAHF,CADF,EAME;AACA,WAAA,KAAA;AAGF,GAX4B,CAW5B;;;AAEA,QAAMC,GAAG,GAAGF,aAAa,CAAbA,IAAAA,CAAmBC,GAAG,CAAlC,OAAYD,CAAZ;;AACA,MAAA,GAAA,EAAS;AACP,UAAM,GAAA,UAAA,EAAA,OAAA,EAAA,MAAA,IAAN,GAAA;AACA,UAAMG,UAAU,GAAGC,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYC,QAAQ,CAAA,UAAA,EAAvC,EAAuC,CAApBD,CAAnB;AACA,UAAME,MAAM,GAAGF,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAYC,QAAQ,CAAA,OAAA,EAAnC,EAAmC,CAApBD,CAAf;AAEA,WAAO,IAAIG,mBAAAA,CAAJ,kBAAA,CACJ,GAAEV,KAAK,CAALA,IAAAA,CAAAA,QAAAA,CAAqB,IAAGA,KAAK,CAALA,MAAAA,CACzBM,UAAU,CADeN,QACzBM,EADyBN,CAEzB,IAAGA,KAAK,CAALA,MAAAA,CAAaS,MAAM,CAAnBT,QAAaS,EAAbT,CAHA,EAAA,EAILA,KAAK,CAALA,GAAAA,CAAAA,IAAAA,CAAAA,cAAAA,EAAAA,MAAAA,CAAuC,KAAIW,MAJ7C,EAIEX,CAJK,CAAP;AAQF;;AAAA,SAAA,KAAA;AACD","sourcesContent":["import Chalk from 'chalk'\nimport { SimpleWebpackError } from './simpleWebpackError'\n\nconst chalk = new Chalk.constructor({ enabled: true })\nconst regexCssError = /^(?:CssSyntaxError|SyntaxError)\\n\\n\\((\\d+):(\\d*)\\) (.*)$/s\n\nexport function getCssError(\n  fileName: string,\n  err: Error\n): SimpleWebpackError | false {\n  if (\n    !(\n      (err.name === 'CssSyntaxError' || err.name === 'SyntaxError') &&\n      (err as any).stack === false &&\n      !(err instanceof SyntaxError)\n    )\n  ) {\n    return false\n  }\n\n  // https://github.com/postcss/postcss-loader/blob/d6931da177ac79707bd758436e476036a55e4f59/src/Error.js\n\n  const res = regexCssError.exec(err.message)\n  if (res) {\n    const [, _lineNumer, _column, reason] = res\n    const lineNumber = Math.max(1, parseInt(_lineNumer, 10))\n    const column = Math.max(1, parseInt(_column, 10))\n\n    return new SimpleWebpackError(\n      `${chalk.cyan(fileName)}:${chalk.yellow(\n        lineNumber.toString()\n      )}:${chalk.yellow(column.toString())}`,\n      chalk.red.bold('Syntax error').concat(`: ${reason}`)\n    )\n  }\n\n  return false\n}\n"]},"metadata":{},"sourceType":"script"}