{"ast":null,"code":"/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst {\n  appendChild,\n  createElement,\n  hasAttribute,\n  insertAfter,\n  nextNode,\n  firstChildByTag\n} = require('../NodeUtils');\n\nconst {\n  findMetaViewport,\n  skipNodeAndChildren\n} = require('../HtmlDomHelper');\n\nconst {\n  isValidImageSrcURL\n} = require('../URLUtils');\n\nconst amphtml = require('../AmpConstants'); // Images smaller than 150px are considered tiny\n\n\nconst TINY_IMG_THRESHOLD = 150; // Maximum number of hero images defined via data-hero\n\nconst DATA_HERO_MAX = 2;\n/**\n * PreloadHeroImage - this transformers optimizes image rendering times for hero images. For hero\n * images it will:\n *\n * 1. Inject a preload hint (if possible)\n * 2. Generate an img tag enabling the browser to render the image without the AMP runtime being loaded.\n *\n * Hero images are either identified automatically or can be explicitly defined by adding an `data-hero`\n * attribute to the element.\n *\n * This transformer supports the following options:\n *\n * * `preloadHeroImage`: [true|false] - enables or disables hero image preloading. The default is `true`.\n */\n\nclass PreloadHeroImage {\n  constructor(config) {\n    this.log = config.log;\n    this.enabled = config.preloadHeroImage !== false;\n  }\n\n  async transform(root, params) {\n    if (!this.enabled || params.preloadHeroImage === false) {\n      return;\n    }\n\n    const html = firstChildByTag(root, 'html');\n    const head = firstChildByTag(html, 'head');\n    const body = firstChildByTag(html, 'body');\n    if (!body || !head) return;\n    const heroImages = this.findHeroImages(body);\n    let referenceNode = findMetaViewport(head);\n    let heroImageCount = heroImages.length;\n\n    if (heroImageCount > DATA_HERO_MAX) {\n      this.log.warn(`Found ${heroImageCount} hero elements on the page. AMP currently only supports a maximum of ${DATA_HERO_MAX} elements.`);\n      heroImageCount = DATA_HERO_MAX;\n    }\n\n    const isAmpStory = amphtml.isAmpStory(head);\n\n    for (let i = 0; i < heroImageCount; i++) {\n      const heroImage = heroImages[i];\n      this.generatePreload(heroImage, head, referenceNode); // AMP Stories don't support ssr'd amp-img yet\n      // See https://github.com/ampproject/amphtml/issues/29850\n\n      if (!isAmpStory) {\n        this.generateImg(heroImage.ampImg);\n      }\n    }\n  }\n\n  generatePreload(heroImage, head, referenceNode) {\n    if (heroImage.srcset) {\n      this.log.debug(\"Could not preload hero image as it's using srcset, which is currently only supported Chromium-based browsers (see https://web.dev/preload-responsive-images/).\", heroImage.src);\n      return;\n    }\n\n    if (this.hasExistingImagePreload(head, heroImage.src)) {\n      return;\n    }\n\n    const preload = createElement('link', {\n      'rel': 'preload',\n      'href': heroImage.src,\n      'as': 'image',\n      'data-hero': ''\n    });\n\n    if (heroImage.media) {\n      preload.attribs.media = heroImage.media;\n    }\n\n    insertAfter(head, preload, referenceNode);\n  }\n\n  hasExistingImagePreload(head, src) {\n    return head.children.some(node => {\n      if (node.tagName !== 'link') {\n        return false;\n      }\n\n      if (!hasAttribute(node, 'rel')) {\n        return false;\n      }\n\n      if (node.attribs.rel !== 'preload') {\n        return false;\n      }\n\n      if (node.attribs.as !== 'image') {\n        return false;\n      }\n\n      return node.attribs.href === src;\n    });\n  }\n\n  findHeroImages(root) {\n    let heroImageCandidate = null;\n    let heroImages = [];\n    let node = root; // Walk over all nodes in the body\n\n    while (node !== null) {\n      // Look for data-hero attribute\n      this.addImageWithDataHero(node, heroImages); // Auto detect a hero image in case data-hero is not used\n\n      if (!heroImageCandidate && heroImages.length === 0) {\n        heroImageCandidate = this.isCandidateHeroImage(node);\n      }\n\n      if (amphtml.isTemplate(node)) {\n        // Ignore images inside templates\n        node = skipNodeAndChildren(node);\n      } else {\n        node = nextNode(node);\n      }\n    } // Optimize data-hero element if defined\n\n\n    if (heroImages.length > 0) {\n      return heroImages;\n    } // Fallback to auto detected hero image if available\n\n\n    if (heroImageCandidate) {\n      return [heroImageCandidate];\n    } // No hero images to optimize\n\n\n    return [];\n  }\n\n  addImageWithDataHero(node, heroImages) {\n    if (node.tagName === 'amp-img' && hasAttribute(node, 'data-hero')) {\n      const {\n        src,\n        media,\n        srcset\n      } = node.attribs;\n      heroImages.push({\n        ampImg: node,\n        src,\n        media,\n        srcset\n      });\n    } else if (this.isAmpIframe(node) && hasAttribute(node, 'data-hero')) {\n      const placeholder = this.getPlaceholderImage(node);\n\n      if (placeholder) {\n        heroImages.push(placeholder);\n      }\n    }\n  }\n\n  isCandidateHeroImage(node) {\n    if (!node.tagName) {\n      return null;\n    }\n\n    const layout = node.attribs ? node.attribs.layout : '';\n\n    if (layout === 'nodisplay') {\n      return null;\n    }\n\n    if (node.tagName === 'amp-img') {\n      return this.isCandidateImageForPreloading(node);\n    }\n\n    if (node.tagName === 'amp-video') {\n      return this.isCandidateVideoPosterImage(node);\n    }\n\n    if (this.isAmpIframe(node)) {\n      return this.isCandidateIframePlaceholderImage(node);\n    }\n\n    return null;\n  }\n\n  isAmpIframe(node) {\n    return node.tagName === 'amp-iframe' || node.tagName === 'amp-video-iframe';\n  } // For a given <amp-video> node or any node that has poster attribute, and\n  // qualifies as hero image, returns the HeroImageSrcs.\n\n\n  isCandidateVideoPosterImage(ampVideo) {\n    const poster = ampVideo.attribs.poster;\n    if (!poster) return null;\n\n    if (!isValidImageSrcURL(poster)) {\n      return null;\n    }\n\n    const {\n      layout,\n      width,\n      height,\n      media\n    } = ampVideo.attribs;\n\n    if (this.isTinyNode(layout, width, height)) {\n      return null;\n    }\n\n    return {\n      src: poster,\n      media,\n      srcset: ''\n    };\n  }\n\n  isCandidateIframePlaceholderImage(ampIframe) {\n    // Placeholder amp-img is required to preload image for iframe.\n    if (!ampIframe.children || ampIframe.children.length === 0) {\n      return null;\n    }\n\n    const {\n      layout,\n      width,\n      height\n    } = ampIframe.attribs;\n    if (this.isTinyNode(layout, width, height)) return null;\n    return this.getPlaceholderImage(ampIframe);\n  }\n\n  getPlaceholderImage(ampIframe) {\n    for (const child of ampIframe.children) {\n      if (child.tagName === 'amp-img' && hasAttribute(child, 'placeholder') && isValidImageSrcURL(child.attribs.src)) {\n        return {\n          ampImg: child,\n          src: child.attribs.src,\n          media: ampIframe.attribs.media,\n          srcset: child.attribs.srcset || ''\n        };\n      }\n    }\n\n    return null;\n  } // Checks if node qualifies to be a hero image. Returns HeroImageSrcs if the\n  // node is a hero image. The hero image here can come from one of <amp-img>,\n  // <amp-video>, <amp-iframe>, <amp-video-iframe>.\n\n\n  isCandidateImageForPreloading(ampImg) {\n    const src = ampImg.attribs.src;\n\n    if (!src) {\n      return null;\n    }\n\n    if (!isValidImageSrcURL(src)) {\n      return null;\n    }\n\n    let {\n      width,\n      height,\n      srcset,\n      layout,\n      media\n    } = ampImg.attribs;\n\n    if (!width && !height) {\n      if (layout === 'fill') {\n        ({\n          width,\n          height\n        } = this.nodeDimensionsFromParent(ampImg));\n      } else {\n        return null;\n      }\n    }\n\n    if (this.isTinyNode(layout, width, height)) {\n      return null;\n    }\n\n    return {\n      ampImg,\n      src,\n      srcset,\n      media\n    };\n  } // Any node with width or height less than 150 pixels and a non-responsive layout.\n\n\n  isTinyNode(layout, width, height) {\n    if (width <= 0 || height <= 0) return true;\n\n    if (layout === 'intrinsic' || layout === 'responsive') {\n      return false;\n    }\n\n    return width < TINY_IMG_THRESHOLD || height < TINY_IMG_THRESHOLD;\n  }\n\n  nodeDimensionsFromParent(node) {\n    while (node.parent) {\n      node = node.parent;\n\n      if (!node.attribs) {\n        continue;\n      }\n\n      const width = node.attribs.width;\n      const height = node.attribs.height;\n\n      if (!width && !height) {\n        continue;\n      }\n\n      return {\n        width,\n        height\n      };\n    }\n\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n\n  generateImg(node) {\n    if (!node) {\n      return;\n    }\n\n    const imgNode = createElement('img', {\n      class: 'i-amphtml-fill-content i-amphtml-replaced-content',\n      decoding: 'async'\n    });\n    const attributesToCopy = ['alt', 'attribution', 'object-fit', 'object-position', 'referrerpolicy', 'src', 'srcset', 'sizes', 'title'];\n\n    for (const attr of attributesToCopy) {\n      if (hasAttribute(node, attr)) {\n        imgNode.attribs[attr] = node.attribs[attr];\n      }\n    }\n\n    node.attribs['i-amphtml-ssr'] = '';\n    node.attribs['data-hero'] = '';\n    appendChild(node, imgNode);\n  }\n\n}\n/** @module PreloadHeroImage */\n\n\nmodule.exports = PreloadHeroImage;","map":{"version":3,"sources":["/Users/bruceseymour/ra-video/client/node_modules/@ampproject/toolbox-optimizer/lib/transformers/PreloadHeroImage.js"],"names":["appendChild","createElement","hasAttribute","insertAfter","nextNode","firstChildByTag","require","findMetaViewport","skipNodeAndChildren","isValidImageSrcURL","amphtml","TINY_IMG_THRESHOLD","DATA_HERO_MAX","PreloadHeroImage","constructor","config","log","enabled","preloadHeroImage","transform","root","params","html","head","body","heroImages","findHeroImages","referenceNode","heroImageCount","length","warn","isAmpStory","i","heroImage","generatePreload","generateImg","ampImg","srcset","debug","src","hasExistingImagePreload","preload","media","attribs","children","some","node","tagName","rel","as","href","heroImageCandidate","addImageWithDataHero","isCandidateHeroImage","isTemplate","push","isAmpIframe","placeholder","getPlaceholderImage","layout","isCandidateImageForPreloading","isCandidateVideoPosterImage","isCandidateIframePlaceholderImage","ampVideo","poster","width","height","isTinyNode","ampIframe","child","nodeDimensionsFromParent","parent","imgNode","class","decoding","attributesToCopy","attr","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2018 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nconst {\n  appendChild,\n  createElement,\n  hasAttribute,\n  insertAfter,\n  nextNode,\n  firstChildByTag,\n} = require('../NodeUtils');\nconst {findMetaViewport, skipNodeAndChildren} = require('../HtmlDomHelper');\nconst {isValidImageSrcURL} = require('../URLUtils');\nconst amphtml = require('../AmpConstants');\n\n// Images smaller than 150px are considered tiny\nconst TINY_IMG_THRESHOLD = 150;\n// Maximum number of hero images defined via data-hero\nconst DATA_HERO_MAX = 2;\n\n/**\n * PreloadHeroImage - this transformers optimizes image rendering times for hero images. For hero\n * images it will:\n *\n * 1. Inject a preload hint (if possible)\n * 2. Generate an img tag enabling the browser to render the image without the AMP runtime being loaded.\n *\n * Hero images are either identified automatically or can be explicitly defined by adding an `data-hero`\n * attribute to the element.\n *\n * This transformer supports the following options:\n *\n * * `preloadHeroImage`: [true|false] - enables or disables hero image preloading. The default is `true`.\n */\nclass PreloadHeroImage {\n  constructor(config) {\n    this.log = config.log;\n    this.enabled = config.preloadHeroImage !== false;\n  }\n\n  async transform(root, params) {\n    if (!this.enabled || params.preloadHeroImage === false) {\n      return;\n    }\n    const html = firstChildByTag(root, 'html');\n    const head = firstChildByTag(html, 'head');\n    const body = firstChildByTag(html, 'body');\n    if (!body || !head) return;\n\n    const heroImages = this.findHeroImages(body);\n    let referenceNode = findMetaViewport(head);\n\n    let heroImageCount = heroImages.length;\n    if (heroImageCount > DATA_HERO_MAX) {\n      this.log.warn(\n        `Found ${heroImageCount} hero elements on the page. AMP currently only supports a maximum of ${DATA_HERO_MAX} elements.`\n      );\n      heroImageCount = DATA_HERO_MAX;\n    }\n    const isAmpStory = amphtml.isAmpStory(head);\n    for (let i = 0; i < heroImageCount; i++) {\n      const heroImage = heroImages[i];\n      this.generatePreload(heroImage, head, referenceNode);\n      // AMP Stories don't support ssr'd amp-img yet\n      // See https://github.com/ampproject/amphtml/issues/29850\n      if (!isAmpStory) {\n        this.generateImg(heroImage.ampImg);\n      }\n    }\n  }\n\n  generatePreload(heroImage, head, referenceNode) {\n    if (heroImage.srcset) {\n      this.log.debug(\n        \"Could not preload hero image as it's using srcset, which is currently only supported Chromium-based browsers (see https://web.dev/preload-responsive-images/).\",\n        heroImage.src\n      );\n      return;\n    }\n    if (this.hasExistingImagePreload(head, heroImage.src)) {\n      return;\n    }\n    const preload = createElement('link', {\n      'rel': 'preload',\n      'href': heroImage.src,\n      'as': 'image',\n      'data-hero': '',\n    });\n    if (heroImage.media) {\n      preload.attribs.media = heroImage.media;\n    }\n    insertAfter(head, preload, referenceNode);\n  }\n\n  hasExistingImagePreload(head, src) {\n    return head.children.some((node) => {\n      if (node.tagName !== 'link') {\n        return false;\n      }\n      if (!hasAttribute(node, 'rel')) {\n        return false;\n      }\n      if (node.attribs.rel !== 'preload') {\n        return false;\n      }\n      if (node.attribs.as !== 'image') {\n        return false;\n      }\n      return node.attribs.href === src;\n    });\n  }\n\n  findHeroImages(root) {\n    let heroImageCandidate = null;\n    let heroImages = [];\n    let node = root;\n    // Walk over all nodes in the body\n    while (node !== null) {\n      // Look for data-hero attribute\n      this.addImageWithDataHero(node, heroImages);\n      // Auto detect a hero image in case data-hero is not used\n      if (!heroImageCandidate && heroImages.length === 0) {\n        heroImageCandidate = this.isCandidateHeroImage(node);\n      }\n      if (amphtml.isTemplate(node)) {\n        // Ignore images inside templates\n        node = skipNodeAndChildren(node);\n      } else {\n        node = nextNode(node);\n      }\n    }\n    // Optimize data-hero element if defined\n    if (heroImages.length > 0) {\n      return heroImages;\n    }\n    // Fallback to auto detected hero image if available\n    if (heroImageCandidate) {\n      return [heroImageCandidate];\n    }\n    // No hero images to optimize\n    return [];\n  }\n\n  addImageWithDataHero(node, heroImages) {\n    if (node.tagName === 'amp-img' && hasAttribute(node, 'data-hero')) {\n      const {src, media, srcset} = node.attribs;\n      heroImages.push({\n        ampImg: node,\n        src,\n        media,\n        srcset,\n      });\n    } else if (this.isAmpIframe(node) && hasAttribute(node, 'data-hero')) {\n      const placeholder = this.getPlaceholderImage(node);\n      if (placeholder) {\n        heroImages.push(placeholder);\n      }\n    }\n  }\n\n  isCandidateHeroImage(node) {\n    if (!node.tagName) {\n      return null;\n    }\n    const layout = node.attribs ? node.attribs.layout : '';\n    if (layout === 'nodisplay') {\n      return null;\n    }\n    if (node.tagName === 'amp-img') {\n      return this.isCandidateImageForPreloading(node);\n    }\n    if (node.tagName === 'amp-video') {\n      return this.isCandidateVideoPosterImage(node);\n    }\n    if (this.isAmpIframe(node)) {\n      return this.isCandidateIframePlaceholderImage(node);\n    }\n    return null;\n  }\n\n  isAmpIframe(node) {\n    return node.tagName === 'amp-iframe' || node.tagName === 'amp-video-iframe';\n  }\n\n  // For a given <amp-video> node or any node that has poster attribute, and\n  // qualifies as hero image, returns the HeroImageSrcs.\n  isCandidateVideoPosterImage(ampVideo) {\n    const poster = ampVideo.attribs.poster;\n    if (!poster) return null;\n    if (!isValidImageSrcURL(poster)) {\n      return null;\n    }\n\n    const {layout, width, height, media} = ampVideo.attribs;\n    if (this.isTinyNode(layout, width, height)) {\n      return null;\n    }\n    return {src: poster, media, srcset: ''};\n  }\n\n  isCandidateIframePlaceholderImage(ampIframe) {\n    // Placeholder amp-img is required to preload image for iframe.\n    if (!ampIframe.children || ampIframe.children.length === 0) {\n      return null;\n    }\n\n    const {layout, width, height} = ampIframe.attribs;\n\n    if (this.isTinyNode(layout, width, height)) return null;\n\n    return this.getPlaceholderImage(ampIframe);\n  }\n\n  getPlaceholderImage(ampIframe) {\n    for (const child of ampIframe.children) {\n      if (\n        child.tagName === 'amp-img' &&\n        hasAttribute(child, 'placeholder') &&\n        isValidImageSrcURL(child.attribs.src)\n      ) {\n        return {\n          ampImg: child,\n          src: child.attribs.src,\n          media: ampIframe.attribs.media,\n          srcset: child.attribs.srcset || '',\n        };\n      }\n    }\n    return null;\n  }\n\n  // Checks if node qualifies to be a hero image. Returns HeroImageSrcs if the\n  // node is a hero image. The hero image here can come from one of <amp-img>,\n  // <amp-video>, <amp-iframe>, <amp-video-iframe>.\n  isCandidateImageForPreloading(ampImg) {\n    const src = ampImg.attribs.src;\n    if (!src) {\n      return null;\n    }\n    if (!isValidImageSrcURL(src)) {\n      return null;\n    }\n\n    let {width, height, srcset, layout, media} = ampImg.attribs;\n\n    if (!width && !height) {\n      if (layout === 'fill') {\n        ({width, height} = this.nodeDimensionsFromParent(ampImg));\n      } else {\n        return null;\n      }\n    }\n    if (this.isTinyNode(layout, width, height)) {\n      return null;\n    }\n    return {ampImg, src, srcset, media};\n  }\n\n  // Any node with width or height less than 150 pixels and a non-responsive layout.\n  isTinyNode(layout, width, height) {\n    if (width <= 0 || height <= 0) return true;\n    if (layout === 'intrinsic' || layout === 'responsive') {\n      return false;\n    }\n    return width < TINY_IMG_THRESHOLD || height < TINY_IMG_THRESHOLD;\n  }\n\n  nodeDimensionsFromParent(node) {\n    while (node.parent) {\n      node = node.parent;\n      if (!node.attribs) {\n        continue;\n      }\n      const width = node.attribs.width;\n      const height = node.attribs.height;\n      if (!width && !height) {\n        continue;\n      }\n      return {width, height};\n    }\n    return {width: 0, height: 0};\n  }\n\n  generateImg(node) {\n    if (!node) {\n      return;\n    }\n    const imgNode = createElement('img', {\n      class: 'i-amphtml-fill-content i-amphtml-replaced-content',\n      decoding: 'async',\n    });\n    const attributesToCopy = [\n      'alt',\n      'attribution',\n      'object-fit',\n      'object-position',\n      'referrerpolicy',\n      'src',\n      'srcset',\n      'sizes',\n      'title',\n    ];\n    for (const attr of attributesToCopy) {\n      if (hasAttribute(node, attr)) {\n        imgNode.attribs[attr] = node.attribs[attr];\n      }\n    }\n    node.attribs['i-amphtml-ssr'] = '';\n    node.attribs['data-hero'] = '';\n    appendChild(node, imgNode);\n  }\n}\n\n/** @module PreloadHeroImage */\nmodule.exports = PreloadHeroImage;\n"]},"metadata":{},"sourceType":"script"}