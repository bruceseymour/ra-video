{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.pitch = pitch;\nexports.default = _default;\n\nvar _module = _interopRequireDefault(require(\"module\"));\n\nvar _loaderUtils = _interopRequireDefault(require(\"loader-utils\"));\n\nvar _webpack = _interopRequireDefault(require(\"webpack\"));\n\nvar _NodeTargetPlugin = _interopRequireDefault(require(\"webpack/lib/node/NodeTargetPlugin\"));\n\nvar _CssDependency = _interopRequireDefault(require(\"./CssDependency\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst isWebpack5 = parseInt(_webpack.default.version) === 5;\nconst pluginName = 'mini-css-extract-plugin';\n\nfunction evalModuleCode(loaderContext, code, filename) {\n  const module = new _module.default(filename, loaderContext);\n  module.paths = _module.default._nodeModulePaths(loaderContext.context); // eslint-disable-line no-underscore-dangle\n\n  module.filename = filename;\n\n  module._compile(code, filename); // eslint-disable-line no-underscore-dangle\n\n\n  return module.exports;\n}\n\nfunction getModuleId(compilation, module) {\n  if (isWebpack5) {\n    return compilation.chunkGraph.getModuleId(module);\n  }\n\n  return module.id;\n}\n\nfunction findModuleById(compilation, id) {\n  for (const module of compilation.modules) {\n    if (getModuleId(compilation, module) === id) {\n      return module;\n    }\n  }\n\n  return null;\n}\n\nfunction pitch(request) {\n  const options = _loaderUtils.default.getOptions(this) || {};\n  const loaders = this.loaders.slice(this.loaderIndex + 1);\n  this.addDependency(this.resourcePath);\n  const childFilename = '*';\n  const publicPath = typeof options.publicPath === 'string' ? options.publicPath === '' || options.publicPath.endsWith('/') ? options.publicPath : `${options.publicPath}/` : typeof options.publicPath === 'function' ? options.publicPath(this.resourcePath, this.rootContext) : this._compilation.outputOptions.publicPath;\n  const outputOptions = {\n    filename: childFilename,\n    publicPath,\n    library: {\n      type: 'commonjs2',\n      name: null\n    }\n  };\n\n  const childCompiler = this._compilation.createChildCompiler(`${pluginName} ${request}`, outputOptions);\n\n  new _webpack.default.node.NodeTemplatePlugin(outputOptions).apply(childCompiler);\n\n  if (isWebpack5) {\n    new _webpack.default.library.EnableLibraryPlugin(outputOptions.library.type).apply(childCompiler);\n  } else {\n    new _webpack.default.LibraryTemplatePlugin(null, 'commonjs2').apply(childCompiler);\n  }\n\n  new _NodeTargetPlugin.default().apply(childCompiler);\n  new (isWebpack5 ? _webpack.default.EntryPlugin : _webpack.default.SingleEntryPlugin)(this.context, `!!${request}`, pluginName).apply(childCompiler);\n  new _webpack.default.optimize.LimitChunkCountPlugin({\n    maxChunks: 1\n  }).apply(childCompiler);\n  let source;\n  childCompiler.hooks.thisCompilation.tap(`${pluginName} loader`, compilation => {\n    const hook = isWebpack5 ? _webpack.default.NormalModule.getCompilationHooks(compilation).loader : compilation.hooks.normalModuleLoader;\n    hook.tap(`${pluginName} loader`, (loaderContext, module) => {\n      // eslint-disable-next-line no-param-reassign\n      loaderContext.emitFile = this.emitFile;\n\n      if (module.request === request) {\n        // eslint-disable-next-line no-param-reassign\n        module.loaders = loaders.map(loader => {\n          return {\n            loader: loader.path,\n            options: loader.options,\n            ident: loader.ident\n          };\n        });\n      }\n    });\n\n    if (isWebpack5) {\n      compilation.hooks.processAssets.tap({\n        name: pluginName,\n        // @ts-ignore TODO: Remove ignore when webpack 5 is stable\n        stage: _webpack.default.Compilation.PROCESS_ASSETS_STAGE_ADDITIONAL\n      }, assets => {\n        source = assets[childFilename] && assets[childFilename].source(); // Remove all chunk assets\n\n        Object.keys(assets).forEach(file => delete assets[file]);\n      });\n    }\n  }); // webpack 5 case is covered in hooks.thisCompilation above\n\n  if (!isWebpack5) {\n    childCompiler.hooks.afterCompile.tap(pluginName, compilation => {\n      source = compilation.assets[childFilename] && compilation.assets[childFilename].source(); // Remove all chunk assets\n\n      compilation.chunks.forEach(chunk => {\n        chunk.files.forEach(file => {\n          delete compilation.assets[file]; // eslint-disable-line no-param-reassign\n        });\n      });\n    });\n  }\n\n  const callback = this.async();\n  childCompiler.runAsChild((err, entries, compilation) => {\n    const addDependencies = dependencies => {\n      if (!Array.isArray(dependencies) && dependencies != null) {\n        throw new Error(`Exported value was not extracted as an array: ${JSON.stringify(dependencies)}`);\n      }\n\n      const identifierCountMap = new Map();\n\n      for (const dependency of dependencies) {\n        const count = identifierCountMap.get(dependency.identifier) || 0;\n\n        this._module.addDependency(new _CssDependency.default(dependency, dependency.context, count));\n\n        identifierCountMap.set(dependency.identifier, count + 1);\n      }\n    };\n\n    if (err) {\n      return callback(err);\n    }\n\n    if (compilation.errors.length > 0) {\n      return callback(compilation.errors[0]);\n    }\n\n    compilation.fileDependencies.forEach(dep => {\n      this.addDependency(dep);\n    }, this);\n    compilation.contextDependencies.forEach(dep => {\n      this.addContextDependency(dep);\n    }, this);\n\n    if (!source) {\n      return callback(new Error(\"Didn't get a result from child compiler\"));\n    }\n\n    let locals;\n\n    try {\n      let dependencies;\n      let exports = evalModuleCode(this, source, request); // eslint-disable-next-line no-underscore-dangle\n\n      exports = exports.__esModule ? exports.default : exports;\n      locals = exports && exports.locals;\n\n      if (!Array.isArray(exports)) {\n        dependencies = [[null, exports]];\n      } else {\n        dependencies = exports.map(([id, content, media, sourceMap]) => {\n          const module = findModuleById(compilation, id);\n          return {\n            identifier: module.identifier(),\n            context: module.context,\n            content,\n            media,\n            sourceMap\n          };\n        });\n      }\n\n      addDependencies(dependencies);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const esModule = typeof options.esModule !== 'undefined' ? options.esModule : false;\n    const result = locals ? `\\n${esModule ? 'export default' : 'module.exports ='} ${JSON.stringify(locals)};` : esModule ? `\\nexport {};` : '';\n    let resultSource = `// extracted by ${pluginName}`;\n    resultSource += result;\n    return callback(null, resultSource);\n  });\n}\n\nfunction _default() {}","map":{"version":3,"sources":["../../../../../../build/webpack/plugins/mini-css-extract-plugin/src/loader.js"],"names":["isWebpack5","parseInt","webpack","pluginName","module","NativeModule","loaderContext","compilation","getModuleId","options","loaderUtils","loaders","childFilename","publicPath","outputOptions","filename","library","type","name","childCompiler","request","NodeTargetPlugin","maxChunks","hook","loader","ident","stage","assets","source","Object","file","chunk","callback","addDependencies","dependencies","Array","JSON","identifierCountMap","count","dependency","CssDependency","dep","exports","evalModuleCode","locals","findModuleById","identifier","context","esModule","result","resultSource"],"mappings":"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","sourcesContent":["import NativeModule from 'module'\n\nimport loaderUtils from 'loader-utils'\nimport webpack from 'webpack'\nimport NodeTargetPlugin from 'webpack/lib/node/NodeTargetPlugin'\n\nimport CssDependency from './CssDependency'\n\nconst isWebpack5 = parseInt(webpack.version) === 5\nconst pluginName = 'mini-css-extract-plugin'\n\nfunction evalModuleCode(loaderContext, code, filename) {\n  const module = new NativeModule(filename, loaderContext)\n\n  module.paths = NativeModule._nodeModulePaths(loaderContext.context) // eslint-disable-line no-underscore-dangle\n  module.filename = filename\n  module._compile(code, filename) // eslint-disable-line no-underscore-dangle\n\n  return module.exports\n}\n\nfunction getModuleId(compilation, module) {\n  if (isWebpack5) {\n    return compilation.chunkGraph.getModuleId(module)\n  }\n\n  return module.id\n}\n\nfunction findModuleById(compilation, id) {\n  for (const module of compilation.modules) {\n    if (getModuleId(compilation, module) === id) {\n      return module\n    }\n  }\n\n  return null\n}\n\nexport function pitch(request) {\n  const options = loaderUtils.getOptions(this) || {}\n\n  const loaders = this.loaders.slice(this.loaderIndex + 1)\n\n  this.addDependency(this.resourcePath)\n\n  const childFilename = '*'\n  const publicPath =\n    typeof options.publicPath === 'string'\n      ? options.publicPath === '' || options.publicPath.endsWith('/')\n        ? options.publicPath\n        : `${options.publicPath}/`\n      : typeof options.publicPath === 'function'\n      ? options.publicPath(this.resourcePath, this.rootContext)\n      : this._compilation.outputOptions.publicPath\n  const outputOptions = {\n    filename: childFilename,\n    publicPath,\n    library: {\n      type: 'commonjs2',\n      name: null,\n    },\n  }\n  const childCompiler = this._compilation.createChildCompiler(\n    `${pluginName} ${request}`,\n    outputOptions\n  )\n\n  new webpack.node.NodeTemplatePlugin(outputOptions).apply(childCompiler)\n  if (isWebpack5) {\n    new webpack.library.EnableLibraryPlugin(outputOptions.library.type).apply(\n      childCompiler\n    )\n  } else {\n    new webpack.LibraryTemplatePlugin(null, 'commonjs2').apply(childCompiler)\n  }\n  new NodeTargetPlugin().apply(childCompiler)\n  new (isWebpack5 ? webpack.EntryPlugin : webpack.SingleEntryPlugin)(\n    this.context,\n    `!!${request}`,\n    pluginName\n  ).apply(childCompiler)\n  new webpack.optimize.LimitChunkCountPlugin({ maxChunks: 1 }).apply(\n    childCompiler\n  )\n\n  let source\n\n  childCompiler.hooks.thisCompilation.tap(\n    `${pluginName} loader`,\n    (compilation) => {\n      const hook = isWebpack5\n        ? webpack.NormalModule.getCompilationHooks(compilation).loader\n        : compilation.hooks.normalModuleLoader\n      hook.tap(`${pluginName} loader`, (loaderContext, module) => {\n        // eslint-disable-next-line no-param-reassign\n        loaderContext.emitFile = this.emitFile\n\n        if (module.request === request) {\n          // eslint-disable-next-line no-param-reassign\n          module.loaders = loaders.map((loader) => {\n            return {\n              loader: loader.path,\n              options: loader.options,\n              ident: loader.ident,\n            }\n          })\n        }\n      })\n\n      if (isWebpack5) {\n        compilation.hooks.processAssets.tap(\n          {\n            name: pluginName,\n            // @ts-ignore TODO: Remove ignore when webpack 5 is stable\n            stage: webpack.Compilation.PROCESS_ASSETS_STAGE_ADDITIONAL,\n          },\n          (assets) => {\n            source = assets[childFilename] && assets[childFilename].source()\n\n            // Remove all chunk assets\n            Object.keys(assets).forEach((file) => delete assets[file])\n          }\n        )\n      }\n    }\n  )\n\n  // webpack 5 case is covered in hooks.thisCompilation above\n  if (!isWebpack5) {\n    childCompiler.hooks.afterCompile.tap(pluginName, (compilation) => {\n      source =\n        compilation.assets[childFilename] &&\n        compilation.assets[childFilename].source()\n\n      // Remove all chunk assets\n      compilation.chunks.forEach((chunk) => {\n        chunk.files.forEach((file) => {\n          delete compilation.assets[file] // eslint-disable-line no-param-reassign\n        })\n      })\n    })\n  }\n\n  const callback = this.async()\n\n  childCompiler.runAsChild((err, entries, compilation) => {\n    const addDependencies = (dependencies) => {\n      if (!Array.isArray(dependencies) && dependencies != null) {\n        throw new Error(\n          `Exported value was not extracted as an array: ${JSON.stringify(\n            dependencies\n          )}`\n        )\n      }\n\n      const identifierCountMap = new Map()\n\n      for (const dependency of dependencies) {\n        const count = identifierCountMap.get(dependency.identifier) || 0\n\n        this._module.addDependency(\n          new CssDependency(dependency, dependency.context, count)\n        )\n        identifierCountMap.set(dependency.identifier, count + 1)\n      }\n    }\n\n    if (err) {\n      return callback(err)\n    }\n\n    if (compilation.errors.length > 0) {\n      return callback(compilation.errors[0])\n    }\n\n    compilation.fileDependencies.forEach((dep) => {\n      this.addDependency(dep)\n    }, this)\n\n    compilation.contextDependencies.forEach((dep) => {\n      this.addContextDependency(dep)\n    }, this)\n\n    if (!source) {\n      return callback(new Error(\"Didn't get a result from child compiler\"))\n    }\n\n    let locals\n\n    try {\n      let dependencies\n      let exports = evalModuleCode(this, source, request)\n      // eslint-disable-next-line no-underscore-dangle\n      exports = exports.__esModule ? exports.default : exports\n      locals = exports && exports.locals\n      if (!Array.isArray(exports)) {\n        dependencies = [[null, exports]]\n      } else {\n        dependencies = exports.map(([id, content, media, sourceMap]) => {\n          const module = findModuleById(compilation, id)\n\n          return {\n            identifier: module.identifier(),\n            context: module.context,\n            content,\n            media,\n            sourceMap,\n          }\n        })\n      }\n      addDependencies(dependencies)\n    } catch (e) {\n      return callback(e)\n    }\n\n    const esModule =\n      typeof options.esModule !== 'undefined' ? options.esModule : false\n    const result = locals\n      ? `\\n${esModule ? 'export default' : 'module.exports ='} ${JSON.stringify(\n          locals\n        )};`\n      : esModule\n      ? `\\nexport {};`\n      : ''\n\n    let resultSource = `// extracted by ${pluginName}`\n\n    resultSource += result\n\n    return callback(null, resultSource)\n  })\n}\n\nexport default function () {}\n"]},"metadata":{},"sourceType":"script"}