{"ast":null,"code":"/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst {\n  remove,\n  appendChild,\n  createElement,\n  nextNode,\n  firstChildByTag\n} = require('../NodeUtils');\n\nconst {\n  calculateHash\n} = require('@ampproject/toolbox-script-csp');\n/**\n * AmpScriptCsp - adds CSP for amp-script.\n *\n * Currently only supports inline scripts.\n *\n */\n\n\nclass AmpScriptCsp {\n  transform(root) {\n    const html = firstChildByTag(root, 'html');\n    if (!html) return;\n    const head = firstChildByTag(html, 'head');\n    if (!head) return;\n    const body = firstChildByTag(html, 'body');\n    if (!body) return;\n\n    const cspMeta = this._findOrCreateCspMeta(head);\n\n    const existingCsp = (cspMeta.attribs.content || '').trim().split(/\\s+/);\n    const hashes = new Set(existingCsp); // ''.split(' ') results in [''] and not [], so we account for that case\n\n    hashes.delete('');\n\n    const inlineScripts = this._findAllInlineScripts(body);\n\n    for (const script of inlineScripts) {\n      const content = script.children[0] ? script.children[0].data : '';\n      hashes.add(calculateHash(content));\n    }\n\n    const csp = Array.from(hashes).join(' ');\n\n    if (csp === '') {\n      remove(cspMeta);\n      return;\n    }\n\n    cspMeta.attribs.content = csp;\n  }\n\n  _findAllInlineScripts(body) {\n    const result = [];\n    let node = body;\n\n    while (node !== null) {\n      if (node.tagName === 'script' && node.attribs.target === 'amp-script') {\n        result.push(node);\n      }\n\n      node = nextNode(node);\n    }\n\n    return result;\n  }\n\n  _findOrCreateCspMeta(head) {\n    for (let node = head.firstChild; node !== null; node = node.nextSibling) {\n      if (node.tagName === 'meta' && node.attribs.name === 'amp-script-src') {\n        return node;\n      }\n    }\n\n    const cspMeta = createElement('meta', {\n      name: 'amp-script-src'\n    });\n    appendChild(head, cspMeta);\n    return cspMeta;\n  }\n\n}\n\nmodule.exports = AmpScriptCsp;","map":{"version":3,"sources":["/Users/bruceseymour/ra-video/client/node_modules/@ampproject/toolbox-optimizer/lib/transformers/AmpScriptCsp.js"],"names":["remove","appendChild","createElement","nextNode","firstChildByTag","require","calculateHash","AmpScriptCsp","transform","root","html","head","body","cspMeta","_findOrCreateCspMeta","existingCsp","attribs","content","trim","split","hashes","Set","delete","inlineScripts","_findAllInlineScripts","script","children","data","add","csp","Array","from","join","result","node","tagName","target","push","firstChild","nextSibling","name","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2019 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst {remove, appendChild, createElement, nextNode, firstChildByTag} = require('../NodeUtils');\nconst {calculateHash} = require('@ampproject/toolbox-script-csp');\n\n/**\n * AmpScriptCsp - adds CSP for amp-script.\n *\n * Currently only supports inline scripts.\n *\n */\nclass AmpScriptCsp {\n  transform(root) {\n    const html = firstChildByTag(root, 'html');\n    if (!html) return;\n    const head = firstChildByTag(html, 'head');\n    if (!head) return;\n    const body = firstChildByTag(html, 'body');\n    if (!body) return;\n\n    const cspMeta = this._findOrCreateCspMeta(head);\n    const existingCsp = (cspMeta.attribs.content || '').trim().split(/\\s+/);\n    const hashes = new Set(existingCsp);\n    // ''.split(' ') results in [''] and not [], so we account for that case\n    hashes.delete('');\n\n    const inlineScripts = this._findAllInlineScripts(body);\n    for (const script of inlineScripts) {\n      const content = script.children[0] ? script.children[0].data : '';\n      hashes.add(calculateHash(content));\n    }\n\n    const csp = Array.from(hashes).join(' ');\n    if (csp === '') {\n      remove(cspMeta);\n      return;\n    }\n    cspMeta.attribs.content = csp;\n  }\n\n  _findAllInlineScripts(body) {\n    const result = [];\n    let node = body;\n    while (node !== null) {\n      if (node.tagName === 'script' && node.attribs.target === 'amp-script') {\n        result.push(node);\n      }\n      node = nextNode(node);\n    }\n    return result;\n  }\n\n  _findOrCreateCspMeta(head) {\n    for (let node = head.firstChild; node !== null; node = node.nextSibling) {\n      if (node.tagName === 'meta' && node.attribs.name === 'amp-script-src') {\n        return node;\n      }\n    }\n    const cspMeta = createElement('meta', {\n      name: 'amp-script-src',\n    });\n    appendChild(head, cspMeta);\n    return cspMeta;\n  }\n}\n\nmodule.exports = AmpScriptCsp;\n"]},"metadata":{},"sourceType":"script"}