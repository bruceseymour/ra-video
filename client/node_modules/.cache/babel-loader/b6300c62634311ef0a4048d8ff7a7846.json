{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.renderToHTML = renderToHTML;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _server = require(\"react-dom/server\");\n\nvar _log = require(\"../../build/output/log\");\n\nvar _constants = require(\"../../lib/constants\");\n\nvar _isSerializableProps = require(\"../../lib/is-serializable-props\");\n\nvar _amp = require(\"../lib/amp\");\n\nvar _ampContext = require(\"../lib/amp-context\");\n\nvar _constants2 = require(\"../lib/constants\");\n\nvar _head = require(\"../lib/head\");\n\nvar _headManagerContext = require(\"../lib/head-manager-context\");\n\nvar _loadable = _interopRequireDefault(require(\"../lib/loadable\"));\n\nvar _loadableContext = require(\"../lib/loadable-context\");\n\nvar _mitt = _interopRequireDefault(require(\"../lib/mitt\"));\n\nvar _postProcess = _interopRequireDefault(require(\"../lib/post-process\"));\n\nvar _routerContext = require(\"../lib/router-context\");\n\nvar _isDynamic = require(\"../lib/router/utils/is-dynamic\");\n\nvar _utils = require(\"../lib/utils\");\n\nvar _apiUtils = require(\"./api-utils\");\n\nvar _denormalizePagePath = require(\"./denormalize-page-path\");\n\nvar _fontUtils = require(\"./font-utils\");\n\nvar _normalizePagePath = require(\"./normalize-page-path\");\n\nvar _optimizeAmp = _interopRequireDefault(require(\"./optimize-amp\"));\n\nvar _loadCustomRoutes = require(\"../../lib/load-custom-routes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction noRouter() {\n  const message = 'No router instance found. you should only use \"next/router\" inside the client side of your app. https://err.sh/vercel/next.js/no-router-instance';\n  throw new Error(message);\n}\n\nclass ServerRouter {\n  // TODO: Remove in the next major version, as this would mean the user is adding event listeners in server-side `render` method\n  constructor(pathname, query, as, {\n    isFallback\n  }, isReady, basePath, locale, locales, defaultLocale, domainLocales) {\n    this.route = void 0;\n    this.pathname = void 0;\n    this.query = void 0;\n    this.asPath = void 0;\n    this.basePath = void 0;\n    this.events = void 0;\n    this.isFallback = void 0;\n    this.locale = void 0;\n    this.isReady = void 0;\n    this.locales = void 0;\n    this.defaultLocale = void 0;\n    this.domainLocales = void 0;\n    this.route = pathname.replace(/\\/$/, '') || '/';\n    this.pathname = pathname;\n    this.query = query;\n    this.asPath = as;\n    this.isFallback = isFallback;\n    this.basePath = basePath;\n    this.locale = locale;\n    this.locales = locales;\n    this.defaultLocale = defaultLocale;\n    this.isReady = isReady;\n    this.domainLocales = domainLocales;\n  }\n\n  push() {\n    noRouter();\n  }\n\n  replace() {\n    noRouter();\n  }\n\n  reload() {\n    noRouter();\n  }\n\n  back() {\n    noRouter();\n  }\n\n  prefetch() {\n    noRouter();\n  }\n\n  beforePopState() {\n    noRouter();\n  }\n\n}\n\nServerRouter.events = (0, _mitt.default)();\n\nfunction enhanceComponents(options, App, Component) {\n  // For backwards compatibility\n  if (typeof options === 'function') {\n    return {\n      App,\n      Component: options(Component)\n    };\n  }\n\n  return {\n    App: options.enhanceApp ? options.enhanceApp(App) : App,\n    Component: options.enhanceComponent ? options.enhanceComponent(Component) : Component\n  };\n}\n\nfunction renderDocument(Document, {\n  buildManifest,\n  docComponentsRendered,\n  props,\n  docProps,\n  pathname,\n  query,\n  buildId,\n  canonicalBase,\n  assetPrefix,\n  runtimeConfig,\n  nextExport,\n  autoExport,\n  isFallback,\n  dynamicImportsIds,\n  dangerousAsPath,\n  err,\n  dev,\n  ampPath,\n  ampState,\n  inAmpMode,\n  hybridAmp,\n  dynamicImports,\n  headTags,\n  gsp,\n  gssp,\n  customServer,\n  gip,\n  appGip,\n  unstable_runtimeJS,\n  devOnlyCacheBusterQueryString,\n  scriptLoader,\n  locale,\n  locales,\n  defaultLocale,\n  domainLocales\n}) {\n  return '<!DOCTYPE html>' + (0, _server.renderToStaticMarkup)( /*#__PURE__*/_react.default.createElement(_ampContext.AmpStateContext.Provider, {\n    value: ampState\n  }, Document.renderDocument(Document, {\n    __NEXT_DATA__: {\n      props,\n      // The result of getInitialProps\n      page: pathname,\n      // The rendered page\n      query,\n      // querystring parsed / passed by the user\n      buildId,\n      // buildId is used to facilitate caching of page bundles, we send it to the client so that pageloader knows where to load bundles\n      assetPrefix: assetPrefix === '' ? undefined : assetPrefix,\n      // send assetPrefix to the client side when configured, otherwise don't sent in the resulting HTML\n      runtimeConfig,\n      // runtimeConfig if provided, otherwise don't sent in the resulting HTML\n      nextExport,\n      // If this is a page exported by `next export`\n      autoExport,\n      // If this is an auto exported page\n      isFallback,\n      dynamicIds: dynamicImportsIds.length === 0 ? undefined : dynamicImportsIds,\n      err: err ? serializeError(dev, err) : undefined,\n      // Error if one happened, otherwise don't sent in the resulting HTML\n      gsp,\n      // whether the page is getStaticProps\n      gssp,\n      // whether the page is getServerSideProps\n      customServer,\n      // whether the user is using a custom server\n      gip,\n      // whether the page has getInitialProps\n      appGip,\n      // whether the _app has getInitialProps\n      locale,\n      locales,\n      defaultLocale,\n      domainLocales\n    },\n    buildManifest,\n    docComponentsRendered,\n    dangerousAsPath,\n    canonicalBase,\n    ampPath,\n    inAmpMode,\n    isDevelopment: !!dev,\n    hybridAmp,\n    dynamicImports,\n    assetPrefix,\n    headTags,\n    unstable_runtimeJS,\n    devOnlyCacheBusterQueryString,\n    scriptLoader,\n    locale,\n    ...docProps\n  })));\n}\n\nconst invalidKeysMsg = (methodName, invalidKeys) => {\n  return `Additional keys were returned from \\`${methodName}\\`. Properties intended for your component must be nested under the \\`props\\` key, e.g.:` + `\\n\\n\\treturn { props: { title: 'My Title', content: '...' } }` + `\\n\\nKeys that need to be moved: ${invalidKeys.join(', ')}.` + `\\nRead more: https://err.sh/next.js/invalid-getstaticprops-value`;\n};\n\nfunction checkRedirectValues(redirect, req, method) {\n  const {\n    destination,\n    permanent,\n    statusCode,\n    basePath\n  } = redirect;\n  let errors = [];\n  const hasStatusCode = typeof statusCode !== 'undefined';\n  const hasPermanent = typeof permanent !== 'undefined';\n\n  if (hasPermanent && hasStatusCode) {\n    errors.push(`\\`permanent\\` and \\`statusCode\\` can not both be provided`);\n  } else if (hasPermanent && typeof permanent !== 'boolean') {\n    errors.push(`\\`permanent\\` must be \\`true\\` or \\`false\\``);\n  } else if (hasStatusCode && !_loadCustomRoutes.allowedStatusCodes.has(statusCode)) {\n    errors.push(`\\`statusCode\\` must undefined or one of ${[..._loadCustomRoutes.allowedStatusCodes].join(', ')}`);\n  }\n\n  const destinationType = typeof destination;\n\n  if (destinationType !== 'string') {\n    errors.push(`\\`destination\\` should be string but received ${destinationType}`);\n  }\n\n  const basePathType = typeof basePath;\n\n  if (basePathType !== 'undefined' && basePathType !== 'boolean') {\n    errors.push(`\\`basePath\\` should be undefined or a false, received ${basePathType}`);\n  }\n\n  if (errors.length > 0) {\n    throw new Error(`Invalid redirect object returned from ${method} for ${req.url}\\n` + errors.join(' and ') + '\\n' + `See more info here: https://err.sh/vercel/next.js/invalid-redirect-gssp`);\n  }\n}\n\nasync function renderToHTML(req, res, pathname, query, renderOpts) {\n  var _props; // In dev we invalidate the cache by appending a timestamp to the resource URL.\n  // This is a workaround to fix https://github.com/vercel/next.js/issues/5860\n  // TODO: remove this workaround when https://bugs.webkit.org/show_bug.cgi?id=187726 is fixed.\n\n\n  renderOpts.devOnlyCacheBusterQueryString = renderOpts.dev ? renderOpts.devOnlyCacheBusterQueryString || `?ts=${Date.now()}` : ''; // don't modify original query object\n\n  query = Object.assign({}, query);\n  const {\n    err,\n    dev = false,\n    ampPath = '',\n    App,\n    Document,\n    pageConfig = {},\n    Component,\n    buildManifest,\n    fontManifest,\n    reactLoadableManifest,\n    ErrorDebug,\n    getStaticProps,\n    getStaticPaths,\n    getServerSideProps,\n    isDataReq,\n    params,\n    previewProps,\n    basePath,\n    devOnlyCacheBusterQueryString\n  } = renderOpts;\n\n  const getFontDefinition = url => {\n    if (fontManifest) {\n      return (0, _fontUtils.getFontDefinitionFromManifest)(url, fontManifest);\n    }\n\n    return '';\n  };\n\n  const callMiddleware = async (method, args, props = false) => {\n    let results = props ? {} : [];\n\n    if (Document[`${method}Middleware`]) {\n      let middlewareFunc = await Document[`${method}Middleware`];\n      middlewareFunc = middlewareFunc.default || middlewareFunc;\n      const curResults = await middlewareFunc(...args);\n\n      if (props) {\n        for (const result of curResults) {\n          results = { ...results,\n            ...result\n          };\n        }\n      } else {\n        results = curResults;\n      }\n    }\n\n    return results;\n  };\n\n  const headTags = (...args) => callMiddleware('headTags', args);\n\n  const isFallback = !!query.__nextFallback;\n  delete query.__nextFallback;\n  delete query.__nextLocale;\n  delete query.__nextDefaultLocale;\n  const isSSG = !!getStaticProps;\n  const isBuildTimeSSG = isSSG && renderOpts.nextExport;\n  const defaultAppGetInitialProps = App.getInitialProps === App.origGetInitialProps;\n  const hasPageGetInitialProps = !!Component.getInitialProps;\n  const pageIsDynamic = (0, _isDynamic.isDynamicRoute)(pathname);\n  const isAutoExport = !hasPageGetInitialProps && defaultAppGetInitialProps && !isSSG && !getServerSideProps;\n\n  for (const methodName of ['getStaticProps', 'getServerSideProps', 'getStaticPaths']) {\n    if (Component[methodName]) {\n      throw new Error(`page ${pathname} ${methodName} ${_constants.GSSP_COMPONENT_MEMBER_ERROR}`);\n    }\n  }\n\n  if (hasPageGetInitialProps && isSSG) {\n    throw new Error(_constants.SSG_GET_INITIAL_PROPS_CONFLICT + ` ${pathname}`);\n  }\n\n  if (hasPageGetInitialProps && getServerSideProps) {\n    throw new Error(_constants.SERVER_PROPS_GET_INIT_PROPS_CONFLICT + ` ${pathname}`);\n  }\n\n  if (getServerSideProps && isSSG) {\n    throw new Error(_constants.SERVER_PROPS_SSG_CONFLICT + ` ${pathname}`);\n  }\n\n  if (!!getStaticPaths && !isSSG) {\n    throw new Error(`getStaticPaths was added without a getStaticProps in ${pathname}. Without getStaticProps, getStaticPaths does nothing`);\n  }\n\n  if (isSSG && pageIsDynamic && !getStaticPaths) {\n    throw new Error(`getStaticPaths is required for dynamic SSG pages and is missing for '${pathname}'.` + `\\nRead more: https://err.sh/next.js/invalid-getstaticpaths-value`);\n  }\n\n  if (dev) {\n    const {\n      isValidElementType\n    } = require('react-is');\n\n    if (!isValidElementType(Component)) {\n      throw new Error(`The default export is not a React Component in page: \"${pathname}\"`);\n    }\n\n    if (!isValidElementType(App)) {\n      throw new Error(`The default export is not a React Component in page: \"/_app\"`);\n    }\n\n    if (!isValidElementType(Document)) {\n      throw new Error(`The default export is not a React Component in page: \"/_document\"`);\n    }\n\n    if (isAutoExport || isFallback) {\n      // remove query values except ones that will be set during export\n      query = { ...(query.amp ? {\n          amp: query.amp\n        } : {})\n      };\n      renderOpts.resolvedAsPath = `${pathname}${// ensure trailing slash is present for non-dynamic auto-export pages\n      req.url.endsWith('/') && pathname !== '/' && !pageIsDynamic ? '/' : ''}`;\n      req.url = pathname;\n      renderOpts.nextExport = true;\n    }\n\n    if (pathname === '/404' && (hasPageGetInitialProps || getServerSideProps)) {\n      throw new Error(_constants.PAGES_404_GET_INITIAL_PROPS_ERROR);\n    }\n  }\n\n  if (isAutoExport) renderOpts.autoExport = true;\n  if (isSSG) renderOpts.nextExport = false;\n  await _loadable.default.preloadAll(); // Make sure all dynamic imports are loaded\n  // url will always be set\n\n  const asPath = renderOpts.resolvedAsPath || req.url;\n  const routerIsReady = !!(getServerSideProps || hasPageGetInitialProps);\n  const router = new ServerRouter(pathname, query, asPath, {\n    isFallback: isFallback\n  }, routerIsReady, basePath, renderOpts.locale, renderOpts.locales, renderOpts.defaultLocale, renderOpts.domainLocales);\n  const ctx = {\n    err,\n    req: isAutoExport ? undefined : req,\n    res: isAutoExport ? undefined : res,\n    pathname,\n    query,\n    asPath,\n    AppTree: props => {\n      return /*#__PURE__*/_react.default.createElement(AppContainer, null, /*#__PURE__*/_react.default.createElement(App, Object.assign({}, props, {\n        Component: Component,\n        router: router\n      })));\n    }\n  };\n  let props;\n  const ampState = {\n    ampFirst: pageConfig.amp === true,\n    hasQuery: Boolean(query.amp),\n    hybrid: pageConfig.amp === 'hybrid'\n  };\n  const inAmpMode = (0, _amp.isInAmpMode)(ampState);\n  const reactLoadableModules = [];\n  let head = (0, _head.defaultHead)(inAmpMode);\n  let scriptLoader = {};\n\n  const AppContainer = ({\n    children\n  }) => /*#__PURE__*/_react.default.createElement(_routerContext.RouterContext.Provider, {\n    value: router\n  }, /*#__PURE__*/_react.default.createElement(_ampContext.AmpStateContext.Provider, {\n    value: ampState\n  }, /*#__PURE__*/_react.default.createElement(_headManagerContext.HeadManagerContext.Provider, {\n    value: {\n      updateHead: state => {\n        head = state;\n      },\n      updateScripts: scripts => {\n        scriptLoader = scripts;\n      },\n      scripts: {},\n      mountedInstances: new Set()\n    }\n  }, /*#__PURE__*/_react.default.createElement(_loadableContext.LoadableContext.Provider, {\n    value: moduleName => reactLoadableModules.push(moduleName)\n  }, children))));\n\n  try {\n    props = await (0, _utils.loadGetInitialProps)(App, {\n      AppTree: ctx.AppTree,\n      Component,\n      router,\n      ctx\n    });\n\n    if (isSSG) {\n      props[_constants2.STATIC_PROPS_ID] = true;\n    }\n\n    let previewData;\n\n    if ((isSSG || getServerSideProps) && !isFallback) {\n      // Reads of this are cached on the `req` object, so this should resolve\n      // instantly. There's no need to pass this data down from a previous\n      // invoke, where we'd have to consider server & serverless.\n      previewData = (0, _apiUtils.tryGetPreviewData)(req, res, previewProps);\n    }\n\n    if (isSSG && !isFallback) {\n      let data;\n\n      try {\n        data = await getStaticProps({ ...(pageIsDynamic ? {\n            params: query\n          } : undefined),\n          ...(previewData !== false ? {\n            preview: true,\n            previewData: previewData\n          } : undefined),\n          locales: renderOpts.locales,\n          locale: renderOpts.locale,\n          defaultLocale: renderOpts.defaultLocale\n        });\n      } catch (staticPropsError) {\n        // remove not found error code to prevent triggering legacy\n        // 404 rendering\n        if (staticPropsError.code === 'ENOENT') {\n          delete staticPropsError.code;\n        }\n\n        throw staticPropsError;\n      }\n\n      if (data == null) {\n        throw new Error(_constants.GSP_NO_RETURNED_VALUE);\n      }\n\n      const invalidKeys = Object.keys(data).filter(key => key !== 'revalidate' && key !== 'props' && key !== 'redirect' && key !== 'notFound');\n\n      if (invalidKeys.includes('unstable_revalidate')) {\n        throw new Error(_constants.UNSTABLE_REVALIDATE_RENAME_ERROR);\n      }\n\n      if (invalidKeys.length) {\n        throw new Error(invalidKeysMsg('getStaticProps', invalidKeys));\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof data.notFound !== 'undefined' && typeof data.redirect !== 'undefined') {\n          throw new Error(`\\`redirect\\` and \\`notFound\\` can not both be returned from ${isSSG ? 'getStaticProps' : 'getServerSideProps'} at the same time. Page: ${pathname}\\nSee more info here: https://err.sh/next.js/gssp-mixed-not-found-redirect`);\n        }\n      }\n\n      if ('notFound' in data && data.notFound) {\n        if (pathname === '/404') {\n          throw new Error(`The /404 page can not return notFound in \"getStaticProps\", please remove it to continue!`);\n        }\n\n        ;\n        renderOpts.isNotFound = true;\n      }\n\n      if ('redirect' in data && data.redirect && typeof data.redirect === 'object') {\n        checkRedirectValues(data.redirect, req, 'getStaticProps');\n\n        if (isBuildTimeSSG) {\n          throw new Error(`\\`redirect\\` can not be returned from getStaticProps during prerendering (${req.url})\\n` + `See more info here: https://err.sh/next.js/gsp-redirect-during-prerender`);\n        }\n\n        ;\n        data.props = {\n          __N_REDIRECT: data.redirect.destination,\n          __N_REDIRECT_STATUS: (0, _loadCustomRoutes.getRedirectStatus)(data.redirect)\n        };\n\n        if (typeof data.redirect.basePath !== 'undefined') {\n          ;\n          data.props.__N_REDIRECT_BASE_PATH = data.redirect.basePath;\n        }\n\n        ;\n        renderOpts.isRedirect = true;\n      }\n\n      if ((dev || isBuildTimeSSG) && !renderOpts.isNotFound && !(0, _isSerializableProps.isSerializableProps)(pathname, 'getStaticProps', data.props)) {\n        // this fn should throw an error instead of ever returning `false`\n        throw new Error('invariant: getStaticProps did not return valid props. Please report this.');\n      }\n\n      if ('revalidate' in data) {\n        if (typeof data.revalidate === 'number') {\n          if (!Number.isInteger(data.revalidate)) {\n            throw new Error(`A page's revalidate option must be seconds expressed as a natural number for ${req.url}. Mixed numbers, such as '${data.revalidate}', cannot be used.` + `\\nTry changing the value to '${Math.ceil(data.revalidate)}' or using \\`Math.ceil()\\` if you're computing the value.`);\n          } else if (data.revalidate <= 0) {\n            throw new Error(`A page's revalidate option can not be less than or equal to zero for ${req.url}. A revalidate option of zero means to revalidate after _every_ request, and implies stale data cannot be tolerated.` + `\\n\\nTo never revalidate, you can set revalidate to \\`false\\` (only ran once at build-time).` + `\\nTo revalidate as soon as possible, you can set the value to \\`1\\`.`);\n          } else if (data.revalidate > 31536000) {\n            // if it's greater than a year for some reason error\n            console.warn(`Warning: A page's revalidate option was set to more than a year for ${req.url}. This may have been done in error.` + `\\nTo only run getStaticProps at build-time and not revalidate at runtime, you can set \\`revalidate\\` to \\`false\\`!`);\n          }\n        } else if (data.revalidate === true) {\n          // When enabled, revalidate after 1 second. This value is optimal for\n          // the most up-to-date page possible, but without a 1-to-1\n          // request-refresh ratio.\n          data.revalidate = 1;\n        } else if (data.revalidate === false || typeof data.revalidate === 'undefined') {\n          // By default, we never revalidate.\n          data.revalidate = false;\n        } else {\n          throw new Error(`A page's revalidate option must be seconds expressed as a natural number. Mixed numbers and strings cannot be used. Received '${JSON.stringify(data.revalidate)}' for ${req.url}`);\n        }\n      } else {\n        // By default, we never revalidate.\n        ;\n        data.revalidate = false;\n      } // this must come after revalidate is attached\n\n\n      if (renderOpts.isNotFound) {\n        return null;\n      }\n\n      props.pageProps = Object.assign({}, props.pageProps, 'props' in data ? data.props : undefined) // pass up revalidate and props for export\n      // TODO: change this to a different passing mechanism\n      ;\n      renderOpts.revalidate = 'revalidate' in data ? data.revalidate : undefined;\n      renderOpts.pageData = props;\n    }\n\n    if (getServerSideProps) {\n      props[_constants2.SERVER_PROPS_ID] = true;\n    }\n\n    if (getServerSideProps && !isFallback) {\n      let data;\n\n      try {\n        data = await getServerSideProps({\n          req,\n          res,\n          query,\n          resolvedUrl: renderOpts.resolvedUrl,\n          ...(pageIsDynamic ? {\n            params: params\n          } : undefined),\n          ...(previewData !== false ? {\n            preview: true,\n            previewData: previewData\n          } : undefined),\n          locales: renderOpts.locales,\n          locale: renderOpts.locale,\n          defaultLocale: renderOpts.defaultLocale\n        });\n      } catch (serverSidePropsError) {\n        // remove not found error code to prevent triggering legacy\n        // 404 rendering\n        if (serverSidePropsError.code === 'ENOENT') {\n          delete serverSidePropsError.code;\n        }\n\n        throw serverSidePropsError;\n      }\n\n      if (data == null) {\n        throw new Error(_constants.GSSP_NO_RETURNED_VALUE);\n      }\n\n      const invalidKeys = Object.keys(data).filter(key => key !== 'props' && key !== 'redirect' && key !== 'notFound');\n\n      if (data.unstable_notFound) {\n        throw new Error(`unstable_notFound has been renamed to notFound, please update the field to continue. Page: ${pathname}`);\n      }\n\n      if (data.unstable_redirect) {\n        throw new Error(`unstable_redirect has been renamed to redirect, please update the field to continue. Page: ${pathname}`);\n      }\n\n      if (invalidKeys.length) {\n        throw new Error(invalidKeysMsg('getServerSideProps', invalidKeys));\n      }\n\n      if ('notFound' in data && data.notFound) {\n        if (pathname === '/404') {\n          throw new Error(`The /404 page can not return notFound in \"getStaticProps\", please remove it to continue!`);\n        }\n\n        ;\n        renderOpts.isNotFound = true;\n        return null;\n      }\n\n      if ('redirect' in data && typeof data.redirect === 'object') {\n        checkRedirectValues(data.redirect, req, 'getServerSideProps');\n        data.props = {\n          __N_REDIRECT: data.redirect.destination,\n          __N_REDIRECT_STATUS: (0, _loadCustomRoutes.getRedirectStatus)(data.redirect)\n        };\n\n        if (typeof data.redirect.basePath !== 'undefined') {\n          ;\n          data.props.__N_REDIRECT_BASE_PATH = data.redirect.basePath;\n        }\n\n        ;\n        renderOpts.isRedirect = true;\n      }\n\n      if ((dev || isBuildTimeSSG) && !(0, _isSerializableProps.isSerializableProps)(pathname, 'getServerSideProps', data.props)) {\n        // this fn should throw an error instead of ever returning `false`\n        throw new Error('invariant: getServerSideProps did not return valid props. Please report this.');\n      }\n\n      props.pageProps = Object.assign({}, props.pageProps, data.props);\n      renderOpts.pageData = props;\n    }\n  } catch (dataFetchError) {\n    if (isDataReq || !dev || !dataFetchError) throw dataFetchError;\n    ctx.err = dataFetchError;\n    renderOpts.err = dataFetchError;\n    console.error(dataFetchError);\n  }\n\n  if (!isSSG && // we only show this warning for legacy pages\n  !getServerSideProps && process.env.NODE_ENV !== 'production' && Object.keys(((_props = props) == null ? void 0 : _props.pageProps) || {}).includes('url')) {\n    console.warn(`The prop \\`url\\` is a reserved prop in Next.js for legacy reasons and will be overridden on page ${pathname}\\n` + `See more info here: https://err.sh/vercel/next.js/reserved-page-prop`);\n  } // Avoid rendering page un-necessarily for getServerSideProps data request\n  // and getServerSideProps/getStaticProps redirects\n\n\n  if (isDataReq && !isSSG || renderOpts.isRedirect) {\n    return props;\n  } // We don't call getStaticProps or getServerSideProps while generating\n  // the fallback so make sure to set pageProps to an empty object\n\n\n  if (isFallback) {\n    props.pageProps = {};\n  } // the response might be finished on the getInitialProps call\n\n\n  if ((0, _utils.isResSent)(res) && !isSSG) return null; // we preload the buildManifest for auto-export dynamic pages\n  // to speed up hydrating query values\n\n  let filteredBuildManifest = buildManifest;\n\n  if (isAutoExport && pageIsDynamic) {\n    const page = (0, _denormalizePagePath.denormalizePagePath)((0, _normalizePagePath.normalizePagePath)(pathname)); // This code would be much cleaner using `immer` and directly pushing into\n    // the result from `getPageFiles`, we could maybe consider that in the\n    // future.\n\n    if (page in filteredBuildManifest.pages) {\n      filteredBuildManifest = { ...filteredBuildManifest,\n        pages: { ...filteredBuildManifest.pages,\n          [page]: [...filteredBuildManifest.pages[page], ...filteredBuildManifest.lowPriorityFiles.filter(f => f.includes('_buildManifest'))]\n        },\n        lowPriorityFiles: filteredBuildManifest.lowPriorityFiles.filter(f => !f.includes('_buildManifest'))\n      };\n    }\n  }\n\n  const renderPage = (options = {}) => {\n    if (ctx.err && ErrorDebug) {\n      return {\n        html: (0, _server.renderToString)( /*#__PURE__*/_react.default.createElement(ErrorDebug, {\n          error: ctx.err\n        })),\n        head\n      };\n    }\n\n    if (dev && (props.router || props.Component)) {\n      throw new Error(`'router' and 'Component' can not be returned in getInitialProps from _app.js https://err.sh/vercel/next.js/cant-override-next-props`);\n    }\n\n    const {\n      App: EnhancedApp,\n      Component: EnhancedComponent\n    } = enhanceComponents(options, App, Component);\n    const html = (0, _server.renderToString)( /*#__PURE__*/_react.default.createElement(AppContainer, null, /*#__PURE__*/_react.default.createElement(EnhancedApp, Object.assign({\n      Component: EnhancedComponent,\n      router: router\n    }, props))));\n    return {\n      html,\n      head\n    };\n  };\n\n  const documentCtx = { ...ctx,\n    renderPage\n  };\n  const docProps = await (0, _utils.loadGetInitialProps)(Document, documentCtx); // the response might be finished on the getInitialProps call\n\n  if ((0, _utils.isResSent)(res) && !isSSG) return null;\n\n  if (!docProps || typeof docProps.html !== 'string') {\n    const message = `\"${(0, _utils.getDisplayName)(Document)}.getInitialProps()\" should resolve to an object with a \"html\" prop set with a valid html string`;\n    throw new Error(message);\n  }\n\n  const dynamicImportIdsSet = new Set();\n  const dynamicImports = [];\n\n  for (const mod of reactLoadableModules) {\n    const manifestItem = reactLoadableManifest[mod];\n\n    if (manifestItem) {\n      manifestItem.forEach(item => {\n        dynamicImports.push(item);\n        dynamicImportIdsSet.add(item.id);\n      });\n    }\n  }\n\n  const dynamicImportsIds = [...dynamicImportIdsSet];\n  const hybridAmp = ampState.hybrid; // update renderOpts so export knows current state\n\n  renderOpts.inAmpMode = inAmpMode;\n  renderOpts.hybridAmp = hybridAmp;\n  const docComponentsRendered = {};\n  let html = renderDocument(Document, { ...renderOpts,\n    canonicalBase: !renderOpts.ampPath && req.__nextStrippedLocale ? `${renderOpts.canonicalBase || ''}/${renderOpts.locale}` : renderOpts.canonicalBase,\n    docComponentsRendered,\n    buildManifest: filteredBuildManifest,\n    // Only enabled in production as development mode has features relying on HMR (style injection for example)\n    unstable_runtimeJS: process.env.NODE_ENV === 'production' ? pageConfig.unstable_runtimeJS : undefined,\n    dangerousAsPath: router.asPath,\n    ampState,\n    props,\n    headTags: await headTags(documentCtx),\n    isFallback,\n    docProps,\n    pathname,\n    ampPath,\n    query,\n    inAmpMode,\n    hybridAmp,\n    dynamicImportsIds,\n    dynamicImports,\n    gsp: !!getStaticProps ? true : undefined,\n    gssp: !!getServerSideProps ? true : undefined,\n    gip: hasPageGetInitialProps ? true : undefined,\n    appGip: !defaultAppGetInitialProps ? true : undefined,\n    devOnlyCacheBusterQueryString,\n    scriptLoader\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    const nonRenderedComponents = [];\n    const expectedDocComponents = ['Main', 'Head', 'NextScript', 'Html'];\n\n    for (const comp of expectedDocComponents) {\n      if (!docComponentsRendered[comp]) {\n        nonRenderedComponents.push(comp);\n      }\n    }\n\n    const plural = nonRenderedComponents.length !== 1 ? 's' : '';\n\n    if (nonRenderedComponents.length) {\n      const missingComponentList = nonRenderedComponents.map(e => `<${e} />`).join(', ');\n      (0, _log.warn)(`Your custom Document (pages/_document) did not render all the required subcomponent${plural}.\\n` + `Missing component${plural}: ${missingComponentList}\\n` + 'Read how to fix here: https://err.sh/next.js/missing-document-component');\n    }\n  }\n\n  if (inAmpMode && html) {\n    // inject HTML to AMP_RENDER_TARGET to allow rendering\n    // directly to body in AMP mode\n    const ampRenderIndex = html.indexOf(_constants2.AMP_RENDER_TARGET);\n    html = html.substring(0, ampRenderIndex) + `<!-- __NEXT_DATA__ -->${docProps.html}` + html.substring(ampRenderIndex + _constants2.AMP_RENDER_TARGET.length);\n    html = await (0, _optimizeAmp.default)(html, renderOpts.ampOptimizerConfig);\n\n    if (!renderOpts.ampSkipValidation && renderOpts.ampValidator) {\n      await renderOpts.ampValidator(html, pathname);\n    }\n  } // Avoid postProcess if both flags are false\n\n\n  if (process.env.__NEXT_OPTIMIZE_FONTS || process.env.__NEXT_OPTIMIZE_IMAGES) {\n    html = await (0, _postProcess.default)(html, {\n      getFontDefinition\n    }, {\n      optimizeFonts: renderOpts.optimizeFonts,\n      optimizeImages: renderOpts.optimizeImages\n    });\n  }\n\n  if (renderOpts.optimizeCss) {\n    // eslint-disable-next-line import/no-extraneous-dependencies\n    const Critters = require('critters');\n\n    const cssOptimizer = new Critters({\n      ssrMode: true,\n      reduceInlineStyles: false,\n      path: renderOpts.distDir,\n      publicPath: '/_next/',\n      preload: 'media',\n      fonts: false,\n      ...renderOpts.optimizeCss\n    });\n    html = await cssOptimizer.process(html);\n  }\n\n  if (inAmpMode || hybridAmp) {\n    // fix &amp being escaped for amphtml rel link\n    html = html.replace(/&amp;amp=1/g, '&amp=1');\n  }\n\n  return html;\n}\n\nfunction errorToJSON(err) {\n  const {\n    name,\n    message,\n    stack\n  } = err;\n  return {\n    name,\n    message,\n    stack\n  };\n}\n\nfunction serializeError(dev, err) {\n  if (dev) {\n    return errorToJSON(err);\n  }\n\n  return {\n    name: 'Internal Server Error.',\n    message: '500 - Internal Server Error.',\n    statusCode: 500\n  };\n}","map":{"version":3,"sources":["../../../next-server/server/render.tsx"],"names":["message","ServerRouter","route","pathname","query","asPath","basePath","events","isFallback","locale","isReady","locales","defaultLocale","domainLocales","constructor","push","noRouter","replace","reload","back","prefetch","beforePopState","Component","options","App","__NEXT_DATA__","page","assetPrefix","dynamicIds","dynamicImportsIds","err","serializeError","isDevelopment","invalidKeysMsg","methodName","invalidKeys","errors","hasStatusCode","hasPermanent","allowedStatusCodes","destinationType","basePathType","method","req","url","renderOpts","Date","Object","dev","ampPath","pageConfig","getFontDefinition","callMiddleware","props","results","Document","middlewareFunc","curResults","headTags","isSSG","isBuildTimeSSG","defaultAppGetInitialProps","hasPageGetInitialProps","pageIsDynamic","isAutoExport","GSSP_COMPONENT_MEMBER_ERROR","SSG_GET_INITIAL_PROPS_CONFLICT","SERVER_PROPS_GET_INIT_PROPS_CONFLICT","getServerSideProps","SERVER_PROPS_SSG_CONFLICT","require","isValidElementType","amp","PAGES_404_GET_INITIAL_PROPS_ERROR","Loadable","routerIsReady","router","ctx","res","AppTree","ampState","ampFirst","hasQuery","Boolean","hybrid","inAmpMode","reactLoadableModules","head","scriptLoader","AppContainer","updateHead","state","updateScripts","scripts","mountedInstances","moduleName","STATIC_PROPS_ID","previewData","data","getStaticProps","params","preview","staticPropsError","GSP_NO_RETURNED_VALUE","key","UNSTABLE_REVALIDATE_RENAME_ERROR","process","checkRedirectValues","__N_REDIRECT","__N_REDIRECT_STATUS","Number","revalidate","Math","console","JSON","SERVER_PROPS_ID","resolvedUrl","serverSidePropsError","GSSP_NO_RETURNED_VALUE","isDataReq","filteredBuildManifest","pages","f","lowPriorityFiles","renderPage","html","enhanceComponents","documentCtx","docProps","dynamicImportIdsSet","dynamicImports","manifestItem","reactLoadableManifest","item","hybridAmp","docComponentsRendered","renderDocument","canonicalBase","buildManifest","unstable_runtimeJS","dangerousAsPath","gsp","gssp","gip","appGip","nonRenderedComponents","expectedDocComponents","plural","missingComponentList","e","ampRenderIndex","AMP_RENDER_TARGET","optimizeFonts","optimizeImages","Critters","cssOptimizer","ssrMode","reduceInlineStyles","path","publicPath","preload","fonts","errorToJSON","name","statusCode"],"mappings":"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","sourcesContent":["import { IncomingMessage, ServerResponse } from 'http'\nimport { ParsedUrlQuery } from 'querystring'\nimport React from 'react'\nimport { renderToStaticMarkup, renderToString } from 'react-dom/server'\nimport { warn } from '../../build/output/log'\nimport { UnwrapPromise } from '../../lib/coalesced-function'\nimport {\n  GSP_NO_RETURNED_VALUE,\n  GSSP_COMPONENT_MEMBER_ERROR,\n  GSSP_NO_RETURNED_VALUE,\n  PAGES_404_GET_INITIAL_PROPS_ERROR,\n  SERVER_PROPS_GET_INIT_PROPS_CONFLICT,\n  SERVER_PROPS_SSG_CONFLICT,\n  SSG_GET_INITIAL_PROPS_CONFLICT,\n  UNSTABLE_REVALIDATE_RENAME_ERROR,\n} from '../../lib/constants'\nimport { isSerializableProps } from '../../lib/is-serializable-props'\nimport { GetServerSideProps, GetStaticProps } from '../../types'\nimport { isInAmpMode } from '../lib/amp'\nimport { AmpStateContext } from '../lib/amp-context'\nimport {\n  AMP_RENDER_TARGET,\n  SERVER_PROPS_ID,\n  STATIC_PROPS_ID,\n} from '../lib/constants'\nimport { defaultHead } from '../lib/head'\nimport { HeadManagerContext } from '../lib/head-manager-context'\nimport Loadable from '../lib/loadable'\nimport { LoadableContext } from '../lib/loadable-context'\nimport mitt, { MittEmitter } from '../lib/mitt'\nimport postProcess from '../lib/post-process'\nimport { RouterContext } from '../lib/router-context'\nimport { NextRouter } from '../lib/router/router'\nimport { isDynamicRoute } from '../lib/router/utils/is-dynamic'\nimport {\n  AppType,\n  ComponentsEnhancer,\n  DocumentInitialProps,\n  DocumentProps,\n  DocumentType,\n  getDisplayName,\n  isResSent,\n  loadGetInitialProps,\n  NextComponentType,\n  RenderPage,\n} from '../lib/utils'\nimport { tryGetPreviewData, __ApiPreviewProps } from './api-utils'\nimport { denormalizePagePath } from './denormalize-page-path'\nimport { FontManifest, getFontDefinitionFromManifest } from './font-utils'\nimport { LoadComponentsReturnType, ManifestItem } from './load-components'\nimport { normalizePagePath } from './normalize-page-path'\nimport optimizeAmp from './optimize-amp'\nimport {\n  allowedStatusCodes,\n  getRedirectStatus,\n  Redirect,\n} from '../../lib/load-custom-routes'\nimport { DomainLocales } from './config'\n\nfunction noRouter() {\n  const message =\n    'No router instance found. you should only use \"next/router\" inside the client side of your app. https://err.sh/vercel/next.js/no-router-instance'\n  throw new Error(message)\n}\n\nclass ServerRouter implements NextRouter {\n  route: string\n  pathname: string\n  query: ParsedUrlQuery\n  asPath: string\n  basePath: string\n  events: any\n  isFallback: boolean\n  locale?: string\n  isReady: boolean\n  locales?: string[]\n  defaultLocale?: string\n  domainLocales?: DomainLocales\n  // TODO: Remove in the next major version, as this would mean the user is adding event listeners in server-side `render` method\n  static events: MittEmitter = mitt()\n\n  constructor(\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    { isFallback }: { isFallback: boolean },\n    isReady: boolean,\n    basePath: string,\n    locale?: string,\n    locales?: string[],\n    defaultLocale?: string,\n    domainLocales?: DomainLocales\n  ) {\n    this.route = pathname.replace(/\\/$/, '') || '/'\n    this.pathname = pathname\n    this.query = query\n    this.asPath = as\n    this.isFallback = isFallback\n    this.basePath = basePath\n    this.locale = locale\n    this.locales = locales\n    this.defaultLocale = defaultLocale\n    this.isReady = isReady\n    this.domainLocales = domainLocales\n  }\n\n  push(): any {\n    noRouter()\n  }\n  replace(): any {\n    noRouter()\n  }\n  reload() {\n    noRouter()\n  }\n  back() {\n    noRouter()\n  }\n  prefetch(): any {\n    noRouter()\n  }\n  beforePopState() {\n    noRouter()\n  }\n}\n\nfunction enhanceComponents(\n  options: ComponentsEnhancer,\n  App: AppType,\n  Component: NextComponentType\n): {\n  App: AppType\n  Component: NextComponentType\n} {\n  // For backwards compatibility\n  if (typeof options === 'function') {\n    return {\n      App,\n      Component: options(Component),\n    }\n  }\n\n  return {\n    App: options.enhanceApp ? options.enhanceApp(App) : App,\n    Component: options.enhanceComponent\n      ? options.enhanceComponent(Component)\n      : Component,\n  }\n}\n\nexport type RenderOptsPartial = {\n  buildId: string\n  canonicalBase: string\n  runtimeConfig?: { [key: string]: any }\n  assetPrefix?: string\n  err?: Error | null\n  autoExport?: boolean\n  nextExport?: boolean\n  dev?: boolean\n  ampMode?: any\n  ampPath?: string\n  inAmpMode?: boolean\n  hybridAmp?: boolean\n  ErrorDebug?: React.ComponentType<{ error: Error }>\n  ampValidator?: (html: string, pathname: string) => Promise<void>\n  ampSkipValidation?: boolean\n  ampOptimizerConfig?: { [key: string]: any }\n  isDataReq?: boolean\n  params?: ParsedUrlQuery\n  previewProps: __ApiPreviewProps\n  basePath: string\n  unstable_runtimeJS?: false\n  optimizeFonts: boolean\n  fontManifest?: FontManifest\n  optimizeImages: boolean\n  optimizeCss: any\n  devOnlyCacheBusterQueryString?: string\n  resolvedUrl?: string\n  resolvedAsPath?: string\n  distDir?: string\n  locale?: string\n  locales?: string[]\n  defaultLocale?: string\n  domainLocales?: DomainLocales\n}\n\nexport type RenderOpts = LoadComponentsReturnType & RenderOptsPartial\n\nfunction renderDocument(\n  Document: DocumentType,\n  {\n    buildManifest,\n    docComponentsRendered,\n    props,\n    docProps,\n    pathname,\n    query,\n    buildId,\n    canonicalBase,\n    assetPrefix,\n    runtimeConfig,\n    nextExport,\n    autoExport,\n    isFallback,\n    dynamicImportsIds,\n    dangerousAsPath,\n    err,\n    dev,\n    ampPath,\n    ampState,\n    inAmpMode,\n    hybridAmp,\n    dynamicImports,\n    headTags,\n    gsp,\n    gssp,\n    customServer,\n    gip,\n    appGip,\n    unstable_runtimeJS,\n    devOnlyCacheBusterQueryString,\n    scriptLoader,\n    locale,\n    locales,\n    defaultLocale,\n    domainLocales,\n  }: RenderOpts & {\n    props: any\n    docComponentsRendered: DocumentProps['docComponentsRendered']\n    docProps: DocumentInitialProps\n    pathname: string\n    query: ParsedUrlQuery\n    dangerousAsPath: string\n    ampState: any\n    ampPath: string\n    inAmpMode: boolean\n    hybridAmp: boolean\n    dynamicImportsIds: string[]\n    dynamicImports: ManifestItem[]\n    headTags: any\n    isFallback?: boolean\n    gsp?: boolean\n    gssp?: boolean\n    customServer?: boolean\n    gip?: boolean\n    appGip?: boolean\n    devOnlyCacheBusterQueryString: string\n    scriptLoader: any\n  }\n): string {\n  return (\n    '<!DOCTYPE html>' +\n    renderToStaticMarkup(\n      <AmpStateContext.Provider value={ampState}>\n        {Document.renderDocument(Document, {\n          __NEXT_DATA__: {\n            props, // The result of getInitialProps\n            page: pathname, // The rendered page\n            query, // querystring parsed / passed by the user\n            buildId, // buildId is used to facilitate caching of page bundles, we send it to the client so that pageloader knows where to load bundles\n            assetPrefix: assetPrefix === '' ? undefined : assetPrefix, // send assetPrefix to the client side when configured, otherwise don't sent in the resulting HTML\n            runtimeConfig, // runtimeConfig if provided, otherwise don't sent in the resulting HTML\n            nextExport, // If this is a page exported by `next export`\n            autoExport, // If this is an auto exported page\n            isFallback,\n            dynamicIds:\n              dynamicImportsIds.length === 0 ? undefined : dynamicImportsIds,\n            err: err ? serializeError(dev, err) : undefined, // Error if one happened, otherwise don't sent in the resulting HTML\n            gsp, // whether the page is getStaticProps\n            gssp, // whether the page is getServerSideProps\n            customServer, // whether the user is using a custom server\n            gip, // whether the page has getInitialProps\n            appGip, // whether the _app has getInitialProps\n            locale,\n            locales,\n            defaultLocale,\n            domainLocales,\n          },\n          buildManifest,\n          docComponentsRendered,\n          dangerousAsPath,\n          canonicalBase,\n          ampPath,\n          inAmpMode,\n          isDevelopment: !!dev,\n          hybridAmp,\n          dynamicImports,\n          assetPrefix,\n          headTags,\n          unstable_runtimeJS,\n          devOnlyCacheBusterQueryString,\n          scriptLoader,\n          locale,\n          ...docProps,\n        })}\n      </AmpStateContext.Provider>\n    )\n  )\n}\n\nconst invalidKeysMsg = (methodName: string, invalidKeys: string[]) => {\n  return (\n    `Additional keys were returned from \\`${methodName}\\`. Properties intended for your component must be nested under the \\`props\\` key, e.g.:` +\n    `\\n\\n\\treturn { props: { title: 'My Title', content: '...' } }` +\n    `\\n\\nKeys that need to be moved: ${invalidKeys.join(', ')}.` +\n    `\\nRead more: https://err.sh/next.js/invalid-getstaticprops-value`\n  )\n}\n\nfunction checkRedirectValues(\n  redirect: Redirect,\n  req: IncomingMessage,\n  method: 'getStaticProps' | 'getServerSideProps'\n) {\n  const { destination, permanent, statusCode, basePath } = redirect\n  let errors: string[] = []\n\n  const hasStatusCode = typeof statusCode !== 'undefined'\n  const hasPermanent = typeof permanent !== 'undefined'\n\n  if (hasPermanent && hasStatusCode) {\n    errors.push(`\\`permanent\\` and \\`statusCode\\` can not both be provided`)\n  } else if (hasPermanent && typeof permanent !== 'boolean') {\n    errors.push(`\\`permanent\\` must be \\`true\\` or \\`false\\``)\n  } else if (hasStatusCode && !allowedStatusCodes.has(statusCode!)) {\n    errors.push(\n      `\\`statusCode\\` must undefined or one of ${[...allowedStatusCodes].join(\n        ', '\n      )}`\n    )\n  }\n  const destinationType = typeof destination\n\n  if (destinationType !== 'string') {\n    errors.push(\n      `\\`destination\\` should be string but received ${destinationType}`\n    )\n  }\n\n  const basePathType = typeof basePath\n\n  if (basePathType !== 'undefined' && basePathType !== 'boolean') {\n    errors.push(\n      `\\`basePath\\` should be undefined or a false, received ${basePathType}`\n    )\n  }\n\n  if (errors.length > 0) {\n    throw new Error(\n      `Invalid redirect object returned from ${method} for ${req.url}\\n` +\n        errors.join(' and ') +\n        '\\n' +\n        `See more info here: https://err.sh/vercel/next.js/invalid-redirect-gssp`\n    )\n  }\n}\n\nexport async function renderToHTML(\n  req: IncomingMessage,\n  res: ServerResponse,\n  pathname: string,\n  query: ParsedUrlQuery,\n  renderOpts: RenderOpts\n): Promise<string | null> {\n  // In dev we invalidate the cache by appending a timestamp to the resource URL.\n  // This is a workaround to fix https://github.com/vercel/next.js/issues/5860\n  // TODO: remove this workaround when https://bugs.webkit.org/show_bug.cgi?id=187726 is fixed.\n  renderOpts.devOnlyCacheBusterQueryString = renderOpts.dev\n    ? renderOpts.devOnlyCacheBusterQueryString || `?ts=${Date.now()}`\n    : ''\n\n  // don't modify original query object\n  query = Object.assign({}, query)\n\n  const {\n    err,\n    dev = false,\n    ampPath = '',\n    App,\n    Document,\n    pageConfig = {},\n    Component,\n    buildManifest,\n    fontManifest,\n    reactLoadableManifest,\n    ErrorDebug,\n    getStaticProps,\n    getStaticPaths,\n    getServerSideProps,\n    isDataReq,\n    params,\n    previewProps,\n    basePath,\n    devOnlyCacheBusterQueryString,\n  } = renderOpts\n\n  const getFontDefinition = (url: string): string => {\n    if (fontManifest) {\n      return getFontDefinitionFromManifest(url, fontManifest)\n    }\n    return ''\n  }\n\n  const callMiddleware = async (method: string, args: any[], props = false) => {\n    let results: any = props ? {} : []\n\n    if ((Document as any)[`${method}Middleware`]) {\n      let middlewareFunc = await (Document as any)[`${method}Middleware`]\n      middlewareFunc = middlewareFunc.default || middlewareFunc\n\n      const curResults = await middlewareFunc(...args)\n      if (props) {\n        for (const result of curResults) {\n          results = {\n            ...results,\n            ...result,\n          }\n        }\n      } else {\n        results = curResults\n      }\n    }\n    return results\n  }\n\n  const headTags = (...args: any) => callMiddleware('headTags', args)\n\n  const isFallback = !!query.__nextFallback\n  delete query.__nextFallback\n  delete query.__nextLocale\n  delete query.__nextDefaultLocale\n\n  const isSSG = !!getStaticProps\n  const isBuildTimeSSG = isSSG && renderOpts.nextExport\n  const defaultAppGetInitialProps =\n    App.getInitialProps === (App as any).origGetInitialProps\n\n  const hasPageGetInitialProps = !!(Component as any).getInitialProps\n\n  const pageIsDynamic = isDynamicRoute(pathname)\n\n  const isAutoExport =\n    !hasPageGetInitialProps &&\n    defaultAppGetInitialProps &&\n    !isSSG &&\n    !getServerSideProps\n\n  for (const methodName of [\n    'getStaticProps',\n    'getServerSideProps',\n    'getStaticPaths',\n  ]) {\n    if ((Component as any)[methodName]) {\n      throw new Error(\n        `page ${pathname} ${methodName} ${GSSP_COMPONENT_MEMBER_ERROR}`\n      )\n    }\n  }\n\n  if (hasPageGetInitialProps && isSSG) {\n    throw new Error(SSG_GET_INITIAL_PROPS_CONFLICT + ` ${pathname}`)\n  }\n\n  if (hasPageGetInitialProps && getServerSideProps) {\n    throw new Error(SERVER_PROPS_GET_INIT_PROPS_CONFLICT + ` ${pathname}`)\n  }\n\n  if (getServerSideProps && isSSG) {\n    throw new Error(SERVER_PROPS_SSG_CONFLICT + ` ${pathname}`)\n  }\n\n  if (!!getStaticPaths && !isSSG) {\n    throw new Error(\n      `getStaticPaths was added without a getStaticProps in ${pathname}. Without getStaticProps, getStaticPaths does nothing`\n    )\n  }\n\n  if (isSSG && pageIsDynamic && !getStaticPaths) {\n    throw new Error(\n      `getStaticPaths is required for dynamic SSG pages and is missing for '${pathname}'.` +\n        `\\nRead more: https://err.sh/next.js/invalid-getstaticpaths-value`\n    )\n  }\n\n  if (dev) {\n    const { isValidElementType } = require('react-is')\n    if (!isValidElementType(Component)) {\n      throw new Error(\n        `The default export is not a React Component in page: \"${pathname}\"`\n      )\n    }\n\n    if (!isValidElementType(App)) {\n      throw new Error(\n        `The default export is not a React Component in page: \"/_app\"`\n      )\n    }\n\n    if (!isValidElementType(Document)) {\n      throw new Error(\n        `The default export is not a React Component in page: \"/_document\"`\n      )\n    }\n\n    if (isAutoExport || isFallback) {\n      // remove query values except ones that will be set during export\n      query = {\n        ...(query.amp\n          ? {\n              amp: query.amp,\n            }\n          : {}),\n      }\n      renderOpts.resolvedAsPath = `${pathname}${\n        // ensure trailing slash is present for non-dynamic auto-export pages\n        req.url!.endsWith('/') && pathname !== '/' && !pageIsDynamic ? '/' : ''\n      }`\n      req.url = pathname\n      renderOpts.nextExport = true\n    }\n\n    if (pathname === '/404' && (hasPageGetInitialProps || getServerSideProps)) {\n      throw new Error(PAGES_404_GET_INITIAL_PROPS_ERROR)\n    }\n  }\n  if (isAutoExport) renderOpts.autoExport = true\n  if (isSSG) renderOpts.nextExport = false\n\n  await Loadable.preloadAll() // Make sure all dynamic imports are loaded\n\n  // url will always be set\n  const asPath: string = renderOpts.resolvedAsPath || (req.url as string)\n  const routerIsReady = !!(getServerSideProps || hasPageGetInitialProps)\n  const router = new ServerRouter(\n    pathname,\n    query,\n    asPath,\n    {\n      isFallback: isFallback,\n    },\n    routerIsReady,\n    basePath,\n    renderOpts.locale,\n    renderOpts.locales,\n    renderOpts.defaultLocale,\n    renderOpts.domainLocales\n  )\n  const ctx = {\n    err,\n    req: isAutoExport ? undefined : req,\n    res: isAutoExport ? undefined : res,\n    pathname,\n    query,\n    asPath,\n    AppTree: (props: any) => {\n      return (\n        <AppContainer>\n          <App {...props} Component={Component} router={router} />\n        </AppContainer>\n      )\n    },\n  }\n  let props: any\n\n  const ampState = {\n    ampFirst: pageConfig.amp === true,\n    hasQuery: Boolean(query.amp),\n    hybrid: pageConfig.amp === 'hybrid',\n  }\n\n  const inAmpMode = isInAmpMode(ampState)\n\n  const reactLoadableModules: string[] = []\n\n  let head: JSX.Element[] = defaultHead(inAmpMode)\n\n  let scriptLoader: any = {}\n\n  const AppContainer = ({ children }: any) => (\n    <RouterContext.Provider value={router}>\n      <AmpStateContext.Provider value={ampState}>\n        <HeadManagerContext.Provider\n          value={{\n            updateHead: (state) => {\n              head = state\n            },\n            updateScripts: (scripts) => {\n              scriptLoader = scripts\n            },\n            scripts: {},\n            mountedInstances: new Set(),\n          }}\n        >\n          <LoadableContext.Provider\n            value={(moduleName) => reactLoadableModules.push(moduleName)}\n          >\n            {children}\n          </LoadableContext.Provider>\n        </HeadManagerContext.Provider>\n      </AmpStateContext.Provider>\n    </RouterContext.Provider>\n  )\n\n  try {\n    props = await loadGetInitialProps(App, {\n      AppTree: ctx.AppTree,\n      Component,\n      router,\n      ctx,\n    })\n\n    if (isSSG) {\n      props[STATIC_PROPS_ID] = true\n    }\n\n    let previewData: string | false | object | undefined\n\n    if ((isSSG || getServerSideProps) && !isFallback) {\n      // Reads of this are cached on the `req` object, so this should resolve\n      // instantly. There's no need to pass this data down from a previous\n      // invoke, where we'd have to consider server & serverless.\n      previewData = tryGetPreviewData(req, res, previewProps)\n    }\n\n    if (isSSG && !isFallback) {\n      let data: UnwrapPromise<ReturnType<GetStaticProps>>\n\n      try {\n        data = await getStaticProps!({\n          ...(pageIsDynamic ? { params: query as ParsedUrlQuery } : undefined),\n          ...(previewData !== false\n            ? { preview: true, previewData: previewData }\n            : undefined),\n          locales: renderOpts.locales,\n          locale: renderOpts.locale,\n          defaultLocale: renderOpts.defaultLocale,\n        })\n      } catch (staticPropsError) {\n        // remove not found error code to prevent triggering legacy\n        // 404 rendering\n        if (staticPropsError.code === 'ENOENT') {\n          delete staticPropsError.code\n        }\n        throw staticPropsError\n      }\n\n      if (data == null) {\n        throw new Error(GSP_NO_RETURNED_VALUE)\n      }\n\n      const invalidKeys = Object.keys(data).filter(\n        (key) =>\n          key !== 'revalidate' &&\n          key !== 'props' &&\n          key !== 'redirect' &&\n          key !== 'notFound'\n      )\n\n      if (invalidKeys.includes('unstable_revalidate')) {\n        throw new Error(UNSTABLE_REVALIDATE_RENAME_ERROR)\n      }\n\n      if (invalidKeys.length) {\n        throw new Error(invalidKeysMsg('getStaticProps', invalidKeys))\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (\n          typeof (data as any).notFound !== 'undefined' &&\n          typeof (data as any).redirect !== 'undefined'\n        ) {\n          throw new Error(\n            `\\`redirect\\` and \\`notFound\\` can not both be returned from ${\n              isSSG ? 'getStaticProps' : 'getServerSideProps'\n            } at the same time. Page: ${pathname}\\nSee more info here: https://err.sh/next.js/gssp-mixed-not-found-redirect`\n          )\n        }\n      }\n\n      if ('notFound' in data && data.notFound) {\n        if (pathname === '/404') {\n          throw new Error(\n            `The /404 page can not return notFound in \"getStaticProps\", please remove it to continue!`\n          )\n        }\n\n        ;(renderOpts as any).isNotFound = true\n      }\n\n      if (\n        'redirect' in data &&\n        data.redirect &&\n        typeof data.redirect === 'object'\n      ) {\n        checkRedirectValues(data.redirect as Redirect, req, 'getStaticProps')\n\n        if (isBuildTimeSSG) {\n          throw new Error(\n            `\\`redirect\\` can not be returned from getStaticProps during prerendering (${req.url})\\n` +\n              `See more info here: https://err.sh/next.js/gsp-redirect-during-prerender`\n          )\n        }\n\n        ;(data as any).props = {\n          __N_REDIRECT: data.redirect.destination,\n          __N_REDIRECT_STATUS: getRedirectStatus(data.redirect),\n        }\n        if (typeof data.redirect.basePath !== 'undefined') {\n          ;(data as any).props.__N_REDIRECT_BASE_PATH = data.redirect.basePath\n        }\n        ;(renderOpts as any).isRedirect = true\n      }\n\n      if (\n        (dev || isBuildTimeSSG) &&\n        !(renderOpts as any).isNotFound &&\n        !isSerializableProps(pathname, 'getStaticProps', (data as any).props)\n      ) {\n        // this fn should throw an error instead of ever returning `false`\n        throw new Error(\n          'invariant: getStaticProps did not return valid props. Please report this.'\n        )\n      }\n\n      if ('revalidate' in data) {\n        if (typeof data.revalidate === 'number') {\n          if (!Number.isInteger(data.revalidate)) {\n            throw new Error(\n              `A page's revalidate option must be seconds expressed as a natural number for ${req.url}. Mixed numbers, such as '${data.revalidate}', cannot be used.` +\n                `\\nTry changing the value to '${Math.ceil(\n                  data.revalidate\n                )}' or using \\`Math.ceil()\\` if you're computing the value.`\n            )\n          } else if (data.revalidate <= 0) {\n            throw new Error(\n              `A page's revalidate option can not be less than or equal to zero for ${req.url}. A revalidate option of zero means to revalidate after _every_ request, and implies stale data cannot be tolerated.` +\n                `\\n\\nTo never revalidate, you can set revalidate to \\`false\\` (only ran once at build-time).` +\n                `\\nTo revalidate as soon as possible, you can set the value to \\`1\\`.`\n            )\n          } else if (data.revalidate > 31536000) {\n            // if it's greater than a year for some reason error\n            console.warn(\n              `Warning: A page's revalidate option was set to more than a year for ${req.url}. This may have been done in error.` +\n                `\\nTo only run getStaticProps at build-time and not revalidate at runtime, you can set \\`revalidate\\` to \\`false\\`!`\n            )\n          }\n        } else if (data.revalidate === true) {\n          // When enabled, revalidate after 1 second. This value is optimal for\n          // the most up-to-date page possible, but without a 1-to-1\n          // request-refresh ratio.\n          data.revalidate = 1\n        } else if (\n          data.revalidate === false ||\n          typeof data.revalidate === 'undefined'\n        ) {\n          // By default, we never revalidate.\n          data.revalidate = false\n        } else {\n          throw new Error(\n            `A page's revalidate option must be seconds expressed as a natural number. Mixed numbers and strings cannot be used. Received '${JSON.stringify(\n              data.revalidate\n            )}' for ${req.url}`\n          )\n        }\n      } else {\n        // By default, we never revalidate.\n        ;(data as any).revalidate = false\n      }\n\n      // this must come after revalidate is attached\n      if ((renderOpts as any).isNotFound) {\n        return null\n      }\n\n      props.pageProps = Object.assign(\n        {},\n        props.pageProps,\n        'props' in data ? data.props : undefined\n      )\n      // pass up revalidate and props for export\n      // TODO: change this to a different passing mechanism\n      ;(renderOpts as any).revalidate =\n        'revalidate' in data ? data.revalidate : undefined\n      ;(renderOpts as any).pageData = props\n    }\n\n    if (getServerSideProps) {\n      props[SERVER_PROPS_ID] = true\n    }\n\n    if (getServerSideProps && !isFallback) {\n      let data: UnwrapPromise<ReturnType<GetServerSideProps>>\n\n      try {\n        data = await getServerSideProps({\n          req,\n          res,\n          query,\n          resolvedUrl: renderOpts.resolvedUrl as string,\n          ...(pageIsDynamic ? { params: params as ParsedUrlQuery } : undefined),\n          ...(previewData !== false\n            ? { preview: true, previewData: previewData }\n            : undefined),\n          locales: renderOpts.locales,\n          locale: renderOpts.locale,\n          defaultLocale: renderOpts.defaultLocale,\n        })\n      } catch (serverSidePropsError) {\n        // remove not found error code to prevent triggering legacy\n        // 404 rendering\n        if (serverSidePropsError.code === 'ENOENT') {\n          delete serverSidePropsError.code\n        }\n        throw serverSidePropsError\n      }\n\n      if (data == null) {\n        throw new Error(GSSP_NO_RETURNED_VALUE)\n      }\n\n      const invalidKeys = Object.keys(data).filter(\n        (key) => key !== 'props' && key !== 'redirect' && key !== 'notFound'\n      )\n\n      if ((data as any).unstable_notFound) {\n        throw new Error(\n          `unstable_notFound has been renamed to notFound, please update the field to continue. Page: ${pathname}`\n        )\n      }\n      if ((data as any).unstable_redirect) {\n        throw new Error(\n          `unstable_redirect has been renamed to redirect, please update the field to continue. Page: ${pathname}`\n        )\n      }\n\n      if (invalidKeys.length) {\n        throw new Error(invalidKeysMsg('getServerSideProps', invalidKeys))\n      }\n\n      if ('notFound' in data && data.notFound) {\n        if (pathname === '/404') {\n          throw new Error(\n            `The /404 page can not return notFound in \"getStaticProps\", please remove it to continue!`\n          )\n        }\n\n        ;(renderOpts as any).isNotFound = true\n        return null\n      }\n\n      if ('redirect' in data && typeof data.redirect === 'object') {\n        checkRedirectValues(\n          data.redirect as Redirect,\n          req,\n          'getServerSideProps'\n        )\n        ;(data as any).props = {\n          __N_REDIRECT: data.redirect.destination,\n          __N_REDIRECT_STATUS: getRedirectStatus(data.redirect),\n        }\n        if (typeof data.redirect.basePath !== 'undefined') {\n          ;(data as any).props.__N_REDIRECT_BASE_PATH = data.redirect.basePath\n        }\n        ;(renderOpts as any).isRedirect = true\n      }\n\n      if (\n        (dev || isBuildTimeSSG) &&\n        !isSerializableProps(\n          pathname,\n          'getServerSideProps',\n          (data as any).props\n        )\n      ) {\n        // this fn should throw an error instead of ever returning `false`\n        throw new Error(\n          'invariant: getServerSideProps did not return valid props. Please report this.'\n        )\n      }\n\n      props.pageProps = Object.assign({}, props.pageProps, (data as any).props)\n      ;(renderOpts as any).pageData = props\n    }\n  } catch (dataFetchError) {\n    if (isDataReq || !dev || !dataFetchError) throw dataFetchError\n    ctx.err = dataFetchError\n    renderOpts.err = dataFetchError\n    console.error(dataFetchError)\n  }\n\n  if (\n    !isSSG && // we only show this warning for legacy pages\n    !getServerSideProps &&\n    process.env.NODE_ENV !== 'production' &&\n    Object.keys(props?.pageProps || {}).includes('url')\n  ) {\n    console.warn(\n      `The prop \\`url\\` is a reserved prop in Next.js for legacy reasons and will be overridden on page ${pathname}\\n` +\n        `See more info here: https://err.sh/vercel/next.js/reserved-page-prop`\n    )\n  }\n\n  // Avoid rendering page un-necessarily for getServerSideProps data request\n  // and getServerSideProps/getStaticProps redirects\n  if ((isDataReq && !isSSG) || (renderOpts as any).isRedirect) {\n    return props\n  }\n\n  // We don't call getStaticProps or getServerSideProps while generating\n  // the fallback so make sure to set pageProps to an empty object\n  if (isFallback) {\n    props.pageProps = {}\n  }\n\n  // the response might be finished on the getInitialProps call\n  if (isResSent(res) && !isSSG) return null\n\n  // we preload the buildManifest for auto-export dynamic pages\n  // to speed up hydrating query values\n  let filteredBuildManifest = buildManifest\n  if (isAutoExport && pageIsDynamic) {\n    const page = denormalizePagePath(normalizePagePath(pathname))\n    // This code would be much cleaner using `immer` and directly pushing into\n    // the result from `getPageFiles`, we could maybe consider that in the\n    // future.\n    if (page in filteredBuildManifest.pages) {\n      filteredBuildManifest = {\n        ...filteredBuildManifest,\n        pages: {\n          ...filteredBuildManifest.pages,\n          [page]: [\n            ...filteredBuildManifest.pages[page],\n            ...filteredBuildManifest.lowPriorityFiles.filter((f) =>\n              f.includes('_buildManifest')\n            ),\n          ],\n        },\n        lowPriorityFiles: filteredBuildManifest.lowPriorityFiles.filter(\n          (f) => !f.includes('_buildManifest')\n        ),\n      }\n    }\n  }\n\n  const renderPage: RenderPage = (\n    options: ComponentsEnhancer = {}\n  ): { html: string; head: any } => {\n    if (ctx.err && ErrorDebug) {\n      return { html: renderToString(<ErrorDebug error={ctx.err} />), head }\n    }\n\n    if (dev && (props.router || props.Component)) {\n      throw new Error(\n        `'router' and 'Component' can not be returned in getInitialProps from _app.js https://err.sh/vercel/next.js/cant-override-next-props`\n      )\n    }\n\n    const {\n      App: EnhancedApp,\n      Component: EnhancedComponent,\n    } = enhanceComponents(options, App, Component)\n\n    const html = renderToString(\n      <AppContainer>\n        <EnhancedApp Component={EnhancedComponent} router={router} {...props} />\n      </AppContainer>\n    )\n\n    return { html, head }\n  }\n  const documentCtx = { ...ctx, renderPage }\n  const docProps: DocumentInitialProps = await loadGetInitialProps(\n    Document,\n    documentCtx\n  )\n  // the response might be finished on the getInitialProps call\n  if (isResSent(res) && !isSSG) return null\n\n  if (!docProps || typeof docProps.html !== 'string') {\n    const message = `\"${getDisplayName(\n      Document\n    )}.getInitialProps()\" should resolve to an object with a \"html\" prop set with a valid html string`\n    throw new Error(message)\n  }\n\n  const dynamicImportIdsSet = new Set<string>()\n  const dynamicImports: ManifestItem[] = []\n\n  for (const mod of reactLoadableModules) {\n    const manifestItem: ManifestItem[] = reactLoadableManifest[mod]\n\n    if (manifestItem) {\n      manifestItem.forEach((item) => {\n        dynamicImports.push(item)\n        dynamicImportIdsSet.add(item.id as string)\n      })\n    }\n  }\n\n  const dynamicImportsIds = [...dynamicImportIdsSet]\n  const hybridAmp = ampState.hybrid\n\n  // update renderOpts so export knows current state\n  renderOpts.inAmpMode = inAmpMode\n  renderOpts.hybridAmp = hybridAmp\n\n  const docComponentsRendered: DocumentProps['docComponentsRendered'] = {}\n\n  let html = renderDocument(Document, {\n    ...renderOpts,\n    canonicalBase:\n      !renderOpts.ampPath && (req as any).__nextStrippedLocale\n        ? `${renderOpts.canonicalBase || ''}/${renderOpts.locale}`\n        : renderOpts.canonicalBase,\n    docComponentsRendered,\n    buildManifest: filteredBuildManifest,\n    // Only enabled in production as development mode has features relying on HMR (style injection for example)\n    unstable_runtimeJS:\n      process.env.NODE_ENV === 'production'\n        ? pageConfig.unstable_runtimeJS\n        : undefined,\n    dangerousAsPath: router.asPath,\n    ampState,\n    props,\n    headTags: await headTags(documentCtx),\n    isFallback,\n    docProps,\n    pathname,\n    ampPath,\n    query,\n    inAmpMode,\n    hybridAmp,\n    dynamicImportsIds,\n    dynamicImports,\n    gsp: !!getStaticProps ? true : undefined,\n    gssp: !!getServerSideProps ? true : undefined,\n    gip: hasPageGetInitialProps ? true : undefined,\n    appGip: !defaultAppGetInitialProps ? true : undefined,\n    devOnlyCacheBusterQueryString,\n    scriptLoader,\n  })\n\n  if (process.env.NODE_ENV !== 'production') {\n    const nonRenderedComponents = []\n    const expectedDocComponents = ['Main', 'Head', 'NextScript', 'Html']\n\n    for (const comp of expectedDocComponents) {\n      if (!(docComponentsRendered as any)[comp]) {\n        nonRenderedComponents.push(comp)\n      }\n    }\n    const plural = nonRenderedComponents.length !== 1 ? 's' : ''\n\n    if (nonRenderedComponents.length) {\n      const missingComponentList = nonRenderedComponents\n        .map((e) => `<${e} />`)\n        .join(', ')\n      warn(\n        `Your custom Document (pages/_document) did not render all the required subcomponent${plural}.\\n` +\n          `Missing component${plural}: ${missingComponentList}\\n` +\n          'Read how to fix here: https://err.sh/next.js/missing-document-component'\n      )\n    }\n  }\n\n  if (inAmpMode && html) {\n    // inject HTML to AMP_RENDER_TARGET to allow rendering\n    // directly to body in AMP mode\n    const ampRenderIndex = html.indexOf(AMP_RENDER_TARGET)\n    html =\n      html.substring(0, ampRenderIndex) +\n      `<!-- __NEXT_DATA__ -->${docProps.html}` +\n      html.substring(ampRenderIndex + AMP_RENDER_TARGET.length)\n    html = await optimizeAmp(html, renderOpts.ampOptimizerConfig)\n\n    if (!renderOpts.ampSkipValidation && renderOpts.ampValidator) {\n      await renderOpts.ampValidator(html, pathname)\n    }\n  }\n\n  // Avoid postProcess if both flags are false\n  if (process.env.__NEXT_OPTIMIZE_FONTS || process.env.__NEXT_OPTIMIZE_IMAGES) {\n    html = await postProcess(\n      html,\n      { getFontDefinition },\n      {\n        optimizeFonts: renderOpts.optimizeFonts,\n        optimizeImages: renderOpts.optimizeImages,\n      }\n    )\n  }\n\n  if (renderOpts.optimizeCss) {\n    // eslint-disable-next-line import/no-extraneous-dependencies\n    const Critters = require('critters')\n    const cssOptimizer = new Critters({\n      ssrMode: true,\n      reduceInlineStyles: false,\n      path: renderOpts.distDir,\n      publicPath: '/_next/',\n      preload: 'media',\n      fonts: false,\n      ...renderOpts.optimizeCss,\n    })\n\n    html = await cssOptimizer.process(html)\n  }\n\n  if (inAmpMode || hybridAmp) {\n    // fix &amp being escaped for amphtml rel link\n    html = html.replace(/&amp;amp=1/g, '&amp=1')\n  }\n\n  return html\n}\n\nfunction errorToJSON(err: Error): Error {\n  const { name, message, stack } = err\n  return { name, message, stack }\n}\n\nfunction serializeError(\n  dev: boolean | undefined,\n  err: Error\n): Error & { statusCode?: number } {\n  if (dev) {\n    return errorToJSON(err)\n  }\n\n  return {\n    name: 'Internal Server Error.',\n    message: '500 - Internal Server Error.',\n    statusCode: 500,\n  }\n}\n"]},"metadata":{},"sourceType":"script"}