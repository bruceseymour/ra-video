{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.eventBuildCompleted = eventBuildCompleted;\nexports.eventBuildOptimize = eventBuildOptimize;\nconst REGEXP_DIRECTORY_DUNDER = /[\\\\/]__[^\\\\/]+(?<![\\\\/]__(?:tests|mocks))__[\\\\/]/i;\nconst REGEXP_DIRECTORY_TESTS = /[\\\\/]__(tests|mocks)__[\\\\/]/i;\nconst REGEXP_FILE_TEST = /\\.(?:spec|test)\\.[^.]+$/i;\nconst EVENT_BUILD_DURATION = 'NEXT_BUILD_COMPLETED';\n\nfunction eventBuildCompleted(pagePaths, event) {\n  return {\n    eventName: EVENT_BUILD_DURATION,\n    payload: { ...event,\n      totalPageCount: pagePaths.length,\n      hasDunderPages: pagePaths.some(path => REGEXP_DIRECTORY_DUNDER.test(path)),\n      hasTestPages: pagePaths.some(path => REGEXP_DIRECTORY_TESTS.test(path) || REGEXP_FILE_TEST.test(path))\n    }\n  };\n}\n\nconst EVENT_BUILD_OPTIMIZE = 'NEXT_BUILD_OPTIMIZED';\n\nfunction eventBuildOptimize(pagePaths, event) {\n  return {\n    eventName: EVENT_BUILD_OPTIMIZE,\n    payload: { ...event,\n      totalPageCount: pagePaths.length,\n      hasDunderPages: pagePaths.some(path => REGEXP_DIRECTORY_DUNDER.test(path)),\n      hasTestPages: pagePaths.some(path => REGEXP_DIRECTORY_TESTS.test(path) || REGEXP_FILE_TEST.test(path))\n    }\n  };\n}","map":{"version":3,"sources":["../../../telemetry/events/build.ts"],"names":["REGEXP_DIRECTORY_DUNDER","REGEXP_DIRECTORY_TESTS","REGEXP_FILE_TEST","EVENT_BUILD_DURATION","eventName","payload","totalPageCount","pagePaths","hasDunderPages","path","hasTestPages","EVENT_BUILD_OPTIMIZE"],"mappings":";;;;;AAAA,MAAMA,uBAAuB,GAA7B,mDAAA;AACA,MAAMC,sBAAsB,GAA5B,8BAAA;AACA,MAAMC,gBAAgB,GAAtB,0BAAA;AAEA,MAAMC,oBAAoB,GAA1B,sBAAA;;AAQO,SAAA,mBAAA,CAAA,SAAA,EAAA,KAAA,EAMgD;AACrD,SAAO;AACLC,IAAAA,SAAS,EADJ,oBAAA;AAELC,IAAAA,OAAO,EAAE,EACP,GADO,KAAA;AAEPC,MAAAA,cAAc,EAAEC,SAAS,CAFlB,MAAA;AAGPC,MAAAA,cAAc,EAAED,SAAS,CAATA,IAAAA,CAAgBE,IAAD,IAC7BT,uBAAuB,CAAvBA,IAAAA,CAJK,IAILA,CADcO,CAHT;AAMPG,MAAAA,YAAY,EAAEH,SAAS,CAATA,IAAAA,CACXE,IAAD,IACER,sBAAsB,CAAtBA,IAAAA,CAAAA,IAAAA,KAAqCC,gBAAgB,CAAhBA,IAAAA,CAV7C,IAU6CA,CAF3BK;AANP;AAFJ,GAAP;AAgBF;;AAAA,MAAMI,oBAAoB,GAA1B,sBAAA;;AAiBO,SAAA,kBAAA,CAAA,SAAA,EAAA,KAAA,EAMgD;AACrD,SAAO;AACLP,IAAAA,SAAS,EADJ,oBAAA;AAELC,IAAAA,OAAO,EAAE,EACP,GADO,KAAA;AAEPC,MAAAA,cAAc,EAAEC,SAAS,CAFlB,MAAA;AAGPC,MAAAA,cAAc,EAAED,SAAS,CAATA,IAAAA,CAAgBE,IAAD,IAC7BT,uBAAuB,CAAvBA,IAAAA,CAJK,IAILA,CADcO,CAHT;AAMPG,MAAAA,YAAY,EAAEH,SAAS,CAATA,IAAAA,CACXE,IAAD,IACER,sBAAsB,CAAtBA,IAAAA,CAAAA,IAAAA,KAAqCC,gBAAgB,CAAhBA,IAAAA,CAV7C,IAU6CA,CAF3BK;AANP;AAFJ,GAAP;AAcD","sourcesContent":["const REGEXP_DIRECTORY_DUNDER = /[\\\\/]__[^\\\\/]+(?<![\\\\/]__(?:tests|mocks))__[\\\\/]/i\nconst REGEXP_DIRECTORY_TESTS = /[\\\\/]__(tests|mocks)__[\\\\/]/i\nconst REGEXP_FILE_TEST = /\\.(?:spec|test)\\.[^.]+$/i\n\nconst EVENT_BUILD_DURATION = 'NEXT_BUILD_COMPLETED'\ntype EventBuildCompleted = {\n  durationInSeconds: number\n  totalPageCount: number\n  hasDunderPages: boolean\n  hasTestPages: boolean\n}\n\nexport function eventBuildCompleted(\n  pagePaths: string[],\n  event: Omit<\n    EventBuildCompleted,\n    'totalPageCount' | 'hasDunderPages' | 'hasTestPages'\n  >\n): { eventName: string; payload: EventBuildCompleted } {\n  return {\n    eventName: EVENT_BUILD_DURATION,\n    payload: {\n      ...event,\n      totalPageCount: pagePaths.length,\n      hasDunderPages: pagePaths.some((path) =>\n        REGEXP_DIRECTORY_DUNDER.test(path)\n      ),\n      hasTestPages: pagePaths.some(\n        (path) =>\n          REGEXP_DIRECTORY_TESTS.test(path) || REGEXP_FILE_TEST.test(path)\n      ),\n    },\n  }\n}\n\nconst EVENT_BUILD_OPTIMIZE = 'NEXT_BUILD_OPTIMIZED'\ntype EventBuildOptimized = {\n  durationInSeconds: number\n  totalPageCount: number\n  staticPageCount: number\n  staticPropsPageCount: number\n  serverPropsPageCount: number\n  ssrPageCount: number\n  hasDunderPages: boolean\n  hasTestPages: boolean\n  hasStatic404: boolean\n  hasReportWebVitals: boolean\n  headersCount: number\n  rewritesCount: number\n  redirectsCount: number\n}\n\nexport function eventBuildOptimize(\n  pagePaths: string[],\n  event: Omit<\n    EventBuildOptimized,\n    'totalPageCount' | 'hasDunderPages' | 'hasTestPages'\n  >\n): { eventName: string; payload: EventBuildOptimized } {\n  return {\n    eventName: EVENT_BUILD_OPTIMIZE,\n    payload: {\n      ...event,\n      totalPageCount: pagePaths.length,\n      hasDunderPages: pagePaths.some((path) =>\n        REGEXP_DIRECTORY_DUNDER.test(path)\n      ),\n      hasTestPages: pagePaths.some(\n        (path) =>\n          REGEXP_DIRECTORY_TESTS.test(path) || REGEXP_FILE_TEST.test(path)\n      ),\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"script"}