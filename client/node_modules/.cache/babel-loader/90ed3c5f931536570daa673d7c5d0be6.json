{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.writeAppTypeDeclarations = writeAppTypeDeclarations;\n\nvar _fs = require(\"fs\");\n\nvar _os = _interopRequireDefault(require(\"os\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _fileExists = require(\"../file-exists\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nasync function writeAppTypeDeclarations(baseDir) {\n  // Reference `next` types\n  const appTypeDeclarations = _path.default.join(baseDir, 'next-env.d.ts');\n\n  const hasAppTypeDeclarations = await (0, _fileExists.fileExists)(appTypeDeclarations);\n\n  if (!hasAppTypeDeclarations) {\n    await _fs.promises.writeFile(appTypeDeclarations, '/// <reference types=\"next\" />' + _os.default.EOL + '/// <reference types=\"next/types/global\" />' + _os.default.EOL);\n  }\n}","map":{"version":3,"sources":["../../../lib/typescript/writeAppTypeDeclarations.ts"],"names":["appTypeDeclarations","path","hasAppTypeDeclarations","fs","os"],"mappings":";;;;;AAAA,IAAA,GAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;AACA,IAAA,GAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;;;;;AAEO;;AAAA,eAAA,wBAAA,CAAA,OAAA,EAAwE;AAC7E;AACA,QAAMA,mBAAmB,GAAGC,KAAAA,CAAAA,OAAAA,CAAAA,IAAAA,CAAAA,OAAAA,EAA5B,eAA4BA,CAA5B;;AACA,QAAMC,sBAAsB,GAAG,MAAM,CAAA,GAAA,WAAA,CAAA,UAAA,EAArC,mBAAqC,CAArC;;AACA,MAAI,CAAJ,sBAAA,EAA6B;AAC3B,UAAMC,GAAAA,CAAAA,QAAAA,CAAAA,SAAAA,CAAAA,mBAAAA,EAEJ,mCACEC,GAAAA,CAAAA,OAAAA,CADF,GAAA,GAAA,6CAAA,GAGEA,GAAAA,CAAAA,OAAAA,CALJ,GAAMD,CAAN;AAQH;AAAA","sourcesContent":["import { promises as fs } from 'fs'\nimport os from 'os'\nimport path from 'path'\nimport { fileExists } from '../file-exists'\n\nexport async function writeAppTypeDeclarations(baseDir: string): Promise<void> {\n  // Reference `next` types\n  const appTypeDeclarations = path.join(baseDir, 'next-env.d.ts')\n  const hasAppTypeDeclarations = await fileExists(appTypeDeclarations)\n  if (!hasAppTypeDeclarations) {\n    await fs.writeFile(\n      appTypeDeclarations,\n      '/// <reference types=\"next\" />' +\n        os.EOL +\n        '/// <reference types=\"next/types/global\" />' +\n        os.EOL\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}