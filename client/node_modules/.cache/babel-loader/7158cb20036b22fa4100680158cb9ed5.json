{"ast":null,"code":"/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst {\n  createElement,\n  firstChildByTag,\n  insertAfter,\n  insertBefore,\n  remove\n} = require('../NodeUtils');\n\nconst {\n  AMP_CACHE_HOST\n} = require('../AmpConstants.js');\n\nconst {\n  findMetaViewport\n} = require('../HtmlDomHelper');\n\nconst {\n  calculateHost\n} = require('../RuntimeHostHelper');\n/**\n * RewriteAmpUrls - rewrites AMP runtime URLs.\n *\n * This transformer supports four parameters:\n *\n * * `ampRuntimeVersion`: specifies a\n *   [specific version](https://github.com/ampproject/amp-toolbox/tree/main/runtime-version)\n *   version</a> of the AMP runtime. For example: `ampRuntimeVersion:\n *   \"001515617716922\"` will result in AMP runtime URLs being re-written\n *   from `https://cdn.ampproject.org/v0.js` to\n *   `https://cdn.ampproject.org/rtv/001515617716922/v0.js`.\n *\n * * `ampUrlPrefix`: specifies an URL prefix for AMP runtime\n *   URLs. For example: `ampUrlPrefix: \"/amp\"` will result in AMP runtime\n *   URLs being re-written from `https://cdn.ampproject.org/v0.js` to\n *   `/amp/v0.js`. This option is experimental and not recommended.\n *\n * * `geoApiUrl`: specifies amp-geo API URL to use as a fallback when\n *   amp-geo-0.1.js is served unpatched, i.e. when\n *   {{AMP_ISO_COUNTRY_HOTPATCH}} is not replaced dynamically.\n *\n * * `lts`: Use long-term stable URLs. This option is not compatible with\n *   `ampRuntimeVersion` or `ampUrlPrefix`; an error will be thrown if\n *   these options are included together. Similarly, the `geoApiUrl`\n *   option is ineffective with the lts flag, but will simply be ignored\n *   rather than throwing an error.\n *\n * All parameters are optional. If no option is provided, runtime URLs won't be\n * re-written. You can combine `ampRuntimeVersion` and  `ampUrlPrefix` to\n * rewrite AMP runtime URLs to versioned URLs on a different origin.\n *\n * This transformer also adds a preload header for the AMP runtime (v0.js) to trigger HTTP/2\n * push for CDNs (see https://www.w3.org/TR/preload/#server-push-(http/2)).\n */\n\n\nclass RewriteAmpUrls {\n  constructor(config) {\n    this.esmModulesEnabled = config.experimentEsm;\n    this.log = config.log;\n  }\n\n  transform(root, params) {\n    const html = firstChildByTag(root, 'html');\n    const head = firstChildByTag(html, 'head');\n    if (!head) return;\n    const host = calculateHost(params);\n    let node = head.firstChild;\n    let referenceNode = findMetaViewport(head);\n    const esm = this.esmModulesEnabled || params.experimentEsm;\n    const preloads = [];\n\n    while (node) {\n      if (node.tagName === 'script' && this._usesAmpCacheUrl(node.attribs.src)) {\n        node.attribs.src = this._replaceUrl(node.attribs.src, host);\n\n        if (esm) {\n          preloads.push(this._addEsm(node));\n        } else {\n          preloads.push(this._createPreload(node.attribs.src, 'script'));\n        }\n      } else if (node.tagName === 'link' && node.attribs.rel === 'stylesheet' && this._usesAmpCacheUrl(node.attribs.href)) {\n        node.attribs.href = this._replaceUrl(node.attribs.href, host);\n        preloads.push(this._createPreload(node.attribs.href, 'style'));\n      } else if (node.tagName === 'link' && node.attribs.rel === 'preload' && this._usesAmpCacheUrl(node.attribs.href)) {\n        if (esm && this._shouldPreload(node.attribs.href)) {\n          // only preload mjs runtime in esm mode\n          remove(node);\n        } else {\n          node.attribs.href = this._replaceUrl(node.attribs.href, host);\n        }\n      }\n\n      node = node.nextSibling;\n    } // process preloads later to avoid accidently rewriting the URL\n\n\n    for (const preload of preloads) {\n      if (preload) {\n        insertAfter(head, preload, referenceNode);\n      }\n    } // runtime-host and amp-geo-api meta tags should appear before the first script\n\n\n    if (!this._usesAmpCacheUrl(host) && !params.lts) {\n      try {\n        const url = new URL(host);\n\n        this._addMeta(head, 'runtime-host', url.origin);\n      } catch (e) {\n        this.log.warn('ampUrlPrefix must be an absolute URL');\n      }\n    }\n\n    if (params.geoApiUrl && !params.lts) {\n      this._addMeta(head, 'amp-geo-api', params.geoApiUrl);\n    }\n  }\n\n  _usesAmpCacheUrl(url) {\n    if (!url) {\n      return;\n    }\n\n    return url.startsWith(AMP_CACHE_HOST);\n  }\n\n  _replaceUrl(url, host) {\n    return host + url.substring(AMP_CACHE_HOST.length);\n  }\n\n  _addEsm(scriptNode) {\n    let result = null;\n    const esmScriptUrl = scriptNode.attribs.src.replace(/\\.js$/, '.mjs');\n\n    if (this._shouldPreload(scriptNode.attribs.src)) {\n      const preload = createElement('link', {\n        as: 'script',\n        crossorigin: 'anonymous',\n        href: esmScriptUrl,\n        rel: 'preload'\n      });\n      result = preload;\n    }\n\n    const nomoduleNode = createElement('script', {\n      async: '',\n      nomodule: '',\n      src: scriptNode.attribs.src\n    });\n    insertBefore(scriptNode.parent, nomoduleNode, scriptNode);\n    scriptNode.attribs.type = 'module'; // Without crossorigin=anonymous browser loads the script twice because\n    // of preload.\n\n    scriptNode.attribs.crossorigin = 'anonymous';\n    scriptNode.attribs.src = esmScriptUrl;\n    return result;\n  }\n\n  _createPreload(href, type) {\n    if (!this._shouldPreload(href)) {\n      return null;\n    }\n\n    return createElement('link', {\n      rel: 'preload',\n      href: href,\n      as: type\n    });\n  }\n\n  _shouldPreload(href) {\n    return href.endsWith('v0.js') || href.endsWith('v0.css');\n  }\n\n  _addMeta(head, name, content) {\n    const meta = createElement('meta', {\n      name,\n      content\n    });\n    insertBefore(head, meta, firstChildByTag(head, 'script'));\n  }\n\n  isAbsoluteUrl_(url) {\n    try {\n      new URL(url);\n      return true;\n    } catch (ex) {\n      return false;\n    }\n  }\n\n}\n\nmodule.exports = RewriteAmpUrls;","map":{"version":3,"sources":["/Users/bruceseymour/ra-video/client/node_modules/@ampproject/toolbox-optimizer/lib/transformers/RewriteAmpUrls.js"],"names":["createElement","firstChildByTag","insertAfter","insertBefore","remove","require","AMP_CACHE_HOST","findMetaViewport","calculateHost","RewriteAmpUrls","constructor","config","esmModulesEnabled","experimentEsm","log","transform","root","params","html","head","host","node","firstChild","referenceNode","esm","preloads","tagName","_usesAmpCacheUrl","attribs","src","_replaceUrl","push","_addEsm","_createPreload","rel","href","_shouldPreload","nextSibling","preload","lts","url","URL","_addMeta","origin","e","warn","geoApiUrl","startsWith","substring","length","scriptNode","result","esmScriptUrl","replace","as","crossorigin","nomoduleNode","async","nomodule","parent","type","endsWith","name","content","meta","isAbsoluteUrl_","ex","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst {createElement, firstChildByTag, insertAfter, insertBefore, remove} = require('../NodeUtils');\nconst {AMP_CACHE_HOST} = require('../AmpConstants.js');\nconst {findMetaViewport} = require('../HtmlDomHelper');\nconst {calculateHost} = require('../RuntimeHostHelper');\n\n/**\n * RewriteAmpUrls - rewrites AMP runtime URLs.\n *\n * This transformer supports four parameters:\n *\n * * `ampRuntimeVersion`: specifies a\n *   [specific version](https://github.com/ampproject/amp-toolbox/tree/main/runtime-version)\n *   version</a> of the AMP runtime. For example: `ampRuntimeVersion:\n *   \"001515617716922\"` will result in AMP runtime URLs being re-written\n *   from `https://cdn.ampproject.org/v0.js` to\n *   `https://cdn.ampproject.org/rtv/001515617716922/v0.js`.\n *\n * * `ampUrlPrefix`: specifies an URL prefix for AMP runtime\n *   URLs. For example: `ampUrlPrefix: \"/amp\"` will result in AMP runtime\n *   URLs being re-written from `https://cdn.ampproject.org/v0.js` to\n *   `/amp/v0.js`. This option is experimental and not recommended.\n *\n * * `geoApiUrl`: specifies amp-geo API URL to use as a fallback when\n *   amp-geo-0.1.js is served unpatched, i.e. when\n *   {{AMP_ISO_COUNTRY_HOTPATCH}} is not replaced dynamically.\n *\n * * `lts`: Use long-term stable URLs. This option is not compatible with\n *   `ampRuntimeVersion` or `ampUrlPrefix`; an error will be thrown if\n *   these options are included together. Similarly, the `geoApiUrl`\n *   option is ineffective with the lts flag, but will simply be ignored\n *   rather than throwing an error.\n *\n * All parameters are optional. If no option is provided, runtime URLs won't be\n * re-written. You can combine `ampRuntimeVersion` and  `ampUrlPrefix` to\n * rewrite AMP runtime URLs to versioned URLs on a different origin.\n *\n * This transformer also adds a preload header for the AMP runtime (v0.js) to trigger HTTP/2\n * push for CDNs (see https://www.w3.org/TR/preload/#server-push-(http/2)).\n */\nclass RewriteAmpUrls {\n  constructor(config) {\n    this.esmModulesEnabled = config.experimentEsm;\n    this.log = config.log;\n  }\n  transform(root, params) {\n    const html = firstChildByTag(root, 'html');\n    const head = firstChildByTag(html, 'head');\n    if (!head) return;\n\n    const host = calculateHost(params);\n\n    let node = head.firstChild;\n    let referenceNode = findMetaViewport(head);\n    const esm = this.esmModulesEnabled || params.experimentEsm;\n    const preloads = [];\n\n    while (node) {\n      if (node.tagName === 'script' && this._usesAmpCacheUrl(node.attribs.src)) {\n        node.attribs.src = this._replaceUrl(node.attribs.src, host);\n        if (esm) {\n          preloads.push(this._addEsm(node));\n        } else {\n          preloads.push(this._createPreload(node.attribs.src, 'script'));\n        }\n      } else if (\n        node.tagName === 'link' &&\n        node.attribs.rel === 'stylesheet' &&\n        this._usesAmpCacheUrl(node.attribs.href)\n      ) {\n        node.attribs.href = this._replaceUrl(node.attribs.href, host);\n        preloads.push(this._createPreload(node.attribs.href, 'style'));\n      } else if (\n        node.tagName === 'link' &&\n        node.attribs.rel === 'preload' &&\n        this._usesAmpCacheUrl(node.attribs.href)\n      ) {\n        if (esm && this._shouldPreload(node.attribs.href)) {\n          // only preload mjs runtime in esm mode\n          remove(node);\n        } else {\n          node.attribs.href = this._replaceUrl(node.attribs.href, host);\n        }\n      }\n      node = node.nextSibling;\n    }\n\n    // process preloads later to avoid accidently rewriting the URL\n    for (const preload of preloads) {\n      if (preload) {\n        insertAfter(head, preload, referenceNode);\n      }\n    }\n\n    // runtime-host and amp-geo-api meta tags should appear before the first script\n    if (!this._usesAmpCacheUrl(host) && !params.lts) {\n      try {\n        const url = new URL(host);\n        this._addMeta(head, 'runtime-host', url.origin);\n      } catch (e) {\n        this.log.warn('ampUrlPrefix must be an absolute URL');\n      }\n    }\n    if (params.geoApiUrl && !params.lts) {\n      this._addMeta(head, 'amp-geo-api', params.geoApiUrl);\n    }\n  }\n\n  _usesAmpCacheUrl(url) {\n    if (!url) {\n      return;\n    }\n    return url.startsWith(AMP_CACHE_HOST);\n  }\n\n  _replaceUrl(url, host) {\n    return host + url.substring(AMP_CACHE_HOST.length);\n  }\n\n  _addEsm(scriptNode) {\n    let result = null;\n    const esmScriptUrl = scriptNode.attribs.src.replace(/\\.js$/, '.mjs');\n    if (this._shouldPreload(scriptNode.attribs.src)) {\n      const preload = createElement('link', {\n        as: 'script',\n        crossorigin: 'anonymous',\n        href: esmScriptUrl,\n        rel: 'preload',\n      });\n      result = preload;\n    }\n    const nomoduleNode = createElement('script', {\n      async: '',\n      nomodule: '',\n      src: scriptNode.attribs.src,\n    });\n    insertBefore(scriptNode.parent, nomoduleNode, scriptNode);\n\n    scriptNode.attribs.type = 'module';\n    // Without crossorigin=anonymous browser loads the script twice because\n    // of preload.\n    scriptNode.attribs.crossorigin = 'anonymous';\n    scriptNode.attribs.src = esmScriptUrl;\n    return result;\n  }\n\n  _createPreload(href, type) {\n    if (!this._shouldPreload(href)) {\n      return null;\n    }\n    return createElement('link', {\n      rel: 'preload',\n      href: href,\n      as: type,\n    });\n  }\n\n  _shouldPreload(href) {\n    return href.endsWith('v0.js') || href.endsWith('v0.css');\n  }\n\n  _addMeta(head, name, content) {\n    const meta = createElement('meta', {name, content});\n    insertBefore(head, meta, firstChildByTag(head, 'script'));\n  }\n\n  isAbsoluteUrl_(url) {\n    try {\n      new URL(url);\n      return true;\n    } catch (ex) {\n      return false;\n    }\n  }\n}\n\nmodule.exports = RewriteAmpUrls;\n"]},"metadata":{},"sourceType":"script"}