{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.setRevalidateHeaders = setRevalidateHeaders;\nexports.sendPayload = sendPayload;\nexports.sendEtagResponse = sendEtagResponse;\n\nvar _utils = require(\"../lib/utils\");\n\nvar _etag = _interopRequireDefault(require(\"etag\"));\n\nvar _fresh = _interopRequireDefault(require(\"next/dist/compiled/fresh\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction setRevalidateHeaders(res, options) {\n  if (options.private || options.stateful) {\n    if (options.private || !res.hasHeader('Cache-Control')) {\n      res.setHeader('Cache-Control', `private, no-cache, no-store, max-age=0, must-revalidate`);\n    }\n  } else if (typeof options.revalidate === 'number') {\n    if (options.revalidate < 1) {\n      throw new Error(`invariant: invalid Cache-Control duration provided: ${options.revalidate} < 1`);\n    }\n\n    res.setHeader('Cache-Control', `s-maxage=${options.revalidate}, stale-while-revalidate`);\n  } else if (options.revalidate === false) {\n    res.setHeader('Cache-Control', `s-maxage=31536000, stale-while-revalidate`);\n  }\n}\n\nfunction sendPayload(req, res, payload, type, {\n  generateEtags,\n  poweredByHeader\n}, options) {\n  if ((0, _utils.isResSent)(res)) {\n    return;\n  }\n\n  if (poweredByHeader && type === 'html') {\n    res.setHeader('X-Powered-By', 'Next.js');\n  }\n\n  const etag = generateEtags ? (0, _etag.default)(payload) : undefined;\n\n  if (sendEtagResponse(req, res, etag)) {\n    return;\n  }\n\n  if (!res.getHeader('Content-Type')) {\n    res.setHeader('Content-Type', type === 'json' ? 'application/json' : 'text/html; charset=utf-8');\n  }\n\n  res.setHeader('Content-Length', Buffer.byteLength(payload));\n\n  if (options != null) {\n    setRevalidateHeaders(res, options);\n  }\n\n  res.end(req.method === 'HEAD' ? null : payload);\n}\n\nfunction sendEtagResponse(req, res, etag) {\n  if (etag) {\n    /**\n    * The server generating a 304 response MUST generate any of the\n    * following header fields that would have been sent in a 200 (OK)\n    * response to the same request: Cache-Control, Content-Location, Date,\n    * ETag, Expires, and Vary. https://tools.ietf.org/html/rfc7232#section-4.1\n    */\n    res.setHeader('ETag', etag);\n  }\n\n  if ((0, _fresh.default)(req.headers, {\n    etag\n  })) {\n    res.statusCode = 304;\n    res.end();\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["../../../next-server/server/send-payload.ts"],"names":["options","res","revalidate","poweredByHeader","type","etag","generateEtags","sendEtagResponse","Buffer","setRevalidateHeaders","req"],"mappings":"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","sourcesContent":["import { IncomingMessage, ServerResponse } from 'http'\nimport { isResSent } from '../lib/utils'\nimport generateETag from 'etag'\nimport fresh from 'next/dist/compiled/fresh'\n\ntype PayloadOptions =\n  | { private: true }\n  | { private: boolean; stateful: true }\n  | { private: boolean; stateful: false; revalidate: number | false }\n\nexport function setRevalidateHeaders(\n  res: ServerResponse,\n  options: PayloadOptions\n) {\n  if (options.private || options.stateful) {\n    if (options.private || !res.hasHeader('Cache-Control')) {\n      res.setHeader(\n        'Cache-Control',\n        `private, no-cache, no-store, max-age=0, must-revalidate`\n      )\n    }\n  } else if (typeof options.revalidate === 'number') {\n    if (options.revalidate < 1) {\n      throw new Error(\n        `invariant: invalid Cache-Control duration provided: ${options.revalidate} < 1`\n      )\n    }\n\n    res.setHeader(\n      'Cache-Control',\n      `s-maxage=${options.revalidate}, stale-while-revalidate`\n    )\n  } else if (options.revalidate === false) {\n    res.setHeader('Cache-Control', `s-maxage=31536000, stale-while-revalidate`)\n  }\n}\n\nexport function sendPayload(\n  req: IncomingMessage,\n  res: ServerResponse,\n  payload: any,\n  type: 'html' | 'json',\n  {\n    generateEtags,\n    poweredByHeader,\n  }: { generateEtags: boolean; poweredByHeader: boolean },\n  options?: PayloadOptions\n): void {\n  if (isResSent(res)) {\n    return\n  }\n\n  if (poweredByHeader && type === 'html') {\n    res.setHeader('X-Powered-By', 'Next.js')\n  }\n\n  const etag = generateEtags ? generateETag(payload) : undefined\n  if (sendEtagResponse(req, res, etag)) {\n    return\n  }\n\n  if (!res.getHeader('Content-Type')) {\n    res.setHeader(\n      'Content-Type',\n      type === 'json' ? 'application/json' : 'text/html; charset=utf-8'\n    )\n  }\n  res.setHeader('Content-Length', Buffer.byteLength(payload))\n  if (options != null) {\n    setRevalidateHeaders(res, options)\n  }\n  res.end(req.method === 'HEAD' ? null : payload)\n}\n\nexport function sendEtagResponse(\n  req: IncomingMessage,\n  res: ServerResponse,\n  etag: string | undefined\n): boolean {\n  if (etag) {\n    /**\n     * The server generating a 304 response MUST generate any of the\n     * following header fields that would have been sent in a 200 (OK)\n     * response to the same request: Cache-Control, Content-Location, Date,\n     * ETag, Expires, and Vary. https://tools.ietf.org/html/rfc7232#section-4.1\n     */\n    res.setHeader('ETag', etag)\n  }\n\n  if (fresh(req.headers, { etag })) {\n    res.statusCode = 304\n    res.end()\n    return true\n  }\n\n  return false\n}\n"]},"metadata":{},"sourceType":"script"}