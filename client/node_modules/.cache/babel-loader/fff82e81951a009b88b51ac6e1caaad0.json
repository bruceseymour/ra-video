{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.eventCliSession = eventCliSession;\n\nvar _findUp = _interopRequireDefault(require(\"next/dist/compiled/find-up\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _constants = require(\"../../next-server/lib/constants\");\n\nvar _config = require(\"../../next-server/server/config\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst EVENT_VERSION = 'NEXT_CLI_SESSION_STARTED';\n\nfunction hasBabelConfig(dir) {\n  try {\n    var _res$options, _res$options$presets, _res$options2, _res$options2$plugins;\n\n    const noopFile = _path.default.join(dir, 'noop.js');\n\n    const res = require('next/dist/compiled/babel/core').loadPartialConfig({\n      cwd: dir,\n      filename: noopFile,\n      sourceFileName: noopFile\n    });\n\n    const isForTooling = ((_res$options = res.options) == null ? void 0 : (_res$options$presets = _res$options.presets) == null ? void 0 : _res$options$presets.every(e => {\n      var _e$file;\n\n      return (e == null ? void 0 : (_e$file = e.file) == null ? void 0 : _e$file.request) === 'next/babel';\n    })) && ((_res$options2 = res.options) == null ? void 0 : (_res$options2$plugins = _res$options2.plugins) == null ? void 0 : _res$options2$plugins.length) === 0;\n    return res.hasFilesystemConfig() && !isForTooling;\n  } catch (_unused) {\n    return false;\n  }\n}\n\nfunction getNextConfig(phase, dir) {\n  try {\n    const configurationPath = _findUp.default.sync(_constants.CONFIG_FILE, {\n      cwd: dir\n    });\n\n    if (configurationPath) {\n      // This should've already been loaded, and thus should be cached / won't\n      // be re-evaluated.\n      const configurationModule = require(configurationPath); // Re-normalize the configuration.\n\n\n      return (0, _config.normalizeConfig)(phase, configurationModule.default || configurationModule);\n    }\n  } catch (_unused2) {// ignored\n  }\n\n  return null;\n}\n\nfunction eventCliSession(phase, dir, event) {\n  var _userConfiguration$ta; // This should be an invariant, if it fails our build tooling is broken.\n\n\n  if (typeof \"10.0.5\" !== 'string') {\n    return [];\n  }\n\n  const userConfiguration = getNextConfig(phase, dir);\n  const {\n    images,\n    i18n\n  } = userConfiguration || {};\n  const payload = {\n    nextVersion: \"10.0.5\",\n    nodeVersion: process.version,\n    cliCommand: event.cliCommand,\n    isSrcDir: event.isSrcDir,\n    hasNowJson: event.hasNowJson,\n    isCustomServer: event.isCustomServer,\n    hasNextConfig: !!userConfiguration,\n    buildTarget: (_userConfiguration$ta = userConfiguration == null ? void 0 : userConfiguration.target) != null ? _userConfiguration$ta : 'default',\n    hasWebpackConfig: typeof (userConfiguration == null ? void 0 : userConfiguration.webpack) === 'function',\n    hasBabelConfig: hasBabelConfig(dir),\n    imageEnabled: !!images,\n    basePathEnabled: !!(userConfiguration != null && userConfiguration.basePath),\n    i18nEnabled: !!i18n,\n    locales: i18n != null && i18n.locales ? i18n.locales.join(',') : null,\n    localeDomainsCount: i18n != null && i18n.domains ? i18n.domains.length : null,\n    localeDetectionEnabled: !i18n ? null : i18n.localeDetection !== false,\n    imageDomainsCount: images != null && images.domains ? images.domains.length : null,\n    imageSizes: images != null && images.sizes ? images.sizes.join(',') : null,\n    imageLoader: images == null ? void 0 : images.loader,\n    trailingSlashEnabled: !!(userConfiguration != null && userConfiguration.trailingSlash),\n    reactStrictMode: !!(userConfiguration != null && userConfiguration.reactStrictMode)\n  };\n  return [{\n    eventName: EVENT_VERSION,\n    payload\n  }];\n}","map":{"version":3,"sources":["../../../telemetry/events/version.ts"],"names":["EVENT_VERSION","noopFile","path","res","require","cwd","filename","sourceFileName","isForTooling","e","configurationPath","findUp","CONFIG_FILE","configurationModule","process","__NEXT_VERSION","userConfiguration","getNextConfig","payload","nextVersion","env","nodeVersion","cliCommand","isSrcDir","hasNowJson","event","isCustomServer","hasNextConfig","hasWebpackConfig","webpack","hasBabelConfig","imageEnabled","basePathEnabled","basePath","i18nEnabled","locales","i18n","join","localeDomainsCount","domains","length","localeDetectionEnabled","localeDetection","imageDomainsCount","images","imageSizes","sizes","imageLoader","trailingSlashEnabled","reactStrictMode"],"mappings":"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","sourcesContent":["import findUp from 'next/dist/compiled/find-up'\nimport path from 'path'\nimport {\n  CONFIG_FILE,\n  PHASE_DEVELOPMENT_SERVER,\n  PHASE_EXPORT,\n  PHASE_PRODUCTION_BUILD,\n} from '../../next-server/lib/constants'\nimport { normalizeConfig } from '../../next-server/server/config'\n\nconst EVENT_VERSION = 'NEXT_CLI_SESSION_STARTED'\n\ntype EventCliSessionStarted = {\n  nextVersion: string\n  nodeVersion: string\n  cliCommand: string\n  isSrcDir: boolean | null\n  hasNowJson: boolean\n  isCustomServer: boolean | null\n  hasNextConfig: boolean\n  buildTarget: string\n  hasWebpackConfig: boolean\n  hasBabelConfig: boolean\n  basePathEnabled: boolean\n  i18nEnabled: boolean\n  imageEnabled: boolean\n  locales: string | null\n  localeDomainsCount: number | null\n  localeDetectionEnabled: boolean | null\n  imageDomainsCount: number | null\n  imageSizes: string | null\n  imageLoader: string | null\n  trailingSlashEnabled: boolean\n  reactStrictMode: boolean\n}\n\nfunction hasBabelConfig(dir: string): boolean {\n  try {\n    const noopFile = path.join(dir, 'noop.js')\n    const res = require('next/dist/compiled/babel/core').loadPartialConfig({\n      cwd: dir,\n      filename: noopFile,\n      sourceFileName: noopFile,\n    }) as any\n    const isForTooling =\n      res.options?.presets?.every(\n        (e: any) => e?.file?.request === 'next/babel'\n      ) && res.options?.plugins?.length === 0\n    return res.hasFilesystemConfig() && !isForTooling\n  } catch {\n    return false\n  }\n}\n\ntype NextConfigurationPhase =\n  | typeof PHASE_DEVELOPMENT_SERVER\n  | typeof PHASE_PRODUCTION_BUILD\n  | typeof PHASE_EXPORT\n\nfunction getNextConfig(\n  phase: NextConfigurationPhase,\n  dir: string\n): { [key: string]: any } | null {\n  try {\n    const configurationPath = findUp.sync(CONFIG_FILE, {\n      cwd: dir,\n    })\n\n    if (configurationPath) {\n      // This should've already been loaded, and thus should be cached / won't\n      // be re-evaluated.\n      const configurationModule = require(configurationPath)\n\n      // Re-normalize the configuration.\n      return normalizeConfig(\n        phase,\n        configurationModule.default || configurationModule\n      )\n    }\n  } catch {\n    // ignored\n  }\n  return null\n}\n\nexport function eventCliSession(\n  phase: NextConfigurationPhase,\n  dir: string,\n  event: Omit<\n    EventCliSessionStarted,\n    | 'nextVersion'\n    | 'nodeVersion'\n    | 'hasNextConfig'\n    | 'buildTarget'\n    | 'hasWebpackConfig'\n    | 'hasBabelConfig'\n    | 'basePathEnabled'\n    | 'i18nEnabled'\n    | 'imageEnabled'\n    | 'locales'\n    | 'localeDomainsCount'\n    | 'localeDetectionEnabled'\n    | 'imageDomainsCount'\n    | 'imageSizes'\n    | 'imageLoader'\n    | 'trailingSlashEnabled'\n    | 'reactStrictMode'\n  >\n): { eventName: string; payload: EventCliSessionStarted }[] {\n  // This should be an invariant, if it fails our build tooling is broken.\n  if (typeof process.env.__NEXT_VERSION !== 'string') {\n    return []\n  }\n\n  const userConfiguration = getNextConfig(phase, dir)\n\n  const { images, i18n } = userConfiguration || {}\n\n  const payload: EventCliSessionStarted = {\n    nextVersion: process.env.__NEXT_VERSION,\n    nodeVersion: process.version,\n    cliCommand: event.cliCommand,\n    isSrcDir: event.isSrcDir,\n    hasNowJson: event.hasNowJson,\n    isCustomServer: event.isCustomServer,\n    hasNextConfig: !!userConfiguration,\n    buildTarget: userConfiguration?.target ?? 'default',\n    hasWebpackConfig: typeof userConfiguration?.webpack === 'function',\n    hasBabelConfig: hasBabelConfig(dir),\n    imageEnabled: !!images,\n    basePathEnabled: !!userConfiguration?.basePath,\n    i18nEnabled: !!i18n,\n    locales: i18n?.locales ? i18n.locales.join(',') : null,\n    localeDomainsCount: i18n?.domains ? i18n.domains.length : null,\n    localeDetectionEnabled: !i18n ? null : i18n.localeDetection !== false,\n    imageDomainsCount: images?.domains ? images.domains.length : null,\n    imageSizes: images?.sizes ? images.sizes.join(',') : null,\n    imageLoader: images?.loader,\n    trailingSlashEnabled: !!userConfiguration?.trailingSlash,\n    reactStrictMode: !!userConfiguration?.reactStrictMode,\n  }\n  return [{ eventName: EVENT_VERSION, payload }]\n}\n"]},"metadata":{},"sourceType":"script"}