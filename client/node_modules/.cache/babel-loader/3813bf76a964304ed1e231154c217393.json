{"ast":null,"code":"/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\"use strict\";\n/* global global, self */\n\nimport { defaults, push_uniq } from \"./utils/index.js\";\nimport { base54 } from \"./scope.js\";\nimport { AST_Binary, AST_Call, AST_Conditional, AST_Dot, AST_ObjectKeyVal, AST_ObjectProperty, AST_Sequence, AST_String, AST_Sub, TreeTransformer, TreeWalker } from \"./ast.js\";\nimport { domprops } from \"../tools/domprops.js\";\n\nfunction find_builtins(reserved) {\n  domprops.forEach(add); // Compatibility fix for some standard defined globals not defined on every js environment\n\n  var new_globals = [\"Symbol\", \"Map\", \"Promise\", \"Proxy\", \"Reflect\", \"Set\", \"WeakMap\", \"WeakSet\"];\n  var objects = {};\n  var global_ref = typeof global === \"object\" ? global : self;\n  new_globals.forEach(function (new_global) {\n    objects[new_global] = global_ref[new_global] || new Function();\n  });\n  [\"null\", \"true\", \"false\", \"NaN\", \"Infinity\", \"-Infinity\", \"undefined\"].forEach(add);\n  [Object, Array, Function, Number, String, Boolean, Error, Math, Date, RegExp, objects.Symbol, ArrayBuffer, DataView, decodeURI, decodeURIComponent, encodeURI, encodeURIComponent, eval, EvalError, Float32Array, Float64Array, Int8Array, Int16Array, Int32Array, isFinite, isNaN, JSON, objects.Map, parseFloat, parseInt, objects.Promise, objects.Proxy, RangeError, ReferenceError, objects.Reflect, objects.Set, SyntaxError, TypeError, Uint8Array, Uint8ClampedArray, Uint16Array, Uint32Array, URIError, objects.WeakMap, objects.WeakSet].forEach(function (ctor) {\n    Object.getOwnPropertyNames(ctor).map(add);\n\n    if (ctor.prototype) {\n      Object.getOwnPropertyNames(ctor.prototype).map(add);\n    }\n  });\n\n  function add(name) {\n    reserved.add(name);\n  }\n}\n\nfunction reserve_quoted_keys(ast, reserved) {\n  function add(name) {\n    push_uniq(reserved, name);\n  }\n\n  ast.walk(new TreeWalker(function (node) {\n    if (node instanceof AST_ObjectKeyVal && node.quote) {\n      add(node.key);\n    } else if (node instanceof AST_ObjectProperty && node.quote) {\n      add(node.key.name);\n    } else if (node instanceof AST_Sub) {\n      addStrings(node.property, add);\n    }\n  }));\n}\n\nfunction addStrings(node, add) {\n  node.walk(new TreeWalker(function (node) {\n    if (node instanceof AST_Sequence) {\n      addStrings(node.tail_node(), add);\n    } else if (node instanceof AST_String) {\n      add(node.value);\n    } else if (node instanceof AST_Conditional) {\n      addStrings(node.consequent, add);\n      addStrings(node.alternative, add);\n    }\n\n    return true;\n  }));\n}\n\nfunction mangle_properties(ast, options) {\n  options = defaults(options, {\n    builtins: false,\n    cache: null,\n    debug: false,\n    keep_quoted: false,\n    only_cache: false,\n    regex: null,\n    reserved: null,\n    undeclared: false\n  }, true);\n  var reserved_option = options.reserved;\n  if (!Array.isArray(reserved_option)) reserved_option = [reserved_option];\n  var reserved = new Set(reserved_option);\n  if (!options.builtins) find_builtins(reserved);\n  var cname = -1;\n  var cache;\n\n  if (options.cache) {\n    cache = options.cache.props;\n    cache.forEach(function (mangled_name) {\n      reserved.add(mangled_name);\n    });\n  } else {\n    cache = new Map();\n  }\n\n  var regex = options.regex && new RegExp(options.regex); // note debug is either false (disabled), or a string of the debug suffix to use (enabled).\n  // note debug may be enabled as an empty string, which is falsey. Also treat passing 'true'\n  // the same as passing an empty string.\n\n  var debug = options.debug !== false;\n  var debug_name_suffix;\n\n  if (debug) {\n    debug_name_suffix = options.debug === true ? \"\" : options.debug;\n  }\n\n  var names_to_mangle = new Set();\n  var unmangleable = new Set();\n  var keep_quoted_strict = options.keep_quoted === \"strict\"; // step 1: find candidates to mangle\n\n  ast.walk(new TreeWalker(function (node) {\n    if (node instanceof AST_ObjectKeyVal) {\n      if (typeof node.key == \"string\" && (!keep_quoted_strict || !node.quote)) {\n        add(node.key);\n      }\n    } else if (node instanceof AST_ObjectProperty) {\n      // setter or getter, since KeyVal is handled above\n      if (!keep_quoted_strict || !node.key.end.quote) {\n        add(node.key.name);\n      }\n    } else if (node instanceof AST_Dot) {\n      var declared = !!options.undeclared;\n\n      if (!declared) {\n        var root = node;\n\n        while (root.expression) {\n          root = root.expression;\n        }\n\n        declared = !(root.thedef && root.thedef.undeclared);\n      }\n\n      if (declared && (!keep_quoted_strict || !node.quote)) {\n        add(node.property);\n      }\n    } else if (node instanceof AST_Sub) {\n      if (!keep_quoted_strict) {\n        addStrings(node.property, add);\n      }\n    } else if (node instanceof AST_Call && node.expression.print_to_string() == \"Object.defineProperty\") {\n      addStrings(node.args[1], add);\n    } else if (node instanceof AST_Binary && node.operator === \"in\") {\n      addStrings(node.left, add);\n    }\n  })); // step 2: transform the tree, renaming properties\n\n  return ast.transform(new TreeTransformer(function (node) {\n    if (node instanceof AST_ObjectKeyVal) {\n      if (typeof node.key == \"string\" && (!keep_quoted_strict || !node.quote)) {\n        node.key = mangle(node.key);\n      }\n    } else if (node instanceof AST_ObjectProperty) {\n      // setter, getter, method or class field\n      if (!keep_quoted_strict || !node.key.end.quote) {\n        node.key.name = mangle(node.key.name);\n      }\n    } else if (node instanceof AST_Dot) {\n      if (!keep_quoted_strict || !node.quote) {\n        node.property = mangle(node.property);\n      }\n    } else if (!options.keep_quoted && node instanceof AST_Sub) {\n      node.property = mangleStrings(node.property);\n    } else if (node instanceof AST_Call && node.expression.print_to_string() == \"Object.defineProperty\") {\n      node.args[1] = mangleStrings(node.args[1]);\n    } else if (node instanceof AST_Binary && node.operator === \"in\") {\n      node.left = mangleStrings(node.left);\n    }\n  })); // only function declarations after this line\n\n  function can_mangle(name) {\n    if (unmangleable.has(name)) return false;\n    if (reserved.has(name)) return false;\n\n    if (options.only_cache) {\n      return cache.has(name);\n    }\n\n    if (/^-?[0-9]+(\\.[0-9]+)?(e[+-][0-9]+)?$/.test(name)) return false;\n    return true;\n  }\n\n  function should_mangle(name) {\n    if (regex && !regex.test(name)) return false;\n    if (reserved.has(name)) return false;\n    return cache.has(name) || names_to_mangle.has(name);\n  }\n\n  function add(name) {\n    if (can_mangle(name)) names_to_mangle.add(name);\n\n    if (!should_mangle(name)) {\n      unmangleable.add(name);\n    }\n  }\n\n  function mangle(name) {\n    if (!should_mangle(name)) {\n      return name;\n    }\n\n    var mangled = cache.get(name);\n\n    if (!mangled) {\n      if (debug) {\n        // debug mode: use a prefix and suffix to preserve readability, e.g. o.foo -> o._$foo$NNN_.\n        var debug_mangled = \"_$\" + name + \"$\" + debug_name_suffix + \"_\";\n\n        if (can_mangle(debug_mangled)) {\n          mangled = debug_mangled;\n        }\n      } // either debug mode is off, or it is on and we could not use the mangled name\n\n\n      if (!mangled) {\n        do {\n          mangled = base54(++cname);\n        } while (!can_mangle(mangled));\n      }\n\n      cache.set(name, mangled);\n    }\n\n    return mangled;\n  }\n\n  function mangleStrings(node) {\n    return node.transform(new TreeTransformer(function (node) {\n      if (node instanceof AST_Sequence) {\n        var last = node.expressions.length - 1;\n        node.expressions[last] = mangleStrings(node.expressions[last]);\n      } else if (node instanceof AST_String) {\n        node.value = mangle(node.value);\n      } else if (node instanceof AST_Conditional) {\n        node.consequent = mangleStrings(node.consequent);\n        node.alternative = mangleStrings(node.alternative);\n      }\n\n      return node;\n    }));\n  }\n}\n\nexport { reserve_quoted_keys, mangle_properties };","map":{"version":3,"sources":["/Users/bruceseymour/ra-video/client/node_modules/@ampproject/toolbox-optimizer/node_modules/terser/lib/propmangle.js"],"names":["defaults","push_uniq","base54","AST_Binary","AST_Call","AST_Conditional","AST_Dot","AST_ObjectKeyVal","AST_ObjectProperty","AST_Sequence","AST_String","AST_Sub","TreeTransformer","TreeWalker","domprops","find_builtins","reserved","forEach","add","new_globals","objects","global_ref","global","self","new_global","Function","Object","Array","Number","String","Boolean","Error","Math","Date","RegExp","Symbol","ArrayBuffer","DataView","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","eval","EvalError","Float32Array","Float64Array","Int8Array","Int16Array","Int32Array","isFinite","isNaN","JSON","Map","parseFloat","parseInt","Promise","Proxy","RangeError","ReferenceError","Reflect","Set","SyntaxError","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","URIError","WeakMap","WeakSet","ctor","getOwnPropertyNames","map","prototype","name","reserve_quoted_keys","ast","walk","node","quote","key","addStrings","property","tail_node","value","consequent","alternative","mangle_properties","options","builtins","cache","debug","keep_quoted","only_cache","regex","undeclared","reserved_option","isArray","cname","props","mangled_name","debug_name_suffix","names_to_mangle","unmangleable","keep_quoted_strict","end","declared","root","expression","thedef","print_to_string","args","operator","left","transform","mangle","mangleStrings","can_mangle","has","test","should_mangle","mangled","get","debug_mangled","set","last","expressions","length"],"mappings":"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","sourcesContent":["/***********************************************************************\n\n  A JavaScript tokenizer / parser / beautifier / compressor.\n  https://github.com/mishoo/UglifyJS2\n\n  -------------------------------- (C) ---------------------------------\n\n                           Author: Mihai Bazon\n                         <mihai.bazon@gmail.com>\n                       http://mihai.bazon.net/blog\n\n  Distributed under the BSD license:\n\n    Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>\n\n    Redistribution and use in source and binary forms, with or without\n    modification, are permitted provided that the following conditions\n    are met:\n\n        * Redistributions of source code must retain the above\n          copyright notice, this list of conditions and the following\n          disclaimer.\n\n        * Redistributions in binary form must reproduce the above\n          copyright notice, this list of conditions and the following\n          disclaimer in the documentation and/or other materials\n          provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY\n    EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE\n    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\n    OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n    THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n    TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n    THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n    SUCH DAMAGE.\n\n ***********************************************************************/\n\n\"use strict\";\n/* global global, self */\n\nimport {\n    defaults,\n    push_uniq,\n} from \"./utils/index.js\";\nimport { base54 } from \"./scope.js\";\nimport {\n    AST_Binary,\n    AST_Call,\n    AST_Conditional,\n    AST_Dot,\n    AST_ObjectKeyVal,\n    AST_ObjectProperty,\n    AST_Sequence,\n    AST_String,\n    AST_Sub,\n    TreeTransformer,\n    TreeWalker,\n} from \"./ast.js\";\nimport { domprops } from \"../tools/domprops.js\";\n\nfunction find_builtins(reserved) {\n    domprops.forEach(add);\n\n    // Compatibility fix for some standard defined globals not defined on every js environment\n    var new_globals = [\"Symbol\", \"Map\", \"Promise\", \"Proxy\", \"Reflect\", \"Set\", \"WeakMap\", \"WeakSet\"];\n    var objects = {};\n    var global_ref = typeof global === \"object\" ? global : self;\n\n    new_globals.forEach(function (new_global) {\n        objects[new_global] = global_ref[new_global] || new Function();\n    });\n\n    [\n        \"null\",\n        \"true\",\n        \"false\",\n        \"NaN\",\n        \"Infinity\",\n        \"-Infinity\",\n        \"undefined\",\n    ].forEach(add);\n    [ Object, Array, Function, Number,\n      String, Boolean, Error, Math,\n      Date, RegExp, objects.Symbol, ArrayBuffer,\n      DataView, decodeURI, decodeURIComponent,\n      encodeURI, encodeURIComponent, eval, EvalError,\n      Float32Array, Float64Array, Int8Array, Int16Array,\n      Int32Array, isFinite, isNaN, JSON, objects.Map, parseFloat,\n      parseInt, objects.Promise, objects.Proxy, RangeError, ReferenceError,\n      objects.Reflect, objects.Set, SyntaxError, TypeError, Uint8Array,\n      Uint8ClampedArray, Uint16Array, Uint32Array, URIError,\n      objects.WeakMap, objects.WeakSet\n    ].forEach(function(ctor) {\n        Object.getOwnPropertyNames(ctor).map(add);\n        if (ctor.prototype) {\n            Object.getOwnPropertyNames(ctor.prototype).map(add);\n        }\n    });\n    function add(name) {\n        reserved.add(name);\n    }\n}\n\nfunction reserve_quoted_keys(ast, reserved) {\n    function add(name) {\n        push_uniq(reserved, name);\n    }\n\n    ast.walk(new TreeWalker(function(node) {\n        if (node instanceof AST_ObjectKeyVal && node.quote) {\n            add(node.key);\n        } else if (node instanceof AST_ObjectProperty && node.quote) {\n            add(node.key.name);\n        } else if (node instanceof AST_Sub) {\n            addStrings(node.property, add);\n        }\n    }));\n}\n\nfunction addStrings(node, add) {\n    node.walk(new TreeWalker(function(node) {\n        if (node instanceof AST_Sequence) {\n            addStrings(node.tail_node(), add);\n        } else if (node instanceof AST_String) {\n            add(node.value);\n        } else if (node instanceof AST_Conditional) {\n            addStrings(node.consequent, add);\n            addStrings(node.alternative, add);\n        }\n        return true;\n    }));\n}\n\nfunction mangle_properties(ast, options) {\n    options = defaults(options, {\n        builtins: false,\n        cache: null,\n        debug: false,\n        keep_quoted: false,\n        only_cache: false,\n        regex: null,\n        reserved: null,\n        undeclared: false,\n    }, true);\n\n    var reserved_option = options.reserved;\n    if (!Array.isArray(reserved_option)) reserved_option = [reserved_option];\n    var reserved = new Set(reserved_option);\n    if (!options.builtins) find_builtins(reserved);\n\n    var cname = -1;\n    var cache;\n    if (options.cache) {\n        cache = options.cache.props;\n        cache.forEach(function(mangled_name) {\n            reserved.add(mangled_name);\n        });\n    } else {\n        cache = new Map();\n    }\n\n    var regex = options.regex && new RegExp(options.regex);\n\n    // note debug is either false (disabled), or a string of the debug suffix to use (enabled).\n    // note debug may be enabled as an empty string, which is falsey. Also treat passing 'true'\n    // the same as passing an empty string.\n    var debug = options.debug !== false;\n    var debug_name_suffix;\n    if (debug) {\n        debug_name_suffix = (options.debug === true ? \"\" : options.debug);\n    }\n\n    var names_to_mangle = new Set();\n    var unmangleable = new Set();\n\n    var keep_quoted_strict = options.keep_quoted === \"strict\";\n\n    // step 1: find candidates to mangle\n    ast.walk(new TreeWalker(function(node) {\n        if (node instanceof AST_ObjectKeyVal) {\n            if (typeof node.key == \"string\" &&\n                (!keep_quoted_strict || !node.quote)) {\n                add(node.key);\n            }\n        } else if (node instanceof AST_ObjectProperty) {\n            // setter or getter, since KeyVal is handled above\n            if (!keep_quoted_strict || !node.key.end.quote) {\n                add(node.key.name);\n            }\n        } else if (node instanceof AST_Dot) {\n            var declared = !!options.undeclared;\n            if (!declared) {\n                var root = node;\n                while (root.expression) {\n                    root = root.expression;\n                }\n                declared = !(root.thedef && root.thedef.undeclared);\n            }\n            if (declared &&\n                (!keep_quoted_strict || !node.quote)) {\n                add(node.property);\n            }\n        } else if (node instanceof AST_Sub) {\n            if (!keep_quoted_strict) {\n                addStrings(node.property, add);\n            }\n        } else if (node instanceof AST_Call\n            && node.expression.print_to_string() == \"Object.defineProperty\") {\n            addStrings(node.args[1], add);\n        } else if (node instanceof AST_Binary && node.operator === \"in\") {\n            addStrings(node.left, add);\n        }\n    }));\n\n    // step 2: transform the tree, renaming properties\n    return ast.transform(new TreeTransformer(function(node) {\n        if (node instanceof AST_ObjectKeyVal) {\n            if (typeof node.key == \"string\" &&\n                (!keep_quoted_strict || !node.quote)) {\n                node.key = mangle(node.key);\n            }\n        } else if (node instanceof AST_ObjectProperty) {\n            // setter, getter, method or class field\n            if (!keep_quoted_strict || !node.key.end.quote) {\n                node.key.name = mangle(node.key.name);\n            }\n        } else if (node instanceof AST_Dot) {\n            if (!keep_quoted_strict || !node.quote) {\n                node.property = mangle(node.property);\n            }\n        } else if (!options.keep_quoted && node instanceof AST_Sub) {\n            node.property = mangleStrings(node.property);\n        } else if (node instanceof AST_Call\n            && node.expression.print_to_string() == \"Object.defineProperty\") {\n            node.args[1] = mangleStrings(node.args[1]);\n        } else if (node instanceof AST_Binary && node.operator === \"in\") {\n            node.left = mangleStrings(node.left);\n        }\n    }));\n\n    // only function declarations after this line\n\n    function can_mangle(name) {\n        if (unmangleable.has(name)) return false;\n        if (reserved.has(name)) return false;\n        if (options.only_cache) {\n            return cache.has(name);\n        }\n        if (/^-?[0-9]+(\\.[0-9]+)?(e[+-][0-9]+)?$/.test(name)) return false;\n        return true;\n    }\n\n    function should_mangle(name) {\n        if (regex && !regex.test(name)) return false;\n        if (reserved.has(name)) return false;\n        return cache.has(name)\n            || names_to_mangle.has(name);\n    }\n\n    function add(name) {\n        if (can_mangle(name))\n            names_to_mangle.add(name);\n\n        if (!should_mangle(name)) {\n            unmangleable.add(name);\n        }\n    }\n\n    function mangle(name) {\n        if (!should_mangle(name)) {\n            return name;\n        }\n\n        var mangled = cache.get(name);\n        if (!mangled) {\n            if (debug) {\n                // debug mode: use a prefix and suffix to preserve readability, e.g. o.foo -> o._$foo$NNN_.\n                var debug_mangled = \"_$\" + name + \"$\" + debug_name_suffix + \"_\";\n\n                if (can_mangle(debug_mangled)) {\n                    mangled = debug_mangled;\n                }\n            }\n\n            // either debug mode is off, or it is on and we could not use the mangled name\n            if (!mangled) {\n                do {\n                    mangled = base54(++cname);\n                } while (!can_mangle(mangled));\n            }\n\n            cache.set(name, mangled);\n        }\n        return mangled;\n    }\n\n    function mangleStrings(node) {\n        return node.transform(new TreeTransformer(function(node) {\n            if (node instanceof AST_Sequence) {\n                var last = node.expressions.length - 1;\n                node.expressions[last] = mangleStrings(node.expressions[last]);\n            } else if (node instanceof AST_String) {\n                node.value = mangle(node.value);\n            } else if (node instanceof AST_Conditional) {\n                node.consequent = mangleStrings(node.consequent);\n                node.alternative = mangleStrings(node.alternative);\n            }\n            return node;\n        }));\n    }\n}\n\nexport {\n    reserve_quoted_keys,\n    mangle_properties,\n};\n"]},"metadata":{},"sourceType":"module"}