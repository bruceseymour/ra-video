{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _webpack = _interopRequireDefault(require(\"webpack\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nclass CssModule extends _webpack.default.Module {\n  constructor(dependency) {\n    super('css/mini-extract', dependency.context);\n    this.id = '';\n    this._identifier = dependency.identifier;\n    this._identifierIndex = dependency.identifierIndex;\n    this.content = dependency.content;\n    this.media = dependency.media;\n    this.sourceMap = dependency.sourceMap;\n  } // no source() so webpack doesn't do add stuff to the bundle\n\n\n  size() {\n    return this.content.length;\n  }\n\n  identifier() {\n    return `css ${this._identifier} ${this._identifierIndex}`;\n  }\n\n  readableIdentifier(requestShortener) {\n    return `css ${requestShortener.shorten(this._identifier)}${this._identifierIndex ? ` (${this._identifierIndex})` : ''}`;\n  }\n\n  nameForCondition() {\n    const resource = this._identifier.split('!').pop();\n\n    const idx = resource.indexOf('?');\n\n    if (idx >= 0) {\n      return resource.substring(0, idx);\n    }\n\n    return resource;\n  }\n\n  updateCacheModule(module) {\n    this.content = module.content;\n    this.media = module.media;\n    this.sourceMap = module.sourceMap;\n  }\n\n  needRebuild() {\n    return true;\n  }\n\n  build(options, compilation, resolver, fileSystem, callback) {\n    this.buildInfo = {};\n    this.buildMeta = {};\n    callback();\n  }\n\n  updateHash(hash, context) {\n    super.updateHash(hash, context);\n    hash.update(this.content);\n    hash.update(this.media || '');\n    hash.update(this.sourceMap ? JSON.stringify(this.sourceMap) : '');\n  }\n\n}\n\nconst isWebpack5 = parseInt(_webpack.default.version) === 5;\n\nif (isWebpack5) {\n  // @ts-ignore TODO: remove ts-ignore when webpack 5 is stable\n  _webpack.default.util.serialization.register(CssModule, 'next/dist/build/webpack/plugins/mini-css-extract-plugin/src/CssModule', null, {\n    serialize(obj, {\n      write\n    }) {\n      write(obj.context);\n      write(obj._identifier);\n      write(obj._identifierIndex);\n      write(obj.content);\n      write(obj.media);\n      write(obj.sourceMap);\n    },\n\n    deserialize({\n      read\n    }) {\n      const obj = new CssModule({\n        context: read(),\n        identifier: read(),\n        identifierIndex: read(),\n        content: read(),\n        media: read(),\n        sourceMap: read()\n      });\n      return obj;\n    }\n\n  });\n}\n\nvar _default = CssModule;\nexports.default = _default;","map":{"version":3,"sources":["../../../../../../build/webpack/plugins/mini-css-extract-plugin/src/CssModule.js"],"names":["webpack","Module","constructor","dependency","size","identifier","_identifier","_identifierIndex","readableIdentifier","requestShortener","nameForCondition","resource","idx","updateCacheModule","module","needRebuild","build","callback","updateHash","hash","JSON","isWebpack5","parseInt","serialize","write","obj","deserialize","context","read","identifierIndex","content","media","sourceMap","CssModule"],"mappings":"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","sourcesContent":["import webpack from 'webpack'\n\nclass CssModule extends webpack.Module {\n  constructor(dependency) {\n    super('css/mini-extract', dependency.context)\n    this.id = ''\n    this._identifier = dependency.identifier\n    this._identifierIndex = dependency.identifierIndex\n    this.content = dependency.content\n    this.media = dependency.media\n    this.sourceMap = dependency.sourceMap\n  } // no source() so webpack doesn't do add stuff to the bundle\n\n  size() {\n    return this.content.length\n  }\n\n  identifier() {\n    return `css ${this._identifier} ${this._identifierIndex}`\n  }\n\n  readableIdentifier(requestShortener) {\n    return `css ${requestShortener.shorten(this._identifier)}${\n      this._identifierIndex ? ` (${this._identifierIndex})` : ''\n    }`\n  }\n\n  nameForCondition() {\n    const resource = this._identifier.split('!').pop()\n\n    const idx = resource.indexOf('?')\n\n    if (idx >= 0) {\n      return resource.substring(0, idx)\n    }\n\n    return resource\n  }\n\n  updateCacheModule(module) {\n    this.content = module.content\n    this.media = module.media\n    this.sourceMap = module.sourceMap\n  }\n\n  needRebuild() {\n    return true\n  }\n\n  build(options, compilation, resolver, fileSystem, callback) {\n    this.buildInfo = {}\n    this.buildMeta = {}\n    callback()\n  }\n\n  updateHash(hash, context) {\n    super.updateHash(hash, context)\n    hash.update(this.content)\n    hash.update(this.media || '')\n    hash.update(this.sourceMap ? JSON.stringify(this.sourceMap) : '')\n  }\n}\n\nconst isWebpack5 = parseInt(webpack.version) === 5\n\nif (isWebpack5) {\n  // @ts-ignore TODO: remove ts-ignore when webpack 5 is stable\n  webpack.util.serialization.register(\n    CssModule,\n    'next/dist/build/webpack/plugins/mini-css-extract-plugin/src/CssModule',\n    null,\n    {\n      serialize(obj, { write }) {\n        write(obj.context)\n        write(obj._identifier)\n        write(obj._identifierIndex)\n        write(obj.content)\n        write(obj.media)\n        write(obj.sourceMap)\n      },\n      deserialize({ read }) {\n        const obj = new CssModule({\n          context: read(),\n          identifier: read(),\n          identifierIndex: read(),\n          content: read(),\n          media: read(),\n          sourceMap: read(),\n        })\n\n        return obj\n      },\n    }\n  )\n}\n\nexport default CssModule\n"]},"metadata":{},"sourceType":"script"}