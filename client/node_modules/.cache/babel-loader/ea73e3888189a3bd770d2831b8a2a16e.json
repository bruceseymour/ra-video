{"ast":null,"code":"/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst {\n  hasAttribute,\n  remove,\n  createElement,\n  insertBefore,\n  nextNode,\n  firstChildByTag\n} = require('../NodeUtils');\n\nconst {\n  isRenderDelayingExtension,\n  isCustomElement\n} = require('../Extensions.js');\n\nconst {\n  applyLayout\n} = require('./ApplyLayout.js');\n\nconst ApplyCommonAttributes = require('./ApplyCommonAttributes');\n\nclass ServerSideRendering {\n  constructor(config) {\n    this.log_ = config.log.tag('ServerSideRendering');\n  } // Determines whether the node |n| has an enclosing ancestor tag\n  // identified as |tagname|.\n\n\n  _hasAncestorWithTag(n, tagname) {\n    for (let p = n.parent; p !== null; p = p.parent) {\n      if (p.tagName === tagname) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  transform(root) {\n    const applyCommonAttributes = new ApplyCommonAttributes(this.log_);\n    const html = firstChildByTag(root, 'html');\n\n    if (!html) {\n      return;\n    }\n\n    const body = firstChildByTag(html, 'body');\n    const head = firstChildByTag(html, 'head'); // A simple check ensuring that the Server-side rendering is only applied once.\n\n    if (typeof html.attribs['i-amphtml-layout'] !== 'undefined' && html.attribs['i-amphtml-layout'] !== null) {\n      return;\n    }\n\n    html.attribs['i-amphtml-layout'] = ''; // Within the loop we apply the layout to the custom tags (amp-foo...)\n    // where possible, but while we're at this we also look for reasons\n    // not to remove the boilerplate.\n\n    let canRemoveBoilerplate = true;\n\n    for (let node = body; node; node = nextNode(node)) {\n      applyCommonAttributes.addNode(node); // Skip tags that are not AMP custom elements.\n\n      if (!isCustomElement(node)) {\n        continue;\n      } // Skip tags inside a template tag.\n\n\n      if (this._hasAncestorWithTag(node, 'template')) {\n        continue;\n      } // amp-experiment is a render delaying extension iff the tag is used in\n      // the doc. We check for that here rather than checking for the existence\n      // of the amp-experiment script in IsRenderDelayingExtension below.\n\n\n      if (node.tagName === 'amp-experiment' && this.isAmpExperimentUsed(node)) {\n        canRemoveBoilerplate = false;\n        this.log_.debug('cannot remove boilerplate: amp-experiment');\n      } // amp-audio requires knowing the dimensions of the browser. Do not\n      // remove the boilerplate or apply layout if amp-audio is present in the\n      // document.\n\n\n      if (node.tagName === 'amp-audio') {\n        canRemoveBoilerplate = false;\n        this.log_.debug('cannot remove boilerplate: amp-audio');\n        continue;\n      } // Now apply the layout to the custom elements. If we encounter\n      // any unsupported layout, the applyLayout function returns\n      // false and we can't remove the boilerplate.\n\n\n      if (!applyLayout(node, this.log_)) {\n        this.log_.debug('cannot remove boilerplate: unsupported layout');\n        canRemoveBoilerplate = false;\n        continue;\n      }\n    } // Transform media, sizes and heights attributes\n    // Important: this needs to run after applyLayout.\n\n\n    applyCommonAttributes.apply(); // Emit the amp-runtime marker to indicate that we're applying\n    // server side rendering in the document.\n\n    const ampRuntimeMarker = createElement('style', {\n      'amp-runtime': ''\n    });\n    const referenceNode = head.children && head.children.length ? head.children[0] : null;\n    insertBefore(head, ampRuntimeMarker, referenceNode);\n    let customStyles;\n\n    for (let node = head.firstChild; node; node = node.nextSibling) {\n      // amp-experiment is a render delaying extension iff the tag is used in\n      // the doc, which we checked for above.\n      if (node.tagName === 'script' && hasAttribute(node, 'custom-element') && node.attribs['custom-element'] === 'amp-experiment') {\n        continue;\n      }\n\n      if (isRenderDelayingExtension(node)) {\n        this.log_.debug('cannot remove boilerplate because of a render delaying extension: ', node.tagName);\n        canRemoveBoilerplate = false;\n      }\n\n      if (hasAttribute(node, 'amp-custom')) {\n        customStyles = node;\n      }\n    } // Add attribute styles to the custom-styles and remove the attributes\n\n\n    applyCommonAttributes.applyToCustomStyles(head, customStyles);\n\n    if (!applyCommonAttributes.canRemoveBoilerplate) {\n      canRemoveBoilerplate = false;\n    } // Below, we're only concerned about removing the boilerplate.\n    // If we've already determined that we can't, we're done here.\n\n\n    if (!canRemoveBoilerplate) {\n      return;\n    } // The boilerplate can be removed, note it on the <html> tag.\n\n\n    html.attribs['i-amphtml-no-boilerplate'] = ''; // Find the boilerplate and remove it.\n    // The following code assumes that the <noscript>\n    // tag in the head is only ever used for boilerplate.\n\n    const toRemove = [];\n\n    for (let node = head.firstChild; node; node = node.nextSibling) {\n      if (node.tagName === 'noscript' || node.tagName === 'style' && hasAttribute(node, 'amp-boilerplate')) {\n        toRemove.push(node);\n      }\n    }\n\n    for (const n of toRemove) {\n      remove(n);\n    }\n  }\n\n  isAmpExperimentUsed(ampExperimentNode) {\n    let script;\n\n    for (const child of ampExperimentNode.children || []) {\n      if (child.tagName === 'script' && child.attribs && child.attribs['type'] === 'application/json') {\n        script = child;\n        break;\n      }\n    } // If not script/json tag, then not used.\n\n\n    if (!script) {\n      return false;\n    } // If not exactly one child is present, then not used.\n\n\n    if (script.children.length !== 1) {\n      return false;\n    } // If child is not a textnode, then not used.\n\n\n    const scriptChild = script.firstChild;\n\n    if (scriptChild.type !== 'text') {\n      return false;\n    } // If textnode is not JSON parsable, then not used.\n\n\n    try {\n      const parsedJson = JSON.parse(scriptChild.data); // If JSON is empty, then not used.\n\n      return typeof parsedJson === 'object' && Object.keys(parsedJson).length > 0;\n    } catch (e) {\n      // invalid JSON\n      return false;\n    }\n  }\n\n}\n\nmodule.exports = ServerSideRendering;","map":{"version":3,"sources":["/Users/bruceseymour/ra-video/client/node_modules/@ampproject/toolbox-optimizer/lib/transformers/ServerSideRendering.js"],"names":["hasAttribute","remove","createElement","insertBefore","nextNode","firstChildByTag","require","isRenderDelayingExtension","isCustomElement","applyLayout","ApplyCommonAttributes","ServerSideRendering","constructor","config","log_","log","tag","_hasAncestorWithTag","n","tagname","p","parent","tagName","transform","root","applyCommonAttributes","html","body","head","attribs","canRemoveBoilerplate","node","addNode","isAmpExperimentUsed","debug","apply","ampRuntimeMarker","referenceNode","children","length","customStyles","firstChild","nextSibling","applyToCustomStyles","toRemove","push","ampExperimentNode","script","child","scriptChild","type","parsedJson","JSON","parse","data","Object","keys","e","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst {\n  hasAttribute,\n  remove,\n  createElement,\n  insertBefore,\n  nextNode,\n  firstChildByTag,\n} = require('../NodeUtils');\nconst {isRenderDelayingExtension, isCustomElement} = require('../Extensions.js');\nconst {applyLayout} = require('./ApplyLayout.js');\nconst ApplyCommonAttributes = require('./ApplyCommonAttributes');\n\nclass ServerSideRendering {\n  constructor(config) {\n    this.log_ = config.log.tag('ServerSideRendering');\n  }\n  // Determines whether the node |n| has an enclosing ancestor tag\n  // identified as |tagname|.\n  _hasAncestorWithTag(n, tagname) {\n    for (let p = n.parent; p !== null; p = p.parent) {\n      if (p.tagName === tagname) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  transform(root) {\n    const applyCommonAttributes = new ApplyCommonAttributes(this.log_);\n    const html = firstChildByTag(root, 'html');\n    if (!html) {\n      return;\n    }\n    const body = firstChildByTag(html, 'body');\n    const head = firstChildByTag(html, 'head');\n\n    // A simple check ensuring that the Server-side rendering is only applied once.\n    if (\n      typeof html.attribs['i-amphtml-layout'] !== 'undefined' &&\n      html.attribs['i-amphtml-layout'] !== null\n    ) {\n      return;\n    }\n    html.attribs['i-amphtml-layout'] = '';\n\n    // Within the loop we apply the layout to the custom tags (amp-foo...)\n    // where possible, but while we're at this we also look for reasons\n    // not to remove the boilerplate.\n    let canRemoveBoilerplate = true;\n    for (let node = body; node; node = nextNode(node)) {\n      applyCommonAttributes.addNode(node);\n      // Skip tags that are not AMP custom elements.\n      if (!isCustomElement(node)) {\n        continue;\n      }\n\n      // Skip tags inside a template tag.\n      if (this._hasAncestorWithTag(node, 'template')) {\n        continue;\n      }\n\n      // amp-experiment is a render delaying extension iff the tag is used in\n      // the doc. We check for that here rather than checking for the existence\n      // of the amp-experiment script in IsRenderDelayingExtension below.\n      if (node.tagName === 'amp-experiment' && this.isAmpExperimentUsed(node)) {\n        canRemoveBoilerplate = false;\n        this.log_.debug('cannot remove boilerplate: amp-experiment');\n      }\n\n      // amp-audio requires knowing the dimensions of the browser. Do not\n      // remove the boilerplate or apply layout if amp-audio is present in the\n      // document.\n      if (node.tagName === 'amp-audio') {\n        canRemoveBoilerplate = false;\n        this.log_.debug('cannot remove boilerplate: amp-audio');\n        continue;\n      }\n\n      // Now apply the layout to the custom elements. If we encounter\n      // any unsupported layout, the applyLayout function returns\n      // false and we can't remove the boilerplate.\n      if (!applyLayout(node, this.log_)) {\n        this.log_.debug('cannot remove boilerplate: unsupported layout');\n        canRemoveBoilerplate = false;\n        continue;\n      }\n    }\n\n    // Transform media, sizes and heights attributes\n    // Important: this needs to run after applyLayout.\n    applyCommonAttributes.apply();\n\n    // Emit the amp-runtime marker to indicate that we're applying\n    // server side rendering in the document.\n    const ampRuntimeMarker = createElement('style', {\n      'amp-runtime': '',\n    });\n\n    const referenceNode = head.children && head.children.length ? head.children[0] : null;\n    insertBefore(head, ampRuntimeMarker, referenceNode);\n\n    let customStyles;\n    for (let node = head.firstChild; node; node = node.nextSibling) {\n      // amp-experiment is a render delaying extension iff the tag is used in\n      // the doc, which we checked for above.\n      if (\n        node.tagName === 'script' &&\n        hasAttribute(node, 'custom-element') &&\n        node.attribs['custom-element'] === 'amp-experiment'\n      ) {\n        continue;\n      }\n      if (isRenderDelayingExtension(node)) {\n        this.log_.debug(\n          'cannot remove boilerplate because of a render delaying extension: ',\n          node.tagName\n        );\n        canRemoveBoilerplate = false;\n      }\n      if (hasAttribute(node, 'amp-custom')) {\n        customStyles = node;\n      }\n    }\n    // Add attribute styles to the custom-styles and remove the attributes\n    applyCommonAttributes.applyToCustomStyles(head, customStyles);\n    if (!applyCommonAttributes.canRemoveBoilerplate) {\n      canRemoveBoilerplate = false;\n    }\n\n    // Below, we're only concerned about removing the boilerplate.\n    // If we've already determined that we can't, we're done here.\n    if (!canRemoveBoilerplate) {\n      return;\n    }\n\n    // The boilerplate can be removed, note it on the <html> tag.\n    html.attribs['i-amphtml-no-boilerplate'] = '';\n\n    // Find the boilerplate and remove it.\n    // The following code assumes that the <noscript>\n    // tag in the head is only ever used for boilerplate.\n    const toRemove = [];\n    for (let node = head.firstChild; node; node = node.nextSibling) {\n      if (\n        node.tagName === 'noscript' ||\n        (node.tagName === 'style' && hasAttribute(node, 'amp-boilerplate'))\n      ) {\n        toRemove.push(node);\n      }\n    }\n\n    for (const n of toRemove) {\n      remove(n);\n    }\n  }\n\n  isAmpExperimentUsed(ampExperimentNode) {\n    let script;\n    for (const child of ampExperimentNode.children || []) {\n      if (\n        child.tagName === 'script' &&\n        child.attribs &&\n        child.attribs['type'] === 'application/json'\n      ) {\n        script = child;\n        break;\n      }\n    }\n    // If not script/json tag, then not used.\n    if (!script) {\n      return false;\n    }\n    // If not exactly one child is present, then not used.\n    if (script.children.length !== 1) {\n      return false;\n    }\n    // If child is not a textnode, then not used.\n    const scriptChild = script.firstChild;\n    if (scriptChild.type !== 'text') {\n      return false;\n    }\n    // If textnode is not JSON parsable, then not used.\n    try {\n      const parsedJson = JSON.parse(scriptChild.data);\n      // If JSON is empty, then not used.\n      return typeof parsedJson === 'object' && Object.keys(parsedJson).length > 0;\n    } catch (e) {\n      // invalid JSON\n      return false;\n    }\n  }\n}\n\nmodule.exports = ServerSideRendering;\n"]},"metadata":{},"sourceType":"script"}