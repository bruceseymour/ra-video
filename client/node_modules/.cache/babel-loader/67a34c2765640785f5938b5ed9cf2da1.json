{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.normalizeConfig = normalizeConfig;\nexports.default = loadConfig;\nexports.isTargetLikeServerless = isTargetLikeServerless;\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _findUp = _interopRequireDefault(require(\"next/dist/compiled/find-up\"));\n\nvar _os = _interopRequireDefault(require(\"os\"));\n\nvar _path = require(\"path\");\n\nvar _utils = require(\"../lib/utils\");\n\nvar Log = _interopRequireWildcard(require(\"../../build/output/log\"));\n\nvar _constants = require(\"../lib/constants\");\n\nvar _imageConfig = require(\"./image-config\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst targets = ['server', 'serverless', 'experimental-serverless-trace'];\nconst reactModes = ['legacy', 'blocking', 'concurrent'];\nconst defaultConfig = {\n  env: [],\n  webpack: null,\n  webpackDevMiddleware: null,\n  distDir: '.next',\n  assetPrefix: '',\n  configOrigin: 'default',\n  useFileSystemPublicRoutes: true,\n  generateBuildId: () => null,\n  generateEtags: true,\n  pageExtensions: ['tsx', 'ts', 'jsx', 'js'],\n  target: 'server',\n  poweredByHeader: true,\n  compress: true,\n  analyticsId: process.env.VERCEL_ANALYTICS_ID || '',\n  images: _imageConfig.imageConfigDefault,\n  devIndicators: {\n    buildActivity: true\n  },\n  onDemandEntries: {\n    maxInactiveAge: 60 * 1000,\n    pagesBufferLength: 2\n  },\n  amp: {\n    canonicalBase: ''\n  },\n  basePath: '',\n  sassOptions: {},\n  trailingSlash: false,\n  i18n: null,\n  productionBrowserSourceMaps: false,\n  experimental: {\n    cpus: Math.max(1, (Number(process.env.CIRCLE_NODE_TOTAL) || (_os.default.cpus() || {\n      length: 1\n    }).length) - 1),\n    plugins: false,\n    profiling: false,\n    sprFlushToDisk: true,\n    reactMode: 'legacy',\n    workerThreads: false,\n    pageEnv: false,\n    optimizeFonts: false,\n    optimizeImages: false,\n    optimizeCss: false,\n    scrollRestoration: false,\n    scriptLoader: false\n  },\n  future: {\n    excludeDefaultMomentLocales: false\n  },\n  serverRuntimeConfig: {},\n  publicRuntimeConfig: {},\n  reactStrictMode: false\n};\nconst experimentalWarning = (0, _utils.execOnce)(() => {\n  Log.warn(_chalk.default.bold('You have enabled experimental feature(s).'));\n  Log.warn(`Experimental features are not covered by semver, and may cause unexpected or broken application behavior. ` + `Use them at your own risk.`);\n  console.warn();\n});\n\nfunction assignDefaults(userConfig) {\n  if (typeof userConfig.exportTrailingSlash !== 'undefined') {\n    console.warn(_chalk.default.yellow.bold('Warning: ') + 'The \"exportTrailingSlash\" option has been renamed to \"trailingSlash\". Please update your next.config.js.');\n\n    if (typeof userConfig.trailingSlash === 'undefined') {\n      userConfig.trailingSlash = userConfig.exportTrailingSlash;\n    }\n\n    delete userConfig.exportTrailingSlash;\n  }\n\n  const config = Object.keys(userConfig).reduce((currentConfig, key) => {\n    const value = userConfig[key];\n\n    if (value === undefined || value === null) {\n      return currentConfig;\n    }\n\n    if (key === 'experimental' && value && value !== defaultConfig[key]) {\n      experimentalWarning();\n    }\n\n    if (key === 'distDir') {\n      if (typeof value !== 'string') {\n        throw new Error(`Specified distDir is not a string, found type \"${typeof value}\"`);\n      }\n\n      const userDistDir = value.trim(); // don't allow public as the distDir as this is a reserved folder for\n      // public files\n\n      if (userDistDir === 'public') {\n        throw new Error(`The 'public' directory is reserved in Next.js and can not be set as the 'distDir'. https://err.sh/vercel/next.js/can-not-output-to-public`);\n      } // make sure distDir isn't an empty string as it can result in the provided\n      // directory being deleted in development mode\n\n\n      if (userDistDir.length === 0) {\n        throw new Error(`Invalid distDir provided, distDir can not be an empty string. Please remove this config or set it to undefined`);\n      }\n    }\n\n    if (key === 'pageExtensions') {\n      if (!Array.isArray(value)) {\n        throw new Error(`Specified pageExtensions is not an array of strings, found \"${value}\". Please update this config or remove it.`);\n      }\n\n      if (!value.length) {\n        throw new Error(`Specified pageExtensions is an empty array. Please update it with the relevant extensions or remove it.`);\n      }\n\n      value.forEach(ext => {\n        if (typeof ext !== 'string') {\n          throw new Error(`Specified pageExtensions is not an array of strings, found \"${ext}\" of type \"${typeof ext}\". Please update this config or remove it.`);\n        }\n      });\n    }\n\n    if (!!value && value.constructor === Object) {\n      currentConfig[key] = { ...defaultConfig[key],\n        ...Object.keys(value).reduce((c, k) => {\n          const v = value[k];\n\n          if (v !== undefined && v !== null) {\n            c[k] = v;\n          }\n\n          return c;\n        }, {})\n      };\n    } else {\n      currentConfig[key] = value;\n    }\n\n    return currentConfig;\n  }, {});\n  const result = { ...defaultConfig,\n    ...config\n  };\n\n  if (typeof result.assetPrefix !== 'string') {\n    throw new Error(`Specified assetPrefix is not a string, found type \"${typeof result.assetPrefix}\" https://err.sh/vercel/next.js/invalid-assetprefix`);\n  }\n\n  if (typeof result.basePath !== 'string') {\n    throw new Error(`Specified basePath is not a string, found type \"${typeof result.basePath}\"`);\n  }\n\n  if (result.basePath !== '') {\n    if (result.basePath === '/') {\n      throw new Error(`Specified basePath /. basePath has to be either an empty string or a path prefix\"`);\n    }\n\n    if (!result.basePath.startsWith('/')) {\n      throw new Error(`Specified basePath has to start with a /, found \"${result.basePath}\"`);\n    }\n\n    if (result.basePath !== '/') {\n      if (result.basePath.endsWith('/')) {\n        throw new Error(`Specified basePath should not end with /, found \"${result.basePath}\"`);\n      }\n\n      if (result.assetPrefix === '') {\n        result.assetPrefix = result.basePath;\n      }\n\n      if (result.amp.canonicalBase === '') {\n        result.amp.canonicalBase = result.basePath;\n      }\n    }\n  }\n\n  if (result != null && result.images) {\n    const images = result.images;\n\n    if (typeof images !== 'object') {\n      throw new Error(`Specified images should be an object received ${typeof images}.\\nSee more info here: https://err.sh/next.js/invalid-images-config`);\n    }\n\n    if (images.domains) {\n      if (!Array.isArray(images.domains)) {\n        throw new Error(`Specified images.domains should be an Array received ${typeof images.domains}.\\nSee more info here: https://err.sh/next.js/invalid-images-config`);\n      }\n\n      if (images.domains.length > 50) {\n        throw new Error(`Specified images.domains exceeds length of 50, received length (${images.domains.length}), please reduce the length of the array to continue.\\nSee more info here: https://err.sh/next.js/invalid-images-config`);\n      }\n\n      const invalid = images.domains.filter(d => typeof d !== 'string');\n\n      if (invalid.length > 0) {\n        throw new Error(`Specified images.domains should be an Array of strings received invalid values (${invalid.join(', ')}).\\nSee more info here: https://err.sh/next.js/invalid-images-config`);\n      }\n    }\n\n    if (images.deviceSizes) {\n      const {\n        deviceSizes\n      } = images;\n\n      if (!Array.isArray(deviceSizes)) {\n        throw new Error(`Specified images.deviceSizes should be an Array received ${typeof deviceSizes}.\\nSee more info here: https://err.sh/next.js/invalid-images-config`);\n      }\n\n      if (deviceSizes.length > 25) {\n        throw new Error(`Specified images.deviceSizes exceeds length of 25, received length (${deviceSizes.length}), please reduce the length of the array to continue.\\nSee more info here: https://err.sh/next.js/invalid-images-config`);\n      }\n\n      const invalid = deviceSizes.filter(d => {\n        return typeof d !== 'number' || d < 1 || d > 10000;\n      });\n\n      if (invalid.length > 0) {\n        throw new Error(`Specified images.deviceSizes should be an Array of numbers that are between 1 and 10000, received invalid values (${invalid.join(', ')}).\\nSee more info here: https://err.sh/next.js/invalid-images-config`);\n      }\n    }\n\n    if (images.imageSizes) {\n      const {\n        imageSizes\n      } = images;\n\n      if (!Array.isArray(imageSizes)) {\n        throw new Error(`Specified images.imageSizes should be an Array received ${typeof imageSizes}.\\nSee more info here: https://err.sh/next.js/invalid-images-config`);\n      }\n\n      if (imageSizes.length > 25) {\n        throw new Error(`Specified images.imageSizes exceeds length of 25, received length (${imageSizes.length}), please reduce the length of the array to continue.\\nSee more info here: https://err.sh/next.js/invalid-images-config`);\n      }\n\n      const invalid = imageSizes.filter(d => {\n        return typeof d !== 'number' || d < 1 || d > 10000;\n      });\n\n      if (invalid.length > 0) {\n        throw new Error(`Specified images.imageSizes should be an Array of numbers that are between 1 and 10000, received invalid values (${invalid.join(', ')}).\\nSee more info here: https://err.sh/next.js/invalid-images-config`);\n      }\n    }\n\n    if (!images.loader) {\n      images.loader = 'default';\n    }\n\n    if (!_imageConfig.VALID_LOADERS.includes(images.loader)) {\n      throw new Error(`Specified images.loader should be one of (${_imageConfig.VALID_LOADERS.join(', ')}), received invalid value (${images.loader}).\\nSee more info here: https://err.sh/next.js/invalid-images-config`);\n    } // Append trailing slash for non-default loaders\n\n\n    if (images.path) {\n      if (images.loader !== 'default' && images.path[images.path.length - 1] !== '/') {\n        images.path += '/';\n      }\n    }\n\n    if (images.path === _imageConfig.imageConfigDefault.path && result.basePath) {\n      images.path = `${result.basePath}${images.path}`;\n    }\n  }\n\n  if (result.i18n) {\n    const {\n      i18n\n    } = result;\n    const i18nType = typeof i18n;\n\n    if (i18nType !== 'object') {\n      throw new Error(`Specified i18n should be an object received ${i18nType}.\\nSee more info here: https://err.sh/next.js/invalid-i18n-config`);\n    }\n\n    if (!Array.isArray(i18n.locales)) {\n      throw new Error(`Specified i18n.locales should be an Array received ${typeof i18n.locales}.\\nSee more info here: https://err.sh/next.js/invalid-i18n-config`);\n    }\n\n    const defaultLocaleType = typeof i18n.defaultLocale;\n\n    if (!i18n.defaultLocale || defaultLocaleType !== 'string') {\n      throw new Error(`Specified i18n.defaultLocale should be a string.\\nSee more info here: https://err.sh/next.js/invalid-i18n-config`);\n    }\n\n    if (typeof i18n.domains !== 'undefined' && !Array.isArray(i18n.domains)) {\n      throw new Error(`Specified i18n.domains must be an array of domain objects e.g. [ { domain: 'example.fr', defaultLocale: 'fr', locales: ['fr'] } ] received ${typeof i18n.domains}.\\nSee more info here: https://err.sh/next.js/invalid-i18n-config`);\n    }\n\n    if (i18n.domains) {\n      const invalidDomainItems = i18n.domains.filter(item => {\n        if (!item || typeof item !== 'object') return true;\n        if (!item.defaultLocale) return true;\n        if (!item.domain || typeof item.domain !== 'string') return true;\n        let hasInvalidLocale = false;\n\n        if (Array.isArray(item.locales)) {\n          for (const locale of item.locales) {\n            if (typeof locale !== 'string') hasInvalidLocale = true;\n\n            for (const domainItem of i18n.domains || []) {\n              if (domainItem === item) continue;\n\n              if (domainItem.locales && domainItem.locales.includes(locale)) {\n                console.warn(`Both ${item.domain} and ${domainItem.domain} configured the locale (${locale}) but only one can. Remove it from one i18n.domains config to continue`);\n                hasInvalidLocale = true;\n                break;\n              }\n            }\n          }\n        }\n\n        return hasInvalidLocale;\n      });\n\n      if (invalidDomainItems.length > 0) {\n        throw new Error(`Invalid i18n.domains values:\\n${invalidDomainItems.map(item => JSON.stringify(item)).join('\\n')}\\n\\ndomains value must follow format { domain: 'example.fr', defaultLocale: 'fr', locales: ['fr'] }.\\nSee more info here: https://err.sh/next.js/invalid-i18n-config`);\n      }\n    }\n\n    if (!Array.isArray(i18n.locales)) {\n      throw new Error(`Specified i18n.locales must be an array of locale strings e.g. [\"en-US\", \"nl-NL\"] received ${typeof i18n.locales}.\\nSee more info here: https://err.sh/next.js/invalid-i18n-config`);\n    }\n\n    const invalidLocales = i18n.locales.filter(locale => typeof locale !== 'string');\n\n    if (invalidLocales.length > 0) {\n      throw new Error(`Specified i18n.locales contains invalid values (${invalidLocales.map(String).join(', ')}), locales must be valid locale tags provided as strings e.g. \"en-US\".\\n` + `See here for list of valid language sub-tags: http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry`);\n    }\n\n    if (!i18n.locales.includes(i18n.defaultLocale)) {\n      throw new Error(`Specified i18n.defaultLocale should be included in i18n.locales.\\nSee more info here: https://err.sh/next.js/invalid-i18n-config`);\n    } // make sure default Locale is at the front\n\n\n    i18n.locales = [i18n.defaultLocale, ...i18n.locales.filter(locale => locale !== i18n.defaultLocale)];\n    const localeDetectionType = typeof i18n.localeDetection;\n\n    if (localeDetectionType !== 'boolean' && localeDetectionType !== 'undefined') {\n      throw new Error(`Specified i18n.localeDetection should be undefined or a boolean received ${localeDetectionType}.\\nSee more info here: https://err.sh/next.js/invalid-i18n-config`);\n    }\n  }\n\n  return result;\n}\n\nfunction normalizeConfig(phase, config) {\n  if (typeof config === 'function') {\n    config = config(phase, {\n      defaultConfig\n    });\n\n    if (typeof config.then === 'function') {\n      throw new Error('> Promise returned in next config. https://err.sh/vercel/next.js/promise-in-next-config');\n    }\n  }\n\n  return config;\n}\n\nfunction loadConfig(phase, dir, customConfig) {\n  if (customConfig) {\n    return assignDefaults({\n      configOrigin: 'server',\n      ...customConfig\n    });\n  }\n\n  const path = _findUp.default.sync(_constants.CONFIG_FILE, {\n    cwd: dir\n  }); // If config file was found\n\n\n  if (path != null && path.length) {\n    var _userConfig$amp, _userConfig$experimen;\n\n    const userConfigModule = require(path);\n\n    const userConfig = normalizeConfig(phase, userConfigModule.default || userConfigModule);\n\n    if (Object.keys(userConfig).length === 0) {\n      Log.warn('Detected next.config.js, no exported configuration found. https://err.sh/vercel/next.js/empty-configuration');\n    }\n\n    if (userConfig.target && !targets.includes(userConfig.target)) {\n      throw new Error(`Specified target is invalid. Provided: \"${userConfig.target}\" should be one of ${targets.join(', ')}`);\n    }\n\n    if ((_userConfig$amp = userConfig.amp) != null && _userConfig$amp.canonicalBase) {\n      const {\n        canonicalBase\n      } = userConfig.amp || {};\n      userConfig.amp = userConfig.amp || {};\n      userConfig.amp.canonicalBase = (canonicalBase.endsWith('/') ? canonicalBase.slice(0, -1) : canonicalBase) || '';\n    }\n\n    if ((_userConfig$experimen = userConfig.experimental) != null && _userConfig$experimen.reactMode && !reactModes.includes(userConfig.experimental.reactMode)) {\n      throw new Error(`Specified React Mode is invalid. Provided: ${userConfig.experimental.reactMode} should be one of ${reactModes.join(', ')}`);\n    }\n\n    return assignDefaults({\n      configOrigin: _constants.CONFIG_FILE,\n      configFile: path,\n      ...userConfig\n    });\n  } else {\n    const configBaseName = (0, _path.basename)(_constants.CONFIG_FILE, (0, _path.extname)(_constants.CONFIG_FILE));\n\n    const nonJsPath = _findUp.default.sync([`${configBaseName}.jsx`, `${configBaseName}.ts`, `${configBaseName}.tsx`, `${configBaseName}.json`], {\n      cwd: dir\n    });\n\n    if (nonJsPath != null && nonJsPath.length) {\n      throw new Error(`Configuring Next.js via '${(0, _path.basename)(nonJsPath)}' is not supported. Please replace the file with 'next.config.js'.`);\n    }\n  }\n\n  return defaultConfig;\n}\n\nfunction isTargetLikeServerless(target) {\n  const isServerless = target === 'serverless';\n  const isServerlessTrace = target === 'experimental-serverless-trace';\n  return isServerless || isServerlessTrace;\n}","map":{"version":3,"sources":["../../../next-server/server/config.ts"],"names":["targets","reactModes","defaultConfig","env","webpack","webpackDevMiddleware","distDir","assetPrefix","configOrigin","useFileSystemPublicRoutes","generateBuildId","generateEtags","pageExtensions","target","poweredByHeader","compress","analyticsId","process","images","imageConfigDefault","devIndicators","buildActivity","onDemandEntries","maxInactiveAge","pagesBufferLength","amp","canonicalBase","basePath","sassOptions","trailingSlash","i18n","productionBrowserSourceMaps","experimental","cpus","Math","Number","os","length","plugins","profiling","sprFlushToDisk","reactMode","workerThreads","pageEnv","optimizeFonts","optimizeImages","optimizeCss","scrollRestoration","scriptLoader","future","excludeDefaultMomentLocales","serverRuntimeConfig","publicRuntimeConfig","reactStrictMode","experimentalWarning","Log","chalk","console","userConfig","config","value","key","userDistDir","Array","ext","currentConfig","Object","v","c","result","domains","invalid","d","deviceSizes","imageSizes","VALID_LOADERS","loader","path","i18nType","locales","defaultLocaleType","invalidDomainItems","item","hasInvalidLocale","domainItem","domain","locale","JSON","invalidLocales","localeDetectionType","assignDefaults","findUp","CONFIG_FILE","cwd","userConfigModule","require","normalizeConfig","configFile","configBaseName","nonJsPath","isServerless","isServerlessTrace"],"mappings":"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","sourcesContent":["import chalk from 'chalk'\nimport findUp from 'next/dist/compiled/find-up'\nimport os from 'os'\nimport { basename, extname } from 'path'\nimport { execOnce } from '../lib/utils'\nimport * as Log from '../../build/output/log'\nimport { CONFIG_FILE } from '../lib/constants'\nimport { Header, Rewrite, Redirect } from '../../lib/load-custom-routes'\nimport { ImageConfig, imageConfigDefault, VALID_LOADERS } from './image-config'\n\nconst targets = ['server', 'serverless', 'experimental-serverless-trace']\nconst reactModes = ['legacy', 'blocking', 'concurrent']\n\nexport type DomainLocales = Array<{\n  http?: true\n  domain: string\n  locales?: string[]\n  defaultLocale: string\n}>\n\nexport type NextConfig = { [key: string]: any } & {\n  i18n?: {\n    locales: string[]\n    defaultLocale: string\n    domains?: DomainLocales\n    localeDetection?: false\n  } | null\n\n  headers?: () => Promise<Header[]>\n  rewrites?: () => Promise<Rewrite[]>\n  redirects?: () => Promise<Redirect[]>\n\n  trailingSlash?: boolean\n}\n\nconst defaultConfig: NextConfig = {\n  env: [],\n  webpack: null,\n  webpackDevMiddleware: null,\n  distDir: '.next',\n  assetPrefix: '',\n  configOrigin: 'default',\n  useFileSystemPublicRoutes: true,\n  generateBuildId: () => null,\n  generateEtags: true,\n  pageExtensions: ['tsx', 'ts', 'jsx', 'js'],\n  target: 'server',\n  poweredByHeader: true,\n  compress: true,\n  analyticsId: process.env.VERCEL_ANALYTICS_ID || '',\n  images: imageConfigDefault,\n  devIndicators: {\n    buildActivity: true,\n  },\n  onDemandEntries: {\n    maxInactiveAge: 60 * 1000,\n    pagesBufferLength: 2,\n  },\n  amp: {\n    canonicalBase: '',\n  },\n  basePath: '',\n  sassOptions: {},\n  trailingSlash: false,\n  i18n: null,\n  productionBrowserSourceMaps: false,\n  experimental: {\n    cpus: Math.max(\n      1,\n      (Number(process.env.CIRCLE_NODE_TOTAL) ||\n        (os.cpus() || { length: 1 }).length) - 1\n    ),\n    plugins: false,\n    profiling: false,\n    sprFlushToDisk: true,\n    reactMode: 'legacy',\n    workerThreads: false,\n    pageEnv: false,\n    optimizeFonts: false,\n    optimizeImages: false,\n    optimizeCss: false,\n    scrollRestoration: false,\n    scriptLoader: false,\n  },\n  future: {\n    excludeDefaultMomentLocales: false,\n  },\n  serverRuntimeConfig: {},\n  publicRuntimeConfig: {},\n  reactStrictMode: false,\n}\n\nconst experimentalWarning = execOnce(() => {\n  Log.warn(chalk.bold('You have enabled experimental feature(s).'))\n  Log.warn(\n    `Experimental features are not covered by semver, and may cause unexpected or broken application behavior. ` +\n      `Use them at your own risk.`\n  )\n  console.warn()\n})\n\nfunction assignDefaults(userConfig: { [key: string]: any }) {\n  if (typeof userConfig.exportTrailingSlash !== 'undefined') {\n    console.warn(\n      chalk.yellow.bold('Warning: ') +\n        'The \"exportTrailingSlash\" option has been renamed to \"trailingSlash\". Please update your next.config.js.'\n    )\n    if (typeof userConfig.trailingSlash === 'undefined') {\n      userConfig.trailingSlash = userConfig.exportTrailingSlash\n    }\n    delete userConfig.exportTrailingSlash\n  }\n\n  const config = Object.keys(userConfig).reduce<{ [key: string]: any }>(\n    (currentConfig, key) => {\n      const value = userConfig[key]\n\n      if (value === undefined || value === null) {\n        return currentConfig\n      }\n\n      if (key === 'experimental' && value && value !== defaultConfig[key]) {\n        experimentalWarning()\n      }\n\n      if (key === 'distDir') {\n        if (typeof value !== 'string') {\n          throw new Error(\n            `Specified distDir is not a string, found type \"${typeof value}\"`\n          )\n        }\n        const userDistDir = value.trim()\n\n        // don't allow public as the distDir as this is a reserved folder for\n        // public files\n        if (userDistDir === 'public') {\n          throw new Error(\n            `The 'public' directory is reserved in Next.js and can not be set as the 'distDir'. https://err.sh/vercel/next.js/can-not-output-to-public`\n          )\n        }\n        // make sure distDir isn't an empty string as it can result in the provided\n        // directory being deleted in development mode\n        if (userDistDir.length === 0) {\n          throw new Error(\n            `Invalid distDir provided, distDir can not be an empty string. Please remove this config or set it to undefined`\n          )\n        }\n      }\n\n      if (key === 'pageExtensions') {\n        if (!Array.isArray(value)) {\n          throw new Error(\n            `Specified pageExtensions is not an array of strings, found \"${value}\". Please update this config or remove it.`\n          )\n        }\n\n        if (!value.length) {\n          throw new Error(\n            `Specified pageExtensions is an empty array. Please update it with the relevant extensions or remove it.`\n          )\n        }\n\n        value.forEach((ext) => {\n          if (typeof ext !== 'string') {\n            throw new Error(\n              `Specified pageExtensions is not an array of strings, found \"${ext}\" of type \"${typeof ext}\". Please update this config or remove it.`\n            )\n          }\n        })\n      }\n\n      if (!!value && value.constructor === Object) {\n        currentConfig[key] = {\n          ...defaultConfig[key],\n          ...Object.keys(value).reduce<any>((c, k) => {\n            const v = value[k]\n            if (v !== undefined && v !== null) {\n              c[k] = v\n            }\n            return c\n          }, {}),\n        }\n      } else {\n        currentConfig[key] = value\n      }\n\n      return currentConfig\n    },\n    {}\n  )\n\n  const result = { ...defaultConfig, ...config }\n\n  if (typeof result.assetPrefix !== 'string') {\n    throw new Error(\n      `Specified assetPrefix is not a string, found type \"${typeof result.assetPrefix}\" https://err.sh/vercel/next.js/invalid-assetprefix`\n    )\n  }\n\n  if (typeof result.basePath !== 'string') {\n    throw new Error(\n      `Specified basePath is not a string, found type \"${typeof result.basePath}\"`\n    )\n  }\n\n  if (result.basePath !== '') {\n    if (result.basePath === '/') {\n      throw new Error(\n        `Specified basePath /. basePath has to be either an empty string or a path prefix\"`\n      )\n    }\n\n    if (!result.basePath.startsWith('/')) {\n      throw new Error(\n        `Specified basePath has to start with a /, found \"${result.basePath}\"`\n      )\n    }\n\n    if (result.basePath !== '/') {\n      if (result.basePath.endsWith('/')) {\n        throw new Error(\n          `Specified basePath should not end with /, found \"${result.basePath}\"`\n        )\n      }\n\n      if (result.assetPrefix === '') {\n        result.assetPrefix = result.basePath\n      }\n\n      if (result.amp.canonicalBase === '') {\n        result.amp.canonicalBase = result.basePath\n      }\n    }\n  }\n\n  if (result?.images) {\n    const images: Partial<ImageConfig> = result.images\n\n    if (typeof images !== 'object') {\n      throw new Error(\n        `Specified images should be an object received ${typeof images}.\\nSee more info here: https://err.sh/next.js/invalid-images-config`\n      )\n    }\n\n    if (images.domains) {\n      if (!Array.isArray(images.domains)) {\n        throw new Error(\n          `Specified images.domains should be an Array received ${typeof images.domains}.\\nSee more info here: https://err.sh/next.js/invalid-images-config`\n        )\n      }\n\n      if (images.domains.length > 50) {\n        throw new Error(\n          `Specified images.domains exceeds length of 50, received length (${images.domains.length}), please reduce the length of the array to continue.\\nSee more info here: https://err.sh/next.js/invalid-images-config`\n        )\n      }\n\n      const invalid = images.domains.filter(\n        (d: unknown) => typeof d !== 'string'\n      )\n      if (invalid.length > 0) {\n        throw new Error(\n          `Specified images.domains should be an Array of strings received invalid values (${invalid.join(\n            ', '\n          )}).\\nSee more info here: https://err.sh/next.js/invalid-images-config`\n        )\n      }\n    }\n    if (images.deviceSizes) {\n      const { deviceSizes } = images\n      if (!Array.isArray(deviceSizes)) {\n        throw new Error(\n          `Specified images.deviceSizes should be an Array received ${typeof deviceSizes}.\\nSee more info here: https://err.sh/next.js/invalid-images-config`\n        )\n      }\n\n      if (deviceSizes.length > 25) {\n        throw new Error(\n          `Specified images.deviceSizes exceeds length of 25, received length (${deviceSizes.length}), please reduce the length of the array to continue.\\nSee more info here: https://err.sh/next.js/invalid-images-config`\n        )\n      }\n\n      const invalid = deviceSizes.filter((d: unknown) => {\n        return typeof d !== 'number' || d < 1 || d > 10000\n      })\n\n      if (invalid.length > 0) {\n        throw new Error(\n          `Specified images.deviceSizes should be an Array of numbers that are between 1 and 10000, received invalid values (${invalid.join(\n            ', '\n          )}).\\nSee more info here: https://err.sh/next.js/invalid-images-config`\n        )\n      }\n    }\n    if (images.imageSizes) {\n      const { imageSizes } = images\n      if (!Array.isArray(imageSizes)) {\n        throw new Error(\n          `Specified images.imageSizes should be an Array received ${typeof imageSizes}.\\nSee more info here: https://err.sh/next.js/invalid-images-config`\n        )\n      }\n\n      if (imageSizes.length > 25) {\n        throw new Error(\n          `Specified images.imageSizes exceeds length of 25, received length (${imageSizes.length}), please reduce the length of the array to continue.\\nSee more info here: https://err.sh/next.js/invalid-images-config`\n        )\n      }\n\n      const invalid = imageSizes.filter((d: unknown) => {\n        return typeof d !== 'number' || d < 1 || d > 10000\n      })\n\n      if (invalid.length > 0) {\n        throw new Error(\n          `Specified images.imageSizes should be an Array of numbers that are between 1 and 10000, received invalid values (${invalid.join(\n            ', '\n          )}).\\nSee more info here: https://err.sh/next.js/invalid-images-config`\n        )\n      }\n    }\n\n    if (!images.loader) {\n      images.loader = 'default'\n    }\n\n    if (!VALID_LOADERS.includes(images.loader)) {\n      throw new Error(\n        `Specified images.loader should be one of (${VALID_LOADERS.join(\n          ', '\n        )}), received invalid value (${\n          images.loader\n        }).\\nSee more info here: https://err.sh/next.js/invalid-images-config`\n      )\n    }\n\n    // Append trailing slash for non-default loaders\n    if (images.path) {\n      if (\n        images.loader !== 'default' &&\n        images.path[images.path.length - 1] !== '/'\n      ) {\n        images.path += '/'\n      }\n    }\n\n    if (images.path === imageConfigDefault.path && result.basePath) {\n      images.path = `${result.basePath}${images.path}`\n    }\n  }\n\n  if (result.i18n) {\n    const { i18n } = result\n    const i18nType = typeof i18n\n\n    if (i18nType !== 'object') {\n      throw new Error(\n        `Specified i18n should be an object received ${i18nType}.\\nSee more info here: https://err.sh/next.js/invalid-i18n-config`\n      )\n    }\n\n    if (!Array.isArray(i18n.locales)) {\n      throw new Error(\n        `Specified i18n.locales should be an Array received ${typeof i18n.locales}.\\nSee more info here: https://err.sh/next.js/invalid-i18n-config`\n      )\n    }\n\n    const defaultLocaleType = typeof i18n.defaultLocale\n\n    if (!i18n.defaultLocale || defaultLocaleType !== 'string') {\n      throw new Error(\n        `Specified i18n.defaultLocale should be a string.\\nSee more info here: https://err.sh/next.js/invalid-i18n-config`\n      )\n    }\n\n    if (typeof i18n.domains !== 'undefined' && !Array.isArray(i18n.domains)) {\n      throw new Error(\n        `Specified i18n.domains must be an array of domain objects e.g. [ { domain: 'example.fr', defaultLocale: 'fr', locales: ['fr'] } ] received ${typeof i18n.domains}.\\nSee more info here: https://err.sh/next.js/invalid-i18n-config`\n      )\n    }\n\n    if (i18n.domains) {\n      const invalidDomainItems = i18n.domains.filter((item) => {\n        if (!item || typeof item !== 'object') return true\n        if (!item.defaultLocale) return true\n        if (!item.domain || typeof item.domain !== 'string') return true\n\n        let hasInvalidLocale = false\n\n        if (Array.isArray(item.locales)) {\n          for (const locale of item.locales) {\n            if (typeof locale !== 'string') hasInvalidLocale = true\n\n            for (const domainItem of i18n.domains || []) {\n              if (domainItem === item) continue\n              if (domainItem.locales && domainItem.locales.includes(locale)) {\n                console.warn(\n                  `Both ${item.domain} and ${domainItem.domain} configured the locale (${locale}) but only one can. Remove it from one i18n.domains config to continue`\n                )\n                hasInvalidLocale = true\n                break\n              }\n            }\n          }\n        }\n\n        return hasInvalidLocale\n      })\n\n      if (invalidDomainItems.length > 0) {\n        throw new Error(\n          `Invalid i18n.domains values:\\n${invalidDomainItems\n            .map((item: any) => JSON.stringify(item))\n            .join(\n              '\\n'\n            )}\\n\\ndomains value must follow format { domain: 'example.fr', defaultLocale: 'fr', locales: ['fr'] }.\\nSee more info here: https://err.sh/next.js/invalid-i18n-config`\n        )\n      }\n    }\n\n    if (!Array.isArray(i18n.locales)) {\n      throw new Error(\n        `Specified i18n.locales must be an array of locale strings e.g. [\"en-US\", \"nl-NL\"] received ${typeof i18n.locales}.\\nSee more info here: https://err.sh/next.js/invalid-i18n-config`\n      )\n    }\n\n    const invalidLocales = i18n.locales.filter(\n      (locale: any) => typeof locale !== 'string'\n    )\n\n    if (invalidLocales.length > 0) {\n      throw new Error(\n        `Specified i18n.locales contains invalid values (${invalidLocales\n          .map(String)\n          .join(\n            ', '\n          )}), locales must be valid locale tags provided as strings e.g. \"en-US\".\\n` +\n          `See here for list of valid language sub-tags: http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry`\n      )\n    }\n\n    if (!i18n.locales.includes(i18n.defaultLocale)) {\n      throw new Error(\n        `Specified i18n.defaultLocale should be included in i18n.locales.\\nSee more info here: https://err.sh/next.js/invalid-i18n-config`\n      )\n    }\n\n    // make sure default Locale is at the front\n    i18n.locales = [\n      i18n.defaultLocale,\n      ...i18n.locales.filter((locale) => locale !== i18n.defaultLocale),\n    ]\n\n    const localeDetectionType = typeof i18n.localeDetection\n\n    if (\n      localeDetectionType !== 'boolean' &&\n      localeDetectionType !== 'undefined'\n    ) {\n      throw new Error(\n        `Specified i18n.localeDetection should be undefined or a boolean received ${localeDetectionType}.\\nSee more info here: https://err.sh/next.js/invalid-i18n-config`\n      )\n    }\n  }\n\n  return result\n}\n\nexport function normalizeConfig(phase: string, config: any) {\n  if (typeof config === 'function') {\n    config = config(phase, { defaultConfig })\n\n    if (typeof config.then === 'function') {\n      throw new Error(\n        '> Promise returned in next config. https://err.sh/vercel/next.js/promise-in-next-config'\n      )\n    }\n  }\n  return config\n}\n\nexport default function loadConfig(\n  phase: string,\n  dir: string,\n  customConfig?: object | null\n) {\n  if (customConfig) {\n    return assignDefaults({ configOrigin: 'server', ...customConfig })\n  }\n  const path = findUp.sync(CONFIG_FILE, {\n    cwd: dir,\n  })\n\n  // If config file was found\n  if (path?.length) {\n    const userConfigModule = require(path)\n    const userConfig = normalizeConfig(\n      phase,\n      userConfigModule.default || userConfigModule\n    )\n\n    if (Object.keys(userConfig).length === 0) {\n      Log.warn(\n        'Detected next.config.js, no exported configuration found. https://err.sh/vercel/next.js/empty-configuration'\n      )\n    }\n\n    if (userConfig.target && !targets.includes(userConfig.target)) {\n      throw new Error(\n        `Specified target is invalid. Provided: \"${\n          userConfig.target\n        }\" should be one of ${targets.join(', ')}`\n      )\n    }\n\n    if (userConfig.amp?.canonicalBase) {\n      const { canonicalBase } = userConfig.amp || ({} as any)\n      userConfig.amp = userConfig.amp || {}\n      userConfig.amp.canonicalBase =\n        (canonicalBase.endsWith('/')\n          ? canonicalBase.slice(0, -1)\n          : canonicalBase) || ''\n    }\n\n    if (\n      userConfig.experimental?.reactMode &&\n      !reactModes.includes(userConfig.experimental.reactMode)\n    ) {\n      throw new Error(\n        `Specified React Mode is invalid. Provided: ${\n          userConfig.experimental.reactMode\n        } should be one of ${reactModes.join(', ')}`\n      )\n    }\n\n    return assignDefaults({\n      configOrigin: CONFIG_FILE,\n      configFile: path,\n      ...userConfig,\n    })\n  } else {\n    const configBaseName = basename(CONFIG_FILE, extname(CONFIG_FILE))\n    const nonJsPath = findUp.sync(\n      [\n        `${configBaseName}.jsx`,\n        `${configBaseName}.ts`,\n        `${configBaseName}.tsx`,\n        `${configBaseName}.json`,\n      ],\n      { cwd: dir }\n    )\n    if (nonJsPath?.length) {\n      throw new Error(\n        `Configuring Next.js via '${basename(\n          nonJsPath\n        )}' is not supported. Please replace the file with 'next.config.js'.`\n      )\n    }\n  }\n\n  return defaultConfig\n}\n\nexport function isTargetLikeServerless(target: string) {\n  const isServerless = target === 'serverless'\n  const isServerlessTrace = target === 'experimental-serverless-trace'\n  return isServerless || isServerlessTrace\n}\n"]},"metadata":{},"sourceType":"script"}