{"ast":null,"code":"\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NOOP_SPAN = exports.NoopSpan = void 0;\n\nvar spancontext_utils_1 = require(\"./spancontext-utils\");\n/**\n * The NoopSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\n\n\nvar NoopSpan =\n/** @class */\nfunction () {\n  function NoopSpan(_spanContext) {\n    if (_spanContext === void 0) {\n      _spanContext = spancontext_utils_1.INVALID_SPAN_CONTEXT;\n    }\n\n    this._spanContext = _spanContext;\n  } // Returns a SpanContext.\n\n\n  NoopSpan.prototype.context = function () {\n    return this._spanContext;\n  }; // By default does nothing\n\n\n  NoopSpan.prototype.setAttribute = function (_key, _value) {\n    return this;\n  }; // By default does nothing\n\n\n  NoopSpan.prototype.setAttributes = function (_attributes) {\n    return this;\n  }; // By default does nothing\n\n\n  NoopSpan.prototype.addEvent = function (_name, _attributes) {\n    return this;\n  }; // By default does nothing\n\n\n  NoopSpan.prototype.setStatus = function (_status) {\n    return this;\n  }; // By default does nothing\n\n\n  NoopSpan.prototype.updateName = function (_name) {\n    return this;\n  }; // By default does nothing\n\n\n  NoopSpan.prototype.end = function (_endTime) {}; // isRecording always returns false for noopSpan.\n\n\n  NoopSpan.prototype.isRecording = function () {\n    return false;\n  }; // By default does nothing\n\n\n  NoopSpan.prototype.recordException = function (_exception, _time) {};\n\n  return NoopSpan;\n}();\n\nexports.NoopSpan = NoopSpan;\nexports.NOOP_SPAN = new NoopSpan();","map":{"version":3,"sources":["../../../src/trace/NoopSpan.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;;AAQH,IAAA,mBAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;AAEA;;;;AAIG;;;AACH,IAAA,QAAA;AAAA;AAAA,YAAA;AACE,WAAA,QAAA,CACmB,YADnB,EACmE;AAAhD,QAAA,YAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,YAAA,GAA4B,mBAAA,CAAA,oBAA5B;AAAgD;;AAAhD,SAAA,YAAA,GAAA,YAAA;AACf,GAHN,CAKE;;;AACA,EAAA,QAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,WAAO,KAAK,YAAZ;AACD,GAFD,CANF,CAUE;;;AACA,EAAA,QAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,IAAb,EAA2B,MAA3B,EAA0C;AACxC,WAAO,IAAP;AACD,GAFD,CAXF,CAeE;;;AACA,EAAA,QAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAc,WAAd,EAAqC;AACnC,WAAO,IAAP;AACD,GAFD,CAhBF,CAoBE;;;AACA,EAAA,QAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,KAAT,EAAwB,WAAxB,EAAgD;AAC9C,WAAO,IAAP;AACD,GAFD,CArBF,CAyBE;;;AACA,EAAA,QAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,OAAV,EAAyB;AACvB,WAAO,IAAP;AACD,GAFD,CA1BF,CA8BE;;;AACA,EAAA,QAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,KAAX,EAAwB;AACtB,WAAO,IAAP;AACD,GAFD,CA/BF,CAmCE;;;AACA,EAAA,QAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,QAAJ,EAAwB,CAAU,CAAlC,CApCF,CAsCE;;;AACA,EAAA,QAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACE,WAAO,KAAP;AACD,GAFD,CAvCF,CA2CE;;;AACA,EAAA,QAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAgB,UAAhB,EAAuC,KAAvC,EAAwD,CAAU,CAAlE;;AACF,SAAA,QAAA;AAAC,CA7CD,EAAA;;AAAa,OAAA,CAAA,QAAA,GAAA,QAAA;AA+CA,OAAA,CAAA,SAAA,GAAY,IAAI,QAAJ,EAAZ","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NOOP_SPAN = exports.NoopSpan = void 0;\nvar spancontext_utils_1 = require(\"./spancontext-utils\");\n/**\n * The NoopSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nvar NoopSpan = /** @class */ (function () {\n    function NoopSpan(_spanContext) {\n        if (_spanContext === void 0) { _spanContext = spancontext_utils_1.INVALID_SPAN_CONTEXT; }\n        this._spanContext = _spanContext;\n    }\n    // Returns a SpanContext.\n    NoopSpan.prototype.context = function () {\n        return this._spanContext;\n    };\n    // By default does nothing\n    NoopSpan.prototype.setAttribute = function (_key, _value) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.setAttributes = function (_attributes) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.addEvent = function (_name, _attributes) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.setStatus = function (_status) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.updateName = function (_name) {\n        return this;\n    };\n    // By default does nothing\n    NoopSpan.prototype.end = function (_endTime) { };\n    // isRecording always returns false for noopSpan.\n    NoopSpan.prototype.isRecording = function () {\n        return false;\n    };\n    // By default does nothing\n    NoopSpan.prototype.recordException = function (_exception, _time) { };\n    return NoopSpan;\n}());\nexports.NoopSpan = NoopSpan;\nexports.NOOP_SPAN = new NoopSpan();\n//# sourceMappingURL=NoopSpan.js.map"]},"metadata":{},"sourceType":"script"}