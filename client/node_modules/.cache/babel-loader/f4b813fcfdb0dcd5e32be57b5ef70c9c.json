{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.getCssModuleLocalIdent = getCssModuleLocalIdent;\n\nvar _loaderUtils = _interopRequireDefault(require(\"loader-utils\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst regexLikeIndexModule = /(?<!pages[\\\\/])index\\.module\\.(scss|sass|css)$/;\n\nfunction getCssModuleLocalIdent(context, _, exportName, options) {\n  const relativePath = _path.default.relative(context.rootContext, context.resourcePath).replace(/\\\\+/g, '/'); // Generate a more meaningful name (parent folder) when the user names the\n  // file `index.module.css`.\n\n\n  const fileNameOrFolder = regexLikeIndexModule.test(relativePath) ? '[folder]' : '[name]'; // Generate a hash to make the class name unique.\n\n  const hash = _loaderUtils.default.getHashDigest(Buffer.from(`filePath:${relativePath}#className:${exportName}`), 'md5', 'base64', 5); // Have webpack interpolate the `[folder]` or `[name]` to its real value.\n\n\n  return _loaderUtils.default.interpolateName(context, fileNameOrFolder + '_' + exportName + '__' + hash, options).replace( // Webpack name interpolation returns `about.module_root__2oFM9` for\n  // `.root {}` inside a file named `about.module.css`. Let's simplify\n  // this.\n  /\\.module_/, '_') // Replace invalid symbols with underscores instead of escaping\n  // https://mathiasbynens.be/notes/css-escapes#identifiers-strings\n  .replace(/[^a-zA-Z0-9-_]/g, '_') // \"they cannot start with a digit, two hyphens, or a hyphen followed by a digit [sic]\"\n  // https://www.w3.org/TR/CSS21/syndata.html#characters\n  .replace(/^(\\d|--|-\\d)/, '__$1');\n}","map":{"version":3,"sources":["../../../../../../../build/webpack/config/blocks/css/loaders/getCssModuleLocalIdent.ts"],"names":["regexLikeIndexModule","relativePath","path","context","fileNameOrFolder","hash","loaderUtils","Buffer","exportName"],"mappings":";;;;;AAAA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;;;;;AAGA;;AAAA,MAAMA,oBAAoB,GAA1B,gDAAA;;AAEO,SAAA,sBAAA,CAAA,OAAA,EAAA,CAAA,EAAA,UAAA,EAAA,OAAA,EAKL;AACA,QAAMC,YAAY,GAAGC,KAAAA,CAAAA,OAAAA,CAAAA,QAAAA,CACTC,OAAO,CADED,WAAAA,EACYC,OAAO,CADnBD,YAAAA,EAAAA,OAAAA,CAAAA,MAAAA,EAArB,GAAqBA,CAArB,CADA,CAKA;AACA;;;AACA,QAAME,gBAAgB,GAAGJ,oBAAoB,CAApBA,IAAAA,CAAAA,YAAAA,IAAAA,UAAAA,GAAzB,QAAA,CAPA,CAWA;;AACA,QAAMK,IAAI,GAAGC,YAAAA,CAAAA,OAAAA,CAAAA,aAAAA,CACXC,MAAM,CAANA,IAAAA,CAAa,YAAWN,YAAa,cAAaO,UADvCF,EACXC,CADWD,EAAAA,KAAAA,EAAAA,QAAAA,EAAb,CAAaA,CAAb,CAZA,CAmBA;;;AACA,SACE,YAAA,CAAA,OAAA,CAAA,eAAA,CAAA,OAAA,EAGIF,gBAAgB,GAAhBA,GAAAA,GAAAA,UAAAA,GAAAA,IAAAA,GAHJ,IAAA,EAAA,OAAA,EAAA,OAAA,EAOI;AACA;AACA;AATJ,aAAA,EAAA,GAAA,EAaE;AACA;AAdF,GAAA,OAAA,CAAA,iBAAA,EAAA,GAAA,EAgBE;AACA;AAjBF,GAAA,OAAA,CAAA,cAAA,EADF,MACE,CADF;AAqBD","sourcesContent":["import loaderUtils from 'loader-utils'\nimport path from 'path'\nimport webpack from 'webpack'\n\nconst regexLikeIndexModule = /(?<!pages[\\\\/])index\\.module\\.(scss|sass|css)$/\n\nexport function getCssModuleLocalIdent(\n  context: webpack.loader.LoaderContext,\n  _: any,\n  exportName: string,\n  options: object\n) {\n  const relativePath = path\n    .relative(context.rootContext, context.resourcePath)\n    .replace(/\\\\+/g, '/')\n\n  // Generate a more meaningful name (parent folder) when the user names the\n  // file `index.module.css`.\n  const fileNameOrFolder = regexLikeIndexModule.test(relativePath)\n    ? '[folder]'\n    : '[name]'\n\n  // Generate a hash to make the class name unique.\n  const hash = loaderUtils.getHashDigest(\n    Buffer.from(`filePath:${relativePath}#className:${exportName}`),\n    'md5',\n    'base64',\n    5\n  )\n\n  // Have webpack interpolate the `[folder]` or `[name]` to its real value.\n  return (\n    loaderUtils\n      .interpolateName(\n        context,\n        fileNameOrFolder + '_' + exportName + '__' + hash,\n        options\n      )\n      .replace(\n        // Webpack name interpolation returns `about.module_root__2oFM9` for\n        // `.root {}` inside a file named `about.module.css`. Let's simplify\n        // this.\n        /\\.module_/,\n        '_'\n      )\n      // Replace invalid symbols with underscores instead of escaping\n      // https://mathiasbynens.be/notes/css-escapes#identifiers-strings\n      .replace(/[^a-zA-Z0-9-_]/g, '_')\n      // \"they cannot start with a digit, two hyphens, or a hyphen followed by a digit [sic]\"\n      // https://www.w3.org/TR/CSS21/syndata.html#characters\n      .replace(/^(\\d|--|-\\d)/, '__$1')\n  )\n}\n"]},"metadata":{},"sourceType":"script"}