{"ast":null,"code":"\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoopLogger = void 0;\n/** No-op implementation of Logger */\n\nvar NoopLogger =\n/** @class */\nfunction () {\n  function NoopLogger() {} // By default does nothing\n\n\n  NoopLogger.prototype.debug = function (_message) {\n    var _args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      _args[_i - 1] = arguments[_i];\n    }\n  }; // By default does nothing\n\n\n  NoopLogger.prototype.error = function (_message) {\n    var _args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      _args[_i - 1] = arguments[_i];\n    }\n  }; // By default does nothing\n\n\n  NoopLogger.prototype.warn = function (_message) {\n    var _args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      _args[_i - 1] = arguments[_i];\n    }\n  }; // By default does nothing\n\n\n  NoopLogger.prototype.info = function (_message) {\n    var _args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      _args[_i - 1] = arguments[_i];\n    }\n  };\n\n  return NoopLogger;\n}();\n\nexports.NoopLogger = NoopLogger;","map":{"version":3,"sources":["../../../src/trace/NoopLogger.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;AAcG;;;;;;AAIH;;AACA,IAAA,UAAA;AAAA;AAAA,YAAA;AAAA,WAAA,UAAA,GAAA,CAYC,CAZD,CACE;;;AACA,EAAA,UAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,QAAN,EAAsB;AAAE,QAAA,KAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAmB;AAAnB,MAAA,KAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;AAAuB,GAA/C,CAFF,CAIE;;;AACA,EAAA,UAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,QAAN,EAAsB;AAAE,QAAA,KAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAmB;AAAnB,MAAA,KAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;AAAuB,GAA/C,CALF,CAOE;;;AACA,EAAA,UAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,QAAL,EAAqB;AAAE,QAAA,KAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAmB;AAAnB,MAAA,KAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;AAAuB,GAA9C,CARF,CAUE;;;AACA,EAAA,UAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,QAAL,EAAqB;AAAE,QAAA,KAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAmB;AAAnB,MAAA,KAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;AAAuB,GAA9C;;AACF,SAAA,UAAA;AAAC,CAZD,EAAA;;AAAa,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoopLogger = void 0;\n/** No-op implementation of Logger */\nvar NoopLogger = /** @class */ (function () {\n    function NoopLogger() {\n    }\n    // By default does nothing\n    NoopLogger.prototype.debug = function (_message) {\n        var _args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            _args[_i - 1] = arguments[_i];\n        }\n    };\n    // By default does nothing\n    NoopLogger.prototype.error = function (_message) {\n        var _args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            _args[_i - 1] = arguments[_i];\n        }\n    };\n    // By default does nothing\n    NoopLogger.prototype.warn = function (_message) {\n        var _args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            _args[_i - 1] = arguments[_i];\n        }\n    };\n    // By default does nothing\n    NoopLogger.prototype.info = function (_message) {\n        var _args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            _args[_i - 1] = arguments[_i];\n        }\n    };\n    return NoopLogger;\n}());\nexports.NoopLogger = NoopLogger;\n//# sourceMappingURL=NoopLogger.js.map"]},"metadata":{},"sourceType":"script"}