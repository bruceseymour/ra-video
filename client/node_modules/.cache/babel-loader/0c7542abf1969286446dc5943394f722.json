{"ast":null,"code":"/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst {\n  insertText,\n  hasAttribute,\n  firstChildByTag\n} = require('../NodeUtils');\n/**\n * AmpBoilerplateTransformer - This DOM transformer adds\n * https://cdn.ampproject.org/v0.css if server-side-rendering is applied\n * (known by the presence of <style amp-runtime> tag). AMP runtime css (v0.css)\n * will always be inlined as it'll get automatically updated to the latest version\n * once the AMP runtime has loaded.\n */\n\n\nclass AmpBoilerplateTransformer {\n  constructor(config) {\n    this.fetch_ = config.fetch;\n    this.runtimeVersion_ = config.runtimeVersion;\n    this.log_ = config.log.tag('AmpBoilerplateTransformer');\n  }\n\n  transform(root, params) {\n    const html = firstChildByTag(root, 'html');\n    const head = firstChildByTag(html, 'head');\n\n    if (!head) {\n      return; // invalid doc\n    } // amp-runtime is added by server-side-rendering\n\n\n    const ampRuntimeStylesNode = this._findAmpRuntimeStyle(head);\n\n    if (!ampRuntimeStylesNode) {\n      return; // keep existing boilerplate\n    } // inline CSS\n\n\n    let {\n      ampRuntimeVersion,\n      ampRuntimeStyles\n    } = params;\n\n    if (!ampRuntimeVersion || !ampRuntimeStyles) {\n      // these should be set by DomTransformer\n      this.log_.error('Missing parameters both ampRuntimeVersion and ampRuntimeStyles need to be present');\n      return;\n    }\n\n    ampRuntimeStylesNode.attribs['i-amphtml-version'] = ampRuntimeVersion;\n    insertText(ampRuntimeStylesNode, ampRuntimeStyles);\n  }\n\n  _findAmpRuntimeStyle(head) {\n    let node = head.firstChild;\n\n    while (node) {\n      if (hasAttribute(node, 'amp-runtime')) {\n        return node;\n      }\n\n      node = node.nextSibling;\n    }\n\n    return null;\n  }\n\n}\n\nmodule.exports = AmpBoilerplateTransformer;","map":{"version":3,"sources":["/Users/bruceseymour/ra-video/client/node_modules/@ampproject/toolbox-optimizer/lib/transformers/AmpBoilerplateTransformer.js"],"names":["insertText","hasAttribute","firstChildByTag","require","AmpBoilerplateTransformer","constructor","config","fetch_","fetch","runtimeVersion_","runtimeVersion","log_","log","tag","transform","root","params","html","head","ampRuntimeStylesNode","_findAmpRuntimeStyle","ampRuntimeVersion","ampRuntimeStyles","error","attribs","node","firstChild","nextSibling","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM;AAACA,EAAAA,UAAD;AAAaC,EAAAA,YAAb;AAA2BC,EAAAA;AAA3B,IAA8CC,OAAO,CAAC,cAAD,CAA3D;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,yBAAN,CAAgC;AAC9BC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,SAAKC,MAAL,GAAcD,MAAM,CAACE,KAArB;AACA,SAAKC,eAAL,GAAuBH,MAAM,CAACI,cAA9B;AACA,SAAKC,IAAL,GAAYL,MAAM,CAACM,GAAP,CAAWC,GAAX,CAAe,2BAAf,CAAZ;AACD;;AAEDC,EAAAA,SAAS,CAACC,IAAD,EAAOC,MAAP,EAAe;AACtB,UAAMC,IAAI,GAAGf,eAAe,CAACa,IAAD,EAAO,MAAP,CAA5B;AACA,UAAMG,IAAI,GAAGhB,eAAe,CAACe,IAAD,EAAO,MAAP,CAA5B;;AACA,QAAI,CAACC,IAAL,EAAW;AACT,aADS,CACD;AACT,KALqB,CAMtB;;;AACA,UAAMC,oBAAoB,GAAG,KAAKC,oBAAL,CAA0BF,IAA1B,CAA7B;;AACA,QAAI,CAACC,oBAAL,EAA2B;AACzB,aADyB,CACjB;AACT,KAVqB,CAWtB;;;AACA,QAAI;AAACE,MAAAA,iBAAD;AAAoBC,MAAAA;AAApB,QAAwCN,MAA5C;;AACA,QAAI,CAACK,iBAAD,IAAsB,CAACC,gBAA3B,EAA6C;AAC3C;AACA,WAAKX,IAAL,CAAUY,KAAV,CACE,mFADF;AAGA;AACD;;AACDJ,IAAAA,oBAAoB,CAACK,OAArB,CAA6B,mBAA7B,IAAoDH,iBAApD;AACArB,IAAAA,UAAU,CAACmB,oBAAD,EAAuBG,gBAAvB,CAAV;AACD;;AAEDF,EAAAA,oBAAoB,CAACF,IAAD,EAAO;AACzB,QAAIO,IAAI,GAAGP,IAAI,CAACQ,UAAhB;;AACA,WAAOD,IAAP,EAAa;AACX,UAAIxB,YAAY,CAACwB,IAAD,EAAO,aAAP,CAAhB,EAAuC;AACrC,eAAOA,IAAP;AACD;;AACDA,MAAAA,IAAI,GAAGA,IAAI,CAACE,WAAZ;AACD;;AACD,WAAO,IAAP;AACD;;AAxC6B;;AA2ChCC,MAAM,CAACC,OAAP,GAAiBzB,yBAAjB","sourcesContent":["/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nconst {insertText, hasAttribute, firstChildByTag} = require('../NodeUtils');\n\n/**\n * AmpBoilerplateTransformer - This DOM transformer adds\n * https://cdn.ampproject.org/v0.css if server-side-rendering is applied\n * (known by the presence of <style amp-runtime> tag). AMP runtime css (v0.css)\n * will always be inlined as it'll get automatically updated to the latest version\n * once the AMP runtime has loaded.\n */\nclass AmpBoilerplateTransformer {\n  constructor(config) {\n    this.fetch_ = config.fetch;\n    this.runtimeVersion_ = config.runtimeVersion;\n    this.log_ = config.log.tag('AmpBoilerplateTransformer');\n  }\n\n  transform(root, params) {\n    const html = firstChildByTag(root, 'html');\n    const head = firstChildByTag(html, 'head');\n    if (!head) {\n      return; // invalid doc\n    }\n    // amp-runtime is added by server-side-rendering\n    const ampRuntimeStylesNode = this._findAmpRuntimeStyle(head);\n    if (!ampRuntimeStylesNode) {\n      return; // keep existing boilerplate\n    }\n    // inline CSS\n    let {ampRuntimeVersion, ampRuntimeStyles} = params;\n    if (!ampRuntimeVersion || !ampRuntimeStyles) {\n      // these should be set by DomTransformer\n      this.log_.error(\n        'Missing parameters both ampRuntimeVersion and ampRuntimeStyles need to be present'\n      );\n      return;\n    }\n    ampRuntimeStylesNode.attribs['i-amphtml-version'] = ampRuntimeVersion;\n    insertText(ampRuntimeStylesNode, ampRuntimeStyles);\n  }\n\n  _findAmpRuntimeStyle(head) {\n    let node = head.firstChild;\n    while (node) {\n      if (hasAttribute(node, 'amp-runtime')) {\n        return node;\n      }\n      node = node.nextSibling;\n    }\n    return null;\n  }\n}\n\nmodule.exports = AmpBoilerplateTransformer;\n"]},"metadata":{},"sourceType":"script"}