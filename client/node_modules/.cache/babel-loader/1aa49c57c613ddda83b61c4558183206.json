{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.MinificationConformanceCheck = void 0;\n\nvar _TestInterface = require(\"../TestInterface\");\n\nvar _constants = require(\"../constants\");\n\nconst EARLY_EXIT_RESULT = {\n  result: _TestInterface.IConformanceTestStatus.SUCCESS\n};\n\nclass MinificationConformanceCheck {\n  buildStared(options) {\n    if (options.output.path.endsWith('/server')) {\n      return EARLY_EXIT_RESULT;\n    } // TODO(prateekbh@): Implement warning for using Terser maybe?\n\n\n    const {\n      optimization\n    } = options;\n\n    if (optimization && (optimization.minimize !== true || optimization.minimizer && optimization.minimizer.length === 0)) {\n      return {\n        result: _TestInterface.IConformanceTestStatus.FAILED,\n        errors: [{\n          message: `${_constants.CONFORMANCE_ERROR_PREFIX}: Minification is disabled for this build.\\nDisabling minification can result in serious performance degradation.`\n        }]\n      };\n    } else {\n      return EARLY_EXIT_RESULT;\n    }\n  }\n\n}\n\nexports.MinificationConformanceCheck = MinificationConformanceCheck;","map":{"version":3,"sources":["../../../../../../build/webpack/plugins/webpack-conformance-plugin/checks/minification-conformance-check.ts"],"names":["EARLY_EXIT_RESULT","result","IConformanceTestStatus","MinificationConformanceCheck","buildStared","options","optimization","errors","message","CONFORMANCE_ERROR_PREFIX"],"mappings":";;;;;AAAA,IAAA,cAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AAKA,IAAA,UAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,MAAMA,iBAAyC,GAAG;AAChDC,EAAAA,MAAM,EAAEC,cAAAA,CAAAA,sBAAAA,CADV;AAAkD,CAAlD;;AAIO,MAAMC,4BAAN,CAAsE;AACpEC,EAAAA,WAAP,CAAA,OAAA,EAAyD;AACvD,QAAIC,OAAO,CAAPA,MAAAA,CAAAA,IAAAA,CAAAA,QAAAA,CAAJ,SAAIA,CAAJ,EAA6C;AAC3C,aAAA,iBAAA;AAEF,KAJuD,CAIvD;;;AACA,UAAM;AAAA,MAAA;AAAA,QAAN,OAAA;;AACA,QACEC,YAAY,KACXA,YAAY,CAAZA,QAAAA,KAAAA,IAAAA,IACEA,YAAY,CAAZA,SAAAA,IAA0BA,YAAY,CAAZA,SAAAA,CAAAA,MAAAA,KAH/B,CACc,CADd,EAIE;AACA,aAAO;AACLL,QAAAA,MAAM,EAAEC,cAAAA,CAAAA,sBAAAA,CADH,MAAA;AAELK,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,OAAO,EAAG,GAAEC,UAAAA,CAAAA,wBAJlB;AAGI,SADM;AAFH,OAAP;AALF,KAAA,MAaO;AACL,aAAA,iBAAA;AAEH;AAvB0E;;AAAA","sourcesContent":["import {\n  IWebpackConformanceTest,\n  IConformanceTestResult,\n  IConformanceTestStatus,\n} from '../TestInterface'\nimport { CONFORMANCE_ERROR_PREFIX } from '../constants'\nconst EARLY_EXIT_RESULT: IConformanceTestResult = {\n  result: IConformanceTestStatus.SUCCESS,\n}\n\nexport class MinificationConformanceCheck implements IWebpackConformanceTest {\n  public buildStared(options: any): IConformanceTestResult {\n    if (options.output.path.endsWith('/server')) {\n      return EARLY_EXIT_RESULT\n    }\n    // TODO(prateekbh@): Implement warning for using Terser maybe?\n    const { optimization } = options\n    if (\n      optimization &&\n      (optimization.minimize !== true ||\n        (optimization.minimizer && optimization.minimizer.length === 0))\n    ) {\n      return {\n        result: IConformanceTestStatus.FAILED,\n        errors: [\n          {\n            message: `${CONFORMANCE_ERROR_PREFIX}: Minification is disabled for this build.\\nDisabling minification can result in serious performance degradation.`,\n          },\n        ],\n      }\n    } else {\n      return EARLY_EXIT_RESULT\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}