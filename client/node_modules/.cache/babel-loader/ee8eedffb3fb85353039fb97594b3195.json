{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = optimize;\n\nasync function optimize(html, config) {\n  let AmpOptimizer;\n\n  try {\n    AmpOptimizer = require('@ampproject/toolbox-optimizer');\n  } catch (_) {\n    return html;\n  }\n\n  const optimizer = AmpOptimizer.create(config);\n  return optimizer.transformHtml(html, config);\n}","map":{"version":3,"sources":["../../../next-server/server/optimize-amp.ts"],"names":["AmpOptimizer","require","optimizer"],"mappings":";;;;;AAAe,eAAA,QAAA,CAAA,IAAA,EAAA,MAAA,EAGI;AACjB,MAAA,YAAA;;AACA,MAAI;AACFA,IAAAA,YAAY,GAAGC,OAAO,CAAtBD,+BAAsB,CAAtBA;AACA,GAFF,CAEE,OAAA,CAAA,EAAU;AACV,WAAA,IAAA;AAEF;;AAAA,QAAME,SAAS,GAAGF,YAAY,CAAZA,MAAAA,CAAlB,MAAkBA,CAAlB;AACA,SAAOE,SAAS,CAATA,aAAAA,CAAAA,IAAAA,EAAP,MAAOA,CAAP;AACD","sourcesContent":["export default async function optimize(\n  html: string,\n  config: any\n): Promise<string> {\n  let AmpOptimizer\n  try {\n    AmpOptimizer = require('@ampproject/toolbox-optimizer')\n  } catch (_) {\n    return html\n  }\n  const optimizer = AmpOptimizer.create(config)\n  return optimizer.transformHtml(html, config)\n}\n"]},"metadata":{},"sourceType":"script"}