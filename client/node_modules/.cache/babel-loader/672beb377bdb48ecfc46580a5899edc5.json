{"ast":null,"code":"/**\n * Cache to store generated match functions\n * @type {Object}\n */\nlet pMatchFunctionCache = {};\n\nfunction compare_tagname(tag1, tag2) {\n  if (!tag1) {\n    return !tag2;\n  }\n\n  if (!tag2) {\n    return !tag1;\n  }\n\n  return tag1.toLowerCase() === tag2.toLowerCase();\n}\n/**\n * Function cache\n */\n\n\nconst functionCache = {\n  f145(el, tagName, classes) {\n    'use strict';\n\n    tagName = tagName || '';\n    classes = classes || [];\n\n    if (el.id !== tagName.substr(1)) {\n      return false;\n    }\n\n    for (let cls = classes, i = 0; i < cls.length; i++) {\n      if (el.classNames.indexOf(cls[i]) === -1) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  f45(el, tagName, classes) {\n    'use strict';\n\n    tagName = tagName || '';\n    classes = classes || [];\n\n    for (let cls = classes, i = 0; i < cls.length; i++) {\n      if (el.classNames.indexOf(cls[i]) === -1) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  f15(el, tagName) {\n    'use strict';\n\n    tagName = tagName || '';\n\n    if (el.id !== tagName.substr(1)) {\n      return false;\n    }\n\n    return true;\n  },\n\n  f1(el, tagName) {\n    'use strict';\n\n    tagName = tagName || '';\n\n    if (el.id !== tagName.substr(1)) {\n      return false;\n    }\n  },\n\n  f5() {\n    'use strict';\n\n    return true;\n  },\n\n  f55(el, tagName, classes, attr_key) {\n    'use strict';\n\n    tagName = tagName || '';\n    classes = classes || [];\n    attr_key = attr_key || '';\n    const attrs = el.attributes;\n    return attrs.hasOwnProperty(attr_key);\n  },\n\n  f245(el, tagName, classes, attr_key, value) {\n    'use strict';\n\n    tagName = tagName || '';\n    classes = classes || [];\n    attr_key = (attr_key || '').toLowerCase();\n    value = value || '';\n    const attrs = el.attributes;\n    return Object.keys(attrs).some(key => {\n      const val = attrs[key];\n      return key.toLowerCase() === attr_key && val === value;\n    }); // for (let cls = classes, i = 0; i < cls.length; i++) {if (el.classNames.indexOf(cls[i]) === -1){ return false;}}\n    // return true;\n  },\n\n  f25(el, tagName, classes, attr_key, value) {\n    'use strict';\n\n    tagName = tagName || '';\n    classes = classes || [];\n    attr_key = (attr_key || '').toLowerCase();\n    value = value || '';\n    const attrs = el.attributes;\n    return Object.keys(attrs).some(key => {\n      const val = attrs[key];\n      return key.toLowerCase() === attr_key && val === value;\n    }); // return true;\n  },\n\n  f2(el, tagName, classes, attr_key, value) {\n    'use strict';\n\n    tagName = tagName || '';\n    classes = classes || [];\n    attr_key = (attr_key || '').toLowerCase();\n    value = value || '';\n    const attrs = el.attributes;\n    return Object.keys(attrs).some(key => {\n      const val = attrs[key];\n      return key.toLowerCase() === attr_key && val === value;\n    });\n  },\n\n  f345(el, tagName, classes) {\n    'use strict';\n\n    tagName = tagName || '';\n    classes = classes || [];\n\n    if (!compare_tagname(el.tagName, tagName)) {\n      return false;\n    }\n\n    for (let cls = classes, i = 0; i < cls.length; i++) {\n      if (el.classNames.indexOf(cls[i]) === -1) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  f35(el, tagName) {\n    'use strict';\n\n    tagName = tagName || '';\n    return compare_tagname(el.tagName, tagName);\n  },\n\n  f3(el, tagName) {\n    'use strict';\n\n    tagName = tagName || ''; // if (el.tagName !== tagName) {\n    // \treturn false;\n    // }\n\n    return compare_tagname(el.tagName, tagName);\n  }\n\n};\n/**\n * Matcher class to make CSS match\n *\n * @class Matcher\n */\n\nexport default class Matcher {\n  /**\n   * Creates an instance of Matcher.\n   * @param {string} selector\n   *\n   * @memberof Matcher\n   */\n  constructor(selector) {\n    this.nextMatch = 0;\n    this.matchers = selector.split(' ').map(matcher => {\n      if (pMatchFunctionCache[matcher]) {\n        return pMatchFunctionCache[matcher];\n      }\n\n      const parts = matcher.split('.');\n      const tagName = parts[0];\n      const classes = parts.slice(1).sort(); // let source = '\"use strict\";';\n\n      let function_name = 'f';\n      let attr_key = '';\n      let value = '';\n\n      if (tagName && tagName !== '*') {\n        if (tagName.startsWith('#')) {\n          // source += 'if (el.id != ' + JSON.stringify(tagName.substr(1)) + ') return false;';// 1\n          function_name += '1';\n        } else {\n          // https://github.com/taoqf/node-html-parser/issues/86\n          // const reg = /\\[\\s*([\\w-]+)(\\s*=\\s*(((?<quote>'|\")\\s*(.*)(\\k<quote>))|(\\S*)))?\\s*\\]/.exec(tagName);\n          // `[a-b]`,`[ a-b ]`,`[a-b=c]`, `[a-b=c'd]`,`[a-b='c\\' d\"e ']`,`[ a-b = 'c\\' d\"e ' ]`,`[a-b=\"c' d\\\"e \" ]`,`[ a-b = \"c' d\\\"e \" ]`\n          const reg = /\\[\\s*([\\w-]+)(\\s*=\\s*(('\\s*(.*)'|\"\\s*(.*)\")|(\\S*)))?\\s*\\]/.exec(tagName);\n\n          if (reg) {\n            attr_key = reg[1];\n            value = reg[5] || reg[6] || reg[7]; // source += `let attrs = el.attributes;for (let key in attrs){const val = attrs[key]; if (key == \"${attr_key}\" && val == \"${value}\"){return true;}} return false;`;// 2\n\n            function_name += '2';\n          } else {\n            // source += 'if (el.tagName != ' + JSON.stringify(tagName) + ') return false;';// 3\n            function_name += '3';\n          }\n        }\n      }\n\n      if (classes.length > 0) {\n        // source += 'for (let cls = ' + JSON.stringify(classes) + ', i = 0; i < cls.length; i++) if (el.classNames.indexOf(cls[i]) === -1) return false;';// 4\n        function_name += '4';\n      } // source += 'return true;';// 5\n\n\n      function_name += '5';\n      const obj = {\n        func: functionCache[function_name],\n        tagName: tagName || '',\n        classes: classes || '',\n        attr_key: attr_key || '',\n        value: value || ''\n      }; // source = source || '';\n\n      return pMatchFunctionCache[matcher] = obj;\n    });\n  }\n  /**\n   * Trying to advance match pointer\n   * @param  {HTMLElement} el element to make the match\n   * @return {bool}           true when pointer advanced.\n   */\n\n\n  advance(el) {\n    if (this.nextMatch < this.matchers.length && this.matchers[this.nextMatch].func(el, this.matchers[this.nextMatch].tagName, this.matchers[this.nextMatch].classes, this.matchers[this.nextMatch].attr_key, this.matchers[this.nextMatch].value)) {\n      this.nextMatch++;\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Rewind the match pointer\n   */\n\n\n  rewind() {\n    this.nextMatch--;\n  }\n  /**\n   * Trying to determine if match made.\n   * @return {bool} true when the match is made\n   */\n\n\n  get matched() {\n    return this.nextMatch === this.matchers.length;\n  }\n  /**\n   * Rest match pointer.\n   * @return {[type]} [description]\n   */\n\n\n  reset() {\n    this.nextMatch = 0;\n  }\n  /**\n   * flush cache to free memory\n   */\n\n\n  flushCache() {\n    pMatchFunctionCache = {};\n  }\n\n}","map":{"version":3,"sources":["/Users/bruceseymour/ra-video/client/node_modules/node-html-parser/dist/esm/matcher.js"],"names":["pMatchFunctionCache","compare_tagname","tag1","tag2","toLowerCase","functionCache","f145","el","tagName","classes","id","substr","cls","i","length","classNames","indexOf","f45","f15","f1","f5","f55","attr_key","attrs","attributes","hasOwnProperty","f245","value","Object","keys","some","key","val","f25","f2","f345","f35","f3","Matcher","constructor","selector","nextMatch","matchers","split","map","matcher","parts","slice","sort","function_name","startsWith","reg","exec","obj","func","advance","rewind","matched","reset","flushCache"],"mappings":"AAAA;AACA;AACA;AACA;AACA,IAAIA,mBAAmB,GAAG,EAA1B;;AACA,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,IAA/B,EAAqC;AACjC,MAAI,CAACD,IAAL,EAAW;AACP,WAAO,CAACC,IAAR;AACH;;AACD,MAAI,CAACA,IAAL,EAAW;AACP,WAAO,CAACD,IAAR;AACH;;AACD,SAAOA,IAAI,CAACE,WAAL,OAAuBD,IAAI,CAACC,WAAL,EAA9B;AACH;AACD;AACA;AACA;;;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,IAAI,CAACC,EAAD,EAAKC,OAAL,EAAcC,OAAd,EAAuB;AACvB;;AACAD,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAC,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AACA,QAAIF,EAAE,CAACG,EAAH,KAAUF,OAAO,CAACG,MAAR,CAAe,CAAf,CAAd,EAAiC;AAC7B,aAAO,KAAP;AACH;;AACD,SAAK,IAAIC,GAAG,GAAGH,OAAV,EAAmBI,CAAC,GAAG,CAA5B,EAA+BA,CAAC,GAAGD,GAAG,CAACE,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAChD,UAAIN,EAAE,CAACQ,UAAH,CAAcC,OAAd,CAAsBJ,GAAG,CAACC,CAAD,CAAzB,MAAkC,CAAC,CAAvC,EAA0C;AACtC,eAAO,KAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH,GAdiB;;AAelBI,EAAAA,GAAG,CAACV,EAAD,EAAKC,OAAL,EAAcC,OAAd,EAAuB;AACtB;;AACAD,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAC,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AACA,SAAK,IAAIG,GAAG,GAAGH,OAAV,EAAmBI,CAAC,GAAG,CAA5B,EAA+BA,CAAC,GAAGD,GAAG,CAACE,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAChD,UAAIN,EAAE,CAACQ,UAAH,CAAcC,OAAd,CAAsBJ,GAAG,CAACC,CAAD,CAAzB,MAAkC,CAAC,CAAvC,EAA0C;AACtC,eAAO,KAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH,GAzBiB;;AA0BlBK,EAAAA,GAAG,CAACX,EAAD,EAAKC,OAAL,EAAc;AACb;;AACAA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AACA,QAAID,EAAE,CAACG,EAAH,KAAUF,OAAO,CAACG,MAAR,CAAe,CAAf,CAAd,EAAiC;AAC7B,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH,GAjCiB;;AAkClBQ,EAAAA,EAAE,CAACZ,EAAD,EAAKC,OAAL,EAAc;AACZ;;AACAA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AACA,QAAID,EAAE,CAACG,EAAH,KAAUF,OAAO,CAACG,MAAR,CAAe,CAAf,CAAd,EAAiC;AAC7B,aAAO,KAAP;AACH;AACJ,GAxCiB;;AAyClBS,EAAAA,EAAE,GAAG;AACD;;AACA,WAAO,IAAP;AACH,GA5CiB;;AA6ClBC,EAAAA,GAAG,CAACd,EAAD,EAAKC,OAAL,EAAcC,OAAd,EAAuBa,QAAvB,EAAiC;AAChC;;AACAd,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAC,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAa,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;AACA,UAAMC,KAAK,GAAGhB,EAAE,CAACiB,UAAjB;AACA,WAAOD,KAAK,CAACE,cAAN,CAAqBH,QAArB,CAAP;AACH,GApDiB;;AAqDlBI,EAAAA,IAAI,CAACnB,EAAD,EAAKC,OAAL,EAAcC,OAAd,EAAuBa,QAAvB,EAAiCK,KAAjC,EAAwC;AACxC;;AACAnB,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAC,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAa,IAAAA,QAAQ,GAAG,CAACA,QAAQ,IAAI,EAAb,EAAiBlB,WAAjB,EAAX;AACAuB,IAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AACA,UAAMJ,KAAK,GAAGhB,EAAE,CAACiB,UAAjB;AACA,WAAOI,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,IAAnB,CAAyBC,GAAD,IAAS;AACpC,YAAMC,GAAG,GAAGT,KAAK,CAACQ,GAAD,CAAjB;AACA,aAAOA,GAAG,CAAC3B,WAAJ,OAAsBkB,QAAtB,IAAkCU,GAAG,KAAKL,KAAjD;AACH,KAHM,CAAP,CAPwC,CAWxC;AACA;AACH,GAlEiB;;AAmElBM,EAAAA,GAAG,CAAC1B,EAAD,EAAKC,OAAL,EAAcC,OAAd,EAAuBa,QAAvB,EAAiCK,KAAjC,EAAwC;AACvC;;AACAnB,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAC,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAa,IAAAA,QAAQ,GAAG,CAACA,QAAQ,IAAI,EAAb,EAAiBlB,WAAjB,EAAX;AACAuB,IAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AACA,UAAMJ,KAAK,GAAGhB,EAAE,CAACiB,UAAjB;AACA,WAAOI,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,IAAnB,CAAyBC,GAAD,IAAS;AACpC,YAAMC,GAAG,GAAGT,KAAK,CAACQ,GAAD,CAAjB;AACA,aAAOA,GAAG,CAAC3B,WAAJ,OAAsBkB,QAAtB,IAAkCU,GAAG,KAAKL,KAAjD;AACH,KAHM,CAAP,CAPuC,CAWvC;AACH,GA/EiB;;AAgFlBO,EAAAA,EAAE,CAAC3B,EAAD,EAAKC,OAAL,EAAcC,OAAd,EAAuBa,QAAvB,EAAiCK,KAAjC,EAAwC;AACtC;;AACAnB,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAC,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAa,IAAAA,QAAQ,GAAG,CAACA,QAAQ,IAAI,EAAb,EAAiBlB,WAAjB,EAAX;AACAuB,IAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;AACA,UAAMJ,KAAK,GAAGhB,EAAE,CAACiB,UAAjB;AACA,WAAOI,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,IAAnB,CAAyBC,GAAD,IAAS;AACpC,YAAMC,GAAG,GAAGT,KAAK,CAACQ,GAAD,CAAjB;AACA,aAAOA,GAAG,CAAC3B,WAAJ,OAAsBkB,QAAtB,IAAkCU,GAAG,KAAKL,KAAjD;AACH,KAHM,CAAP;AAIH,GA3FiB;;AA4FlBQ,EAAAA,IAAI,CAAC5B,EAAD,EAAKC,OAAL,EAAcC,OAAd,EAAuB;AACvB;;AACAD,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACAC,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AACA,QAAI,CAACR,eAAe,CAACM,EAAE,CAACC,OAAJ,EAAaA,OAAb,CAApB,EAA2C;AACvC,aAAO,KAAP;AACH;;AACD,SAAK,IAAII,GAAG,GAAGH,OAAV,EAAmBI,CAAC,GAAG,CAA5B,EAA+BA,CAAC,GAAGD,GAAG,CAACE,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AAChD,UAAIN,EAAE,CAACQ,UAAH,CAAcC,OAAd,CAAsBJ,GAAG,CAACC,CAAD,CAAzB,MAAkC,CAAC,CAAvC,EAA0C;AACtC,eAAO,KAAP;AACH;AACJ;;AACD,WAAO,IAAP;AACH,GAzGiB;;AA0GlBuB,EAAAA,GAAG,CAAC7B,EAAD,EAAKC,OAAL,EAAc;AACb;;AACAA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,WAAOP,eAAe,CAACM,EAAE,CAACC,OAAJ,EAAaA,OAAb,CAAtB;AACH,GA9GiB;;AA+GlB6B,EAAAA,EAAE,CAAC9B,EAAD,EAAKC,OAAL,EAAc;AACZ;;AACAA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB,CAFY,CAGZ;AACA;AACA;;AACA,WAAOP,eAAe,CAACM,EAAE,CAACC,OAAJ,EAAaA,OAAb,CAAtB;AACH;;AAtHiB,CAAtB;AAwHA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAM8B,OAAN,CAAc;AACzB;AACJ;AACA;AACA;AACA;AACA;AACIC,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,SAAKC,SAAL,GAAiB,CAAjB;AACA,SAAKC,QAAL,GAAgBF,QAAQ,CAACG,KAAT,CAAe,GAAf,EAAoBC,GAApB,CAAyBC,OAAD,IAAa;AACjD,UAAI7C,mBAAmB,CAAC6C,OAAD,CAAvB,EAAkC;AAC9B,eAAO7C,mBAAmB,CAAC6C,OAAD,CAA1B;AACH;;AACD,YAAMC,KAAK,GAAGD,OAAO,CAACF,KAAR,CAAc,GAAd,CAAd;AACA,YAAMnC,OAAO,GAAGsC,KAAK,CAAC,CAAD,CAArB;AACA,YAAMrC,OAAO,GAAGqC,KAAK,CAACC,KAAN,CAAY,CAAZ,EAAeC,IAAf,EAAhB,CANiD,CAOjD;;AACA,UAAIC,aAAa,GAAG,GAApB;AACA,UAAI3B,QAAQ,GAAG,EAAf;AACA,UAAIK,KAAK,GAAG,EAAZ;;AACA,UAAInB,OAAO,IAAIA,OAAO,KAAK,GAA3B,EAAgC;AAC5B,YAAIA,OAAO,CAAC0C,UAAR,CAAmB,GAAnB,CAAJ,EAA6B;AACzB;AACAD,UAAAA,aAAa,IAAI,GAAjB;AACH,SAHD,MAIK;AACD;AACA;AACA;AACA,gBAAME,GAAG,GAAG,4DAA4DC,IAA5D,CAAiE5C,OAAjE,CAAZ;;AACA,cAAI2C,GAAJ,EAAS;AACL7B,YAAAA,QAAQ,GAAG6B,GAAG,CAAC,CAAD,CAAd;AACAxB,YAAAA,KAAK,GAAGwB,GAAG,CAAC,CAAD,CAAH,IAAUA,GAAG,CAAC,CAAD,CAAb,IAAoBA,GAAG,CAAC,CAAD,CAA/B,CAFK,CAGL;;AACAF,YAAAA,aAAa,IAAI,GAAjB;AACH,WALD,MAMK;AACD;AACAA,YAAAA,aAAa,IAAI,GAAjB;AACH;AACJ;AACJ;;AACD,UAAIxC,OAAO,CAACK,MAAR,GAAiB,CAArB,EAAwB;AACpB;AACAmC,QAAAA,aAAa,IAAI,GAAjB;AACH,OApCgD,CAqCjD;;;AACAA,MAAAA,aAAa,IAAI,GAAjB;AACA,YAAMI,GAAG,GAAG;AACRC,QAAAA,IAAI,EAAEjD,aAAa,CAAC4C,aAAD,CADX;AAERzC,QAAAA,OAAO,EAAEA,OAAO,IAAI,EAFZ;AAGRC,QAAAA,OAAO,EAAEA,OAAO,IAAI,EAHZ;AAIRa,QAAAA,QAAQ,EAAEA,QAAQ,IAAI,EAJd;AAKRK,QAAAA,KAAK,EAAEA,KAAK,IAAI;AALR,OAAZ,CAvCiD,CA8CjD;;AACA,aAAQ3B,mBAAmB,CAAC6C,OAAD,CAAnB,GAA+BQ,GAAvC;AACH,KAhDe,CAAhB;AAiDH;AACD;AACJ;AACA;AACA;AACA;;;AACIE,EAAAA,OAAO,CAAChD,EAAD,EAAK;AACR,QAAI,KAAKkC,SAAL,GAAiB,KAAKC,QAAL,CAAc5B,MAA/B,IACA,KAAK4B,QAAL,CAAc,KAAKD,SAAnB,EAA8Ba,IAA9B,CAAmC/C,EAAnC,EAAuC,KAAKmC,QAAL,CAAc,KAAKD,SAAnB,EAA8BjC,OAArE,EAA8E,KAAKkC,QAAL,CAAc,KAAKD,SAAnB,EAA8BhC,OAA5G,EAAqH,KAAKiC,QAAL,CAAc,KAAKD,SAAnB,EAA8BnB,QAAnJ,EAA6J,KAAKoB,QAAL,CAAc,KAAKD,SAAnB,EAA8Bd,KAA3L,CADJ,EACuM;AACnM,WAAKc,SAAL;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;AACD;AACJ;AACA;;;AACIe,EAAAA,MAAM,GAAG;AACL,SAAKf,SAAL;AACH;AACD;AACJ;AACA;AACA;;;AACI,MAAIgB,OAAJ,GAAc;AACV,WAAO,KAAKhB,SAAL,KAAmB,KAAKC,QAAL,CAAc5B,MAAxC;AACH;AACD;AACJ;AACA;AACA;;;AACI4C,EAAAA,KAAK,GAAG;AACJ,SAAKjB,SAAL,GAAiB,CAAjB;AACH;AACD;AACJ;AACA;;;AACIkB,EAAAA,UAAU,GAAG;AACT3D,IAAAA,mBAAmB,GAAG,EAAtB;AACH;;AAjGwB","sourcesContent":["/**\n * Cache to store generated match functions\n * @type {Object}\n */\nlet pMatchFunctionCache = {};\nfunction compare_tagname(tag1, tag2) {\n    if (!tag1) {\n        return !tag2;\n    }\n    if (!tag2) {\n        return !tag1;\n    }\n    return tag1.toLowerCase() === tag2.toLowerCase();\n}\n/**\n * Function cache\n */\nconst functionCache = {\n    f145(el, tagName, classes) {\n        'use strict';\n        tagName = tagName || '';\n        classes = classes || [];\n        if (el.id !== tagName.substr(1)) {\n            return false;\n        }\n        for (let cls = classes, i = 0; i < cls.length; i++) {\n            if (el.classNames.indexOf(cls[i]) === -1) {\n                return false;\n            }\n        }\n        return true;\n    },\n    f45(el, tagName, classes) {\n        'use strict';\n        tagName = tagName || '';\n        classes = classes || [];\n        for (let cls = classes, i = 0; i < cls.length; i++) {\n            if (el.classNames.indexOf(cls[i]) === -1) {\n                return false;\n            }\n        }\n        return true;\n    },\n    f15(el, tagName) {\n        'use strict';\n        tagName = tagName || '';\n        if (el.id !== tagName.substr(1)) {\n            return false;\n        }\n        return true;\n    },\n    f1(el, tagName) {\n        'use strict';\n        tagName = tagName || '';\n        if (el.id !== tagName.substr(1)) {\n            return false;\n        }\n    },\n    f5() {\n        'use strict';\n        return true;\n    },\n    f55(el, tagName, classes, attr_key) {\n        'use strict';\n        tagName = tagName || '';\n        classes = classes || [];\n        attr_key = attr_key || '';\n        const attrs = el.attributes;\n        return attrs.hasOwnProperty(attr_key);\n    },\n    f245(el, tagName, classes, attr_key, value) {\n        'use strict';\n        tagName = tagName || '';\n        classes = classes || [];\n        attr_key = (attr_key || '').toLowerCase();\n        value = value || '';\n        const attrs = el.attributes;\n        return Object.keys(attrs).some((key) => {\n            const val = attrs[key];\n            return key.toLowerCase() === attr_key && val === value;\n        });\n        // for (let cls = classes, i = 0; i < cls.length; i++) {if (el.classNames.indexOf(cls[i]) === -1){ return false;}}\n        // return true;\n    },\n    f25(el, tagName, classes, attr_key, value) {\n        'use strict';\n        tagName = tagName || '';\n        classes = classes || [];\n        attr_key = (attr_key || '').toLowerCase();\n        value = value || '';\n        const attrs = el.attributes;\n        return Object.keys(attrs).some((key) => {\n            const val = attrs[key];\n            return key.toLowerCase() === attr_key && val === value;\n        });\n        // return true;\n    },\n    f2(el, tagName, classes, attr_key, value) {\n        'use strict';\n        tagName = tagName || '';\n        classes = classes || [];\n        attr_key = (attr_key || '').toLowerCase();\n        value = value || '';\n        const attrs = el.attributes;\n        return Object.keys(attrs).some((key) => {\n            const val = attrs[key];\n            return key.toLowerCase() === attr_key && val === value;\n        });\n    },\n    f345(el, tagName, classes) {\n        'use strict';\n        tagName = tagName || '';\n        classes = classes || [];\n        if (!compare_tagname(el.tagName, tagName)) {\n            return false;\n        }\n        for (let cls = classes, i = 0; i < cls.length; i++) {\n            if (el.classNames.indexOf(cls[i]) === -1) {\n                return false;\n            }\n        }\n        return true;\n    },\n    f35(el, tagName) {\n        'use strict';\n        tagName = tagName || '';\n        return compare_tagname(el.tagName, tagName);\n    },\n    f3(el, tagName) {\n        'use strict';\n        tagName = tagName || '';\n        // if (el.tagName !== tagName) {\n        // \treturn false;\n        // }\n        return compare_tagname(el.tagName, tagName);\n    }\n};\n/**\n * Matcher class to make CSS match\n *\n * @class Matcher\n */\nexport default class Matcher {\n    /**\n     * Creates an instance of Matcher.\n     * @param {string} selector\n     *\n     * @memberof Matcher\n     */\n    constructor(selector) {\n        this.nextMatch = 0;\n        this.matchers = selector.split(' ').map((matcher) => {\n            if (pMatchFunctionCache[matcher]) {\n                return pMatchFunctionCache[matcher];\n            }\n            const parts = matcher.split('.');\n            const tagName = parts[0];\n            const classes = parts.slice(1).sort();\n            // let source = '\"use strict\";';\n            let function_name = 'f';\n            let attr_key = '';\n            let value = '';\n            if (tagName && tagName !== '*') {\n                if (tagName.startsWith('#')) {\n                    // source += 'if (el.id != ' + JSON.stringify(tagName.substr(1)) + ') return false;';// 1\n                    function_name += '1';\n                }\n                else {\n                    // https://github.com/taoqf/node-html-parser/issues/86\n                    // const reg = /\\[\\s*([\\w-]+)(\\s*=\\s*(((?<quote>'|\")\\s*(.*)(\\k<quote>))|(\\S*)))?\\s*\\]/.exec(tagName);\n                    // `[a-b]`,`[ a-b ]`,`[a-b=c]`, `[a-b=c'd]`,`[a-b='c\\' d\"e ']`,`[ a-b = 'c\\' d\"e ' ]`,`[a-b=\"c' d\\\"e \" ]`,`[ a-b = \"c' d\\\"e \" ]`\n                    const reg = /\\[\\s*([\\w-]+)(\\s*=\\s*(('\\s*(.*)'|\"\\s*(.*)\")|(\\S*)))?\\s*\\]/.exec(tagName);\n                    if (reg) {\n                        attr_key = reg[1];\n                        value = reg[5] || reg[6] || reg[7];\n                        // source += `let attrs = el.attributes;for (let key in attrs){const val = attrs[key]; if (key == \"${attr_key}\" && val == \"${value}\"){return true;}} return false;`;// 2\n                        function_name += '2';\n                    }\n                    else {\n                        // source += 'if (el.tagName != ' + JSON.stringify(tagName) + ') return false;';// 3\n                        function_name += '3';\n                    }\n                }\n            }\n            if (classes.length > 0) {\n                // source += 'for (let cls = ' + JSON.stringify(classes) + ', i = 0; i < cls.length; i++) if (el.classNames.indexOf(cls[i]) === -1) return false;';// 4\n                function_name += '4';\n            }\n            // source += 'return true;';// 5\n            function_name += '5';\n            const obj = {\n                func: functionCache[function_name],\n                tagName: tagName || '',\n                classes: classes || '',\n                attr_key: attr_key || '',\n                value: value || ''\n            };\n            // source = source || '';\n            return (pMatchFunctionCache[matcher] = obj);\n        });\n    }\n    /**\n     * Trying to advance match pointer\n     * @param  {HTMLElement} el element to make the match\n     * @return {bool}           true when pointer advanced.\n     */\n    advance(el) {\n        if (this.nextMatch < this.matchers.length &&\n            this.matchers[this.nextMatch].func(el, this.matchers[this.nextMatch].tagName, this.matchers[this.nextMatch].classes, this.matchers[this.nextMatch].attr_key, this.matchers[this.nextMatch].value)) {\n            this.nextMatch++;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Rewind the match pointer\n     */\n    rewind() {\n        this.nextMatch--;\n    }\n    /**\n     * Trying to determine if match made.\n     * @return {bool} true when the match is made\n     */\n    get matched() {\n        return this.nextMatch === this.matchers.length;\n    }\n    /**\n     * Rest match pointer.\n     * @return {[type]} [description]\n     */\n    reset() {\n        this.nextMatch = 0;\n    }\n    /**\n     * flush cache to free memory\n     */\n    flushCache() {\n        pMatchFunctionCache = {};\n    }\n}\n"]},"metadata":{},"sourceType":"module"}