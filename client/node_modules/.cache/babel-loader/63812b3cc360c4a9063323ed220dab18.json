{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0; // This plugin mirrors webpack 3 `filename` and `chunkfilename` behavior\n// This fixes https://github.com/webpack/webpack/issues/6598\n// This plugin is based on https://github.com/researchgate/webpack/commit/2f28947fa0c63ccbb18f39c0098bd791a2c37090\n\nclass ChunkNamesPlugin {\n  apply(compiler) {\n    compiler.hooks.compilation.tap('NextJsChunkNamesPlugin', compilation => {\n      compilation.chunkTemplate.hooks.renderManifest.intercept({\n        register(tapInfo) {\n          if (tapInfo.name === 'JavascriptModulesPlugin') {\n            const originalMethod = tapInfo.fn;\n\n            tapInfo.fn = (result, options) => {\n              let filenameTemplate;\n              const chunk = options.chunk;\n              const outputOptions = options.outputOptions;\n\n              if (chunk.filenameTemplate) {\n                filenameTemplate = chunk.filenameTemplate;\n              } else if (chunk.hasEntryModule()) {\n                filenameTemplate = outputOptions.filename;\n              } else {\n                filenameTemplate = outputOptions.chunkFilename;\n              }\n\n              options.chunk.filenameTemplate = filenameTemplate;\n              return originalMethod(result, options);\n            };\n          }\n\n          return tapInfo;\n        }\n\n      });\n    });\n  }\n\n}\n\nexports.default = ChunkNamesPlugin;","map":{"version":3,"sources":["../../../../build/webpack/plugins/chunk-names-plugin.ts"],"names":["ChunkNamesPlugin","apply","compiler","compilation","register","tapInfo","originalMethod","chunk","options","outputOptions","filenameTemplate"],"mappings":";;;0BACA;AACA;AACA;;AACe,MAAMA,gBAAN,CAAuB;AACpCC,EAAAA,KAAK,CAAA,QAAA,EAAqB;AACxBC,IAAAA,QAAQ,CAARA,KAAAA,CAAAA,WAAAA,CAAAA,GAAAA,CAAAA,wBAAAA,EAEGC,WAAD,IAAsB;AACpBA,MAAAA,WAAW,CAAXA,aAAAA,CAAAA,KAAAA,CAAAA,cAAAA,CAAAA,SAAAA,CAAyD;AACvDC,QAAAA,QAAQ,CAAA,OAAA,EAAe;AACrB,cAAIC,OAAO,CAAPA,IAAAA,KAAJ,yBAAA,EAAgD;AAC9C,kBAAMC,cAAc,GAAGD,OAAO,CAA9B,EAAA;;AACAA,YAAAA,OAAO,CAAPA,EAAAA,GAAa,CAAA,MAAA,EAAA,OAAA,KAA+B;AAC1C,kBAAA,gBAAA;AACA,oBAAME,KAAK,GAAGC,OAAO,CAArB,KAAA;AACA,oBAAMC,aAAa,GAAGD,OAAO,CAA7B,aAAA;;AACA,kBAAID,KAAK,CAAT,gBAAA,EAA4B;AAC1BG,gBAAAA,gBAAgB,GAAGH,KAAK,CAAxBG,gBAAAA;AADF,eAAA,MAEO,IAAIH,KAAK,CAAT,cAAIA,EAAJ,EAA4B;AACjCG,gBAAAA,gBAAgB,GAAGD,aAAa,CAAhCC,QAAAA;AADK,eAAA,MAEA;AACLA,gBAAAA,gBAAgB,GAAGD,aAAa,CAAhCC,aAAAA;AAGFF;;AAAAA,cAAAA,OAAO,CAAPA,KAAAA,CAAAA,gBAAAA,GAAAA,gBAAAA;AACA,qBAAOF,cAAc,CAAA,MAAA,EAArB,OAAqB,CAArB;AAbFD,aAAAA;AAgBF;;AAAA,iBAAA,OAAA;AApBJF;;AAAyD,OAAzDA;AAHJD,KAAAA;AAFkC;;AAAA","sourcesContent":["import { Compiler } from 'webpack'\n// This plugin mirrors webpack 3 `filename` and `chunkfilename` behavior\n// This fixes https://github.com/webpack/webpack/issues/6598\n// This plugin is based on https://github.com/researchgate/webpack/commit/2f28947fa0c63ccbb18f39c0098bd791a2c37090\nexport default class ChunkNamesPlugin {\n  apply(compiler: Compiler) {\n    compiler.hooks.compilation.tap(\n      'NextJsChunkNamesPlugin',\n      (compilation: any) => {\n        compilation.chunkTemplate.hooks.renderManifest.intercept({\n          register(tapInfo: any) {\n            if (tapInfo.name === 'JavascriptModulesPlugin') {\n              const originalMethod = tapInfo.fn\n              tapInfo.fn = (result: any, options: any) => {\n                let filenameTemplate\n                const chunk = options.chunk\n                const outputOptions = options.outputOptions\n                if (chunk.filenameTemplate) {\n                  filenameTemplate = chunk.filenameTemplate\n                } else if (chunk.hasEntryModule()) {\n                  filenameTemplate = outputOptions.filename\n                } else {\n                  filenameTemplate = outputOptions.chunkFilename\n                }\n\n                options.chunk.filenameTemplate = filenameTemplate\n                return originalMethod(result, options)\n              }\n            }\n            return tapInfo\n          },\n        })\n      }\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}