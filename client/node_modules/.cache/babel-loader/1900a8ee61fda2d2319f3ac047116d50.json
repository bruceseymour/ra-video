{"ast":null,"code":"/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nclass Log {\n  constructor(tag = '', verbose = false, output = console) {\n    this.tag_ = tag;\n    this.verbose_ = verbose;\n    this.prefix_ = tag ? this.inverse_(tag) : '';\n    this.output_ = output;\n  }\n\n  debug(message, ...args) {\n    if (!this.verbose_) {\n      return;\n    }\n\n    this.log_(this.output_.log, this.dim_(message), args);\n  }\n\n  log(message, ...args) {\n    this.info(message, ...args);\n  }\n\n  info(message, ...args) {\n    this.log_(this.output_.log, message, ...args);\n  }\n\n  success(message, ...args) {\n    this.log_(this.output_.log, this.green_('SUCCESS ' + message), args);\n  }\n\n  warn(message, ...args) {\n    this.log_(this.output_.warn, this.yellow_('WARNING ' + message), args);\n  }\n\n  error(message, ...args) {\n    this.output_.log('\\n');\n    this.log_(this.output_.error, this.red_('ERROR ' + message), args);\n    this.output_.log('\\n');\n  }\n\n  verbose(isVerbose = true) {\n    this.verbose_ = !!isVerbose;\n  }\n\n  tag(newTag) {\n    if (this.tag_) {\n      newTag = this.tag_ + ' ' + newTag;\n    }\n\n    return new Log(newTag, this.verbose_, this.output_);\n  }\n\n  log_(fn, message, args) {\n    if (this.prefix_) {\n      message = this.prefix_ + ' ' + message;\n    }\n\n    if (args) {\n      fn(...[message].concat(args));\n    } else {\n      fn(message);\n    }\n  }\n\n  inverse_(string) {\n    return `\\x1b[7m${string}\\x1b[0m`;\n  }\n\n  dim_(string) {\n    return `\\x1b[36m${string}\\x1b[0m`;\n  }\n\n  green_(string) {\n    return `\\x1b[32m${string}\\x1b[0m`;\n  }\n\n  yellow_(string) {\n    return `\\x1b[33m${string}\\x1b[0m`;\n  }\n\n  red_(string) {\n    return `\\x1b[31m${string}\\x1b[0m`;\n  }\n\n}\n\nmodule.exports = new Log();","map":{"version":3,"sources":["/Users/bruceseymour/ra-video/client/node_modules/@ampproject/toolbox-core/lib/Log.js"],"names":["Log","constructor","tag","verbose","output","console","tag_","verbose_","prefix_","inverse_","output_","debug","message","args","log_","log","dim_","info","success","green_","warn","yellow_","error","red_","isVerbose","newTag","fn","concat","string","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'use strict';\n\nclass Log {\n  constructor(tag = '', verbose = false, output = console) {\n    this.tag_ = tag;\n    this.verbose_ = verbose;\n    this.prefix_ = tag ? this.inverse_(tag) : '';\n    this.output_ = output;\n  }\n\n  debug(message, ...args) {\n    if (!this.verbose_) {\n      return;\n    }\n    this.log_(this.output_.log, this.dim_(message), args);\n  }\n\n  log(message, ...args) {\n    this.info(message, ...args);\n  }\n\n  info(message, ...args) {\n    this.log_(this.output_.log, message, ...args);\n  }\n\n  success(message, ...args) {\n    this.log_(this.output_.log, this.green_('SUCCESS ' + message), args);\n  }\n\n  warn(message, ...args) {\n    this.log_(this.output_.warn, this.yellow_('WARNING ' + message), args);\n  }\n\n  error(message, ...args) {\n    this.output_.log('\\n');\n    this.log_(this.output_.error, this.red_('ERROR ' + message), args);\n    this.output_.log('\\n');\n  }\n\n  verbose(isVerbose = true) {\n    this.verbose_ = !!isVerbose;\n  }\n\n  tag(newTag) {\n    if (this.tag_) {\n      newTag = this.tag_ + ' ' + newTag;\n    }\n    return new Log(newTag, this.verbose_, this.output_);\n  }\n\n  log_(fn, message, args) {\n    if (this.prefix_) {\n      message = this.prefix_ + ' ' + message;\n    }\n    if (args) {\n      fn(...[message].concat(args));\n    } else {\n      fn(message);\n    }\n  }\n\n  inverse_(string) {\n    return `\\x1b[7m${string}\\x1b[0m`;\n  }\n\n  dim_(string) {\n    return `\\x1b[36m${string}\\x1b[0m`;\n  }\n\n  green_(string) {\n    return `\\x1b[32m${string}\\x1b[0m`;\n  }\n\n  yellow_(string) {\n    return `\\x1b[33m${string}\\x1b[0m`;\n  }\n\n  red_(string) {\n    return `\\x1b[31m${string}\\x1b[0m`;\n  }\n}\n\nmodule.exports = new Log();\n"]},"metadata":{},"sourceType":"script"}