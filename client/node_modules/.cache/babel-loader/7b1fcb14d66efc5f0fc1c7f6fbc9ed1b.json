{"ast":null,"code":"/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n/**\n * A sizes object.\n * @typedef {{\n *   values: (Array<Size>),\n *   defaultValue: string\n * }}\n */\n// eslint-disable-next-line\n\nlet Sizes;\n/**\n * A single size definition.\n * @typedef {{\n *   media: string,\n *   size: string\n * }}\n */\n// eslint-disable-next-line\n\nlet Size;\n/**\n * Parses the text representation of sizes into Sizes object.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes.\n * See https://html.spec.whatwg.org/multipage/embedded-content.html#attr-img-sizes\n * See https://html.spec.whatwg.org/multipage/images.html#parsing-a-sizes-attribute\n *\n * @param {String} string\n * @returns {Sizes}\n */\n\nconst parseSizes = string => {\n  const result = {\n    defaultValue: '',\n    values: []\n  };\n\n  if (!string) {\n    return result;\n  }\n\n  const sizes = string.trim().split(/\\s*,\\s*/);\n\n  for (let i = 0; i < sizes.length; i++) {\n    const sizeString = sizes[i];\n\n    if (i === sizes.length - 1) {\n      result.defaultValue = sizeString.trim();\n    } else {\n      const size = sizeString.split(/\\)\\s+/);\n\n      if (size.length !== 2) {\n        throw new Error(`Invalid sizes definition '${string}'`);\n      }\n\n      result.values.push({\n        media: `${size[0]})`,\n        size: size[1]\n      });\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = parseSizes;","map":{"version":3,"sources":["/Users/bruceseymour/ra-video/client/node_modules/@ampproject/toolbox-optimizer/lib/parseSizes.js"],"names":["Sizes","Size","parseSizes","string","result","defaultValue","values","sizes","trim","split","i","length","sizeString","size","Error","push","media","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIA,KAAJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,IAAJ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAU,GAAIC,MAAD,IAAY;AAC7B,QAAMC,MAAM,GAAG;AACbC,IAAAA,YAAY,EAAE,EADD;AAEbC,IAAAA,MAAM,EAAE;AAFK,GAAf;;AAIA,MAAI,CAACH,MAAL,EAAa;AACX,WAAOC,MAAP;AACD;;AACD,QAAMG,KAAK,GAAGJ,MAAM,CAACK,IAAP,GAAcC,KAAd,CAAoB,SAApB,CAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,UAAME,UAAU,GAAGL,KAAK,CAACG,CAAD,CAAxB;;AACA,QAAIA,CAAC,KAAKH,KAAK,CAACI,MAAN,GAAe,CAAzB,EAA4B;AAC1BP,MAAAA,MAAM,CAACC,YAAP,GAAsBO,UAAU,CAACJ,IAAX,EAAtB;AACD,KAFD,MAEO;AACL,YAAMK,IAAI,GAAGD,UAAU,CAACH,KAAX,CAAiB,OAAjB,CAAb;;AACA,UAAII,IAAI,CAACF,MAAL,KAAgB,CAApB,EAAuB;AACrB,cAAM,IAAIG,KAAJ,CAAW,6BAA4BX,MAAO,GAA9C,CAAN;AACD;;AACDC,MAAAA,MAAM,CAACE,MAAP,CAAcS,IAAd,CAAmB;AACjBC,QAAAA,KAAK,EAAG,GAAEH,IAAI,CAAC,CAAD,CAAI,GADD;AAEjBA,QAAAA,IAAI,EAAEA,IAAI,CAAC,CAAD;AAFO,OAAnB;AAID;AACF;;AACD,SAAOT,MAAP;AACD,CAzBD;;AA2BAa,MAAM,CAACC,OAAP,GAAiBhB,UAAjB","sourcesContent":["/**\n * Copyright 2020 The AMP HTML Authors. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS-IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\n/**\n * A sizes object.\n * @typedef {{\n *   values: (Array<Size>),\n *   defaultValue: string\n * }}\n */\n// eslint-disable-next-line\nlet Sizes;\n\n/**\n * A single size definition.\n * @typedef {{\n *   media: string,\n *   size: string\n * }}\n */\n// eslint-disable-next-line\nlet Size;\n\n/**\n * Parses the text representation of sizes into Sizes object.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#Attributes.\n * See https://html.spec.whatwg.org/multipage/embedded-content.html#attr-img-sizes\n * See https://html.spec.whatwg.org/multipage/images.html#parsing-a-sizes-attribute\n *\n * @param {String} string\n * @returns {Sizes}\n */\nconst parseSizes = (string) => {\n  const result = {\n    defaultValue: '',\n    values: [],\n  };\n  if (!string) {\n    return result;\n  }\n  const sizes = string.trim().split(/\\s*,\\s*/);\n  for (let i = 0; i < sizes.length; i++) {\n    const sizeString = sizes[i];\n    if (i === sizes.length - 1) {\n      result.defaultValue = sizeString.trim();\n    } else {\n      const size = sizeString.split(/\\)\\s+/);\n      if (size.length !== 2) {\n        throw new Error(`Invalid sizes definition '${string}'`);\n      }\n      result.values.push({\n        media: `${size[0]})`,\n        size: size[1],\n      });\n    }\n  }\n  return result;\n};\n\nmodule.exports = parseSizes;\n"]},"metadata":{},"sourceType":"script"}