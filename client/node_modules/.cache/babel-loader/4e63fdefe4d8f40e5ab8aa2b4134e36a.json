{"ast":null,"code":"const postcss = require('postcss');\n\nconst createSimplePreset = require('cssnano-preset-simple');\n\nfunction initializePlugin(excludeAll, plugin, css, result) {\n  if (Array.isArray(plugin)) {\n    const [processor, opts] = plugin;\n    const isEnabled = // No options:\n    !excludeAll && typeof opts === 'undefined' || // Short-hand enabled:\n    typeof opts === 'boolean' && opts || // Include all plugins:\n    !excludeAll && opts && typeof opts === 'object' && !opts.exclude || // Exclude all plugins:\n    excludeAll && opts && typeof opts === 'object' && opts.exclude === false;\n\n    if (isEnabled) {\n      return Promise.resolve(processor(opts)(css, result));\n    }\n  } else {\n    return Promise.resolve(plugin()(css, result));\n  }\n\n  return Promise.resolve();\n}\n\nmodule.exports = postcss.plugin('cssnano-simple', (opts = {}) => {\n  const excludeAll = Boolean(opts && opts.excludeAll);\n  const userOpts = Object.assign({}, opts);\n\n  if (excludeAll) {\n    for (const userOption in userOpts) {\n      if (!userOpts.hasOwnProperty(userOption)) continue;\n      const val = userOpts[userOption];\n\n      if (!Boolean(val)) {\n        continue;\n      }\n\n      if (Object.prototype.toString.call(val) === '[object Object]') {\n        userOpts[userOption] = Object.assign({}, {\n          exclude: false\n        }, val);\n      }\n    }\n  }\n\n  const options = Object.assign({}, excludeAll ? {\n    rawCache: true\n  } : undefined, userOpts);\n  const preset = createSimplePreset(options);\n  return (css, result) => {\n    return preset.plugins.reduce((promise, plugin) => {\n      return promise.then(initializePlugin.bind(null, excludeAll, plugin, css, result));\n    }, Promise.resolve());\n  };\n});","map":{"version":3,"sources":["/Users/bruceseymour/ra-video/client/node_modules/cssnano-simple/src/index.js"],"names":["postcss","require","createSimplePreset","initializePlugin","excludeAll","plugin","css","result","Array","isArray","processor","opts","isEnabled","exclude","Promise","resolve","module","exports","Boolean","userOpts","Object","assign","userOption","hasOwnProperty","val","prototype","toString","call","options","rawCache","undefined","preset","plugins","reduce","promise","then","bind"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,uBAAD,CAAlC;;AAEA,SAASE,gBAAT,CAA0BC,UAA1B,EAAsCC,MAAtC,EAA8CC,GAA9C,EAAmDC,MAAnD,EAA2D;AACzD,MAAIC,KAAK,CAACC,OAAN,CAAcJ,MAAd,CAAJ,EAA2B;AACzB,UAAM,CAACK,SAAD,EAAYC,IAAZ,IAAoBN,MAA1B;AAEA,UAAMO,SAAS,GACb;AACC,KAACR,UAAD,IAAe,OAAOO,IAAP,KAAgB,WAAhC,IACA;AACC,WAAOA,IAAP,KAAgB,SAAhB,IAA6BA,IAF9B,IAGA;AACC,KAACP,UAAD,IAAeO,IAAf,IAAuB,OAAOA,IAAP,KAAgB,QAAvC,IAAmD,CAACA,IAAI,CAACE,OAJ1D,IAKA;AACCT,IAAAA,UAAU,IACTO,IADD,IAEC,OAAOA,IAAP,KAAgB,QAFjB,IAGCA,IAAI,CAACE,OAAL,KAAiB,KAXrB;;AAaA,QAAID,SAAJ,EAAe;AACb,aAAOE,OAAO,CAACC,OAAR,CAAgBL,SAAS,CAACC,IAAD,CAAT,CAAgBL,GAAhB,EAAqBC,MAArB,CAAhB,CAAP;AACD;AACF,GAnBD,MAmBO;AACL,WAAOO,OAAO,CAACC,OAAR,CAAgBV,MAAM,GAAGC,GAAH,EAAQC,MAAR,CAAtB,CAAP;AACD;;AAED,SAAOO,OAAO,CAACC,OAAR,EAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBjB,OAAO,CAACK,MAAR,CAAe,gBAAf,EAAiC,CAACM,IAAI,GAAG,EAAR,KAAe;AAC/D,QAAMP,UAAU,GAAGc,OAAO,CAACP,IAAI,IAAIA,IAAI,CAACP,UAAd,CAA1B;AAEA,QAAMe,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,IAAlB,CAAjB;;AACA,MAAIP,UAAJ,EAAgB;AACd,SAAK,MAAMkB,UAAX,IAAyBH,QAAzB,EAAmC;AACjC,UAAI,CAACA,QAAQ,CAACI,cAAT,CAAwBD,UAAxB,CAAL,EAA0C;AAC1C,YAAME,GAAG,GAAGL,QAAQ,CAACG,UAAD,CAApB;;AACA,UAAI,CAACJ,OAAO,CAACM,GAAD,CAAZ,EAAmB;AACjB;AACD;;AAED,UAAIJ,MAAM,CAACK,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BH,GAA/B,MAAwC,iBAA5C,EAA+D;AAC7DL,QAAAA,QAAQ,CAACG,UAAD,CAAR,GAAuBF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAAER,UAAAA,OAAO,EAAE;AAAX,SAAlB,EAAsCW,GAAtC,CAAvB;AACD;AACF;AACF;;AAED,QAAMI,OAAO,GAAGR,MAAM,CAACC,MAAP,CACd,EADc,EAEdjB,UAAU,GAAG;AAAEyB,IAAAA,QAAQ,EAAE;AAAZ,GAAH,GAAwBC,SAFpB,EAGdX,QAHc,CAAhB;AAMA,QAAMY,MAAM,GAAG7B,kBAAkB,CAAC0B,OAAD,CAAjC;AACA,SAAO,CAACtB,GAAD,EAAMC,MAAN,KAAiB;AACtB,WAAOwB,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAsB,CAACC,OAAD,EAAU7B,MAAV,KAAqB;AAChD,aAAO6B,OAAO,CAACC,IAAR,CACLhC,gBAAgB,CAACiC,IAAjB,CAAsB,IAAtB,EAA4BhC,UAA5B,EAAwCC,MAAxC,EAAgDC,GAAhD,EAAqDC,MAArD,CADK,CAAP;AAGD,KAJM,EAIJO,OAAO,CAACC,OAAR,EAJI,CAAP;AAKD,GAND;AAOD,CAhCgB,CAAjB","sourcesContent":["const postcss = require('postcss');\nconst createSimplePreset = require('cssnano-preset-simple');\n\nfunction initializePlugin(excludeAll, plugin, css, result) {\n  if (Array.isArray(plugin)) {\n    const [processor, opts] = plugin;\n\n    const isEnabled =\n      // No options:\n      (!excludeAll && typeof opts === 'undefined') ||\n      // Short-hand enabled:\n      (typeof opts === 'boolean' && opts) ||\n      // Include all plugins:\n      (!excludeAll && opts && typeof opts === 'object' && !opts.exclude) ||\n      // Exclude all plugins:\n      (excludeAll &&\n        opts &&\n        typeof opts === 'object' &&\n        opts.exclude === false);\n\n    if (isEnabled) {\n      return Promise.resolve(processor(opts)(css, result));\n    }\n  } else {\n    return Promise.resolve(plugin()(css, result));\n  }\n\n  return Promise.resolve();\n}\n\nmodule.exports = postcss.plugin('cssnano-simple', (opts = {}) => {\n  const excludeAll = Boolean(opts && opts.excludeAll);\n\n  const userOpts = Object.assign({}, opts);\n  if (excludeAll) {\n    for (const userOption in userOpts) {\n      if (!userOpts.hasOwnProperty(userOption)) continue;\n      const val = userOpts[userOption];\n      if (!Boolean(val)) {\n        continue;\n      }\n\n      if (Object.prototype.toString.call(val) === '[object Object]') {\n        userOpts[userOption] = Object.assign({}, { exclude: false }, val);\n      }\n    }\n  }\n\n  const options = Object.assign(\n    {},\n    excludeAll ? { rawCache: true } : undefined,\n    userOpts\n  );\n\n  const preset = createSimplePreset(options);\n  return (css, result) => {\n    return preset.plugins.reduce((promise, plugin) => {\n      return promise.then(\n        initializePlugin.bind(null, excludeAll, plugin, css, result)\n      );\n    }, Promise.resolve());\n  };\n});\n"]},"metadata":{},"sourceType":"script"}