{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.getModuleBuildError = getModuleBuildError;\n\nvar _fs = require(\"fs\");\n\nvar path = _interopRequireWildcard(require(\"path\"));\n\nvar _parseBabel = require(\"./parseBabel\");\n\nvar _parseCss = require(\"./parseCss\");\n\nvar _parseScss = require(\"./parseScss\");\n\nvar _parseNotFoundError = require(\"./parseNotFoundError\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction getFileData(compilation, m) {\n  var _ref, _compilation$compiler, _compilation$compiler2;\n\n  let resolved;\n  let ctx = (_ref = (_compilation$compiler = (_compilation$compiler2 = compilation.compiler) == null ? void 0 : _compilation$compiler2.context) != null ? _compilation$compiler : compilation.context) != null ? _ref : null;\n\n  if (ctx !== null && typeof m.resource === 'string') {\n    const res = path.relative(ctx, m.resource).replace(/\\\\/g, path.posix.sep);\n    resolved = res.startsWith('.') ? res : `.${path.posix.sep}${res}`;\n  } else {\n    const requestShortener = compilation.requestShortener;\n\n    if (typeof (m == null ? void 0 : m.readableIdentifier) === 'function') {\n      resolved = m.readableIdentifier(requestShortener);\n    } else {\n      var _m$request;\n\n      resolved = (_m$request = m.request) != null ? _m$request : m.userRequest;\n    }\n  }\n\n  if (resolved) {\n    let content = null;\n\n    try {\n      content = (0, _fs.readFileSync)(ctx ? path.resolve(ctx, resolved) : resolved, 'utf8');\n    } catch (_unused) {}\n\n    return [resolved, content];\n  }\n\n  return ['<unknown>', null];\n}\n\nasync function getModuleBuildError(compilation, input) {\n  if (!(typeof input === 'object' && ((input == null ? void 0 : input.name) === 'ModuleBuildError' || (input == null ? void 0 : input.name) === 'ModuleNotFoundError') && Boolean(input.module) && input.error instanceof Error)) {\n    return false;\n  }\n\n  const err = input.error;\n  const [sourceFilename, sourceContent] = getFileData(compilation, input.module);\n  const notFoundError = await (0, _parseNotFoundError.getNotFoundError)(compilation, input, sourceFilename);\n\n  if (notFoundError !== false) {\n    return notFoundError;\n  }\n\n  const babel = (0, _parseBabel.getBabelError)(sourceFilename, err);\n\n  if (babel !== false) {\n    return babel;\n  }\n\n  const css = (0, _parseCss.getCssError)(sourceFilename, err);\n\n  if (css !== false) {\n    return css;\n  }\n\n  const scss = (0, _parseScss.getScssError)(sourceFilename, sourceContent, err);\n\n  if (scss !== false) {\n    return scss;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["../../../../../build/webpack/plugins/wellknown-errors-plugin/webpackModuleError.ts"],"names":["ctx","compilation","m","res","path","resolved","sep","requestShortener","content","Boolean","input","err","getFileData","notFoundError","babel","css","scss"],"mappings":"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","sourcesContent":["import { readFileSync } from 'fs'\nimport * as path from 'path'\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { compilation as CompilationType } from 'webpack'\nimport { getBabelError } from './parseBabel'\nimport { getCssError } from './parseCss'\nimport { getScssError } from './parseScss'\nimport { getNotFoundError } from './parseNotFoundError'\nimport { SimpleWebpackError } from './simpleWebpackError'\n\nfunction getFileData(\n  compilation: CompilationType.Compilation,\n  m: any\n): [string, string | null] {\n  let resolved: string\n  let ctx: string | null =\n    compilation.compiler?.context ?? compilation.context ?? null\n  if (ctx !== null && typeof m.resource === 'string') {\n    const res = path.relative(ctx, m.resource).replace(/\\\\/g, path.posix.sep)\n    resolved = res.startsWith('.') ? res : `.${path.posix.sep}${res}`\n  } else {\n    const requestShortener = compilation.requestShortener\n    if (typeof m?.readableIdentifier === 'function') {\n      resolved = m.readableIdentifier(requestShortener)\n    } else {\n      resolved = m.request ?? m.userRequest\n    }\n  }\n\n  if (resolved) {\n    let content: string | null = null\n    try {\n      content = readFileSync(\n        ctx ? path.resolve(ctx, resolved) : resolved,\n        'utf8'\n      )\n    } catch {}\n    return [resolved, content]\n  }\n\n  return ['<unknown>', null]\n}\n\nexport async function getModuleBuildError(\n  compilation: CompilationType.Compilation,\n  input: any\n): Promise<SimpleWebpackError | false> {\n  if (\n    !(\n      typeof input === 'object' &&\n      (input?.name === 'ModuleBuildError' ||\n        input?.name === 'ModuleNotFoundError') &&\n      Boolean(input.module) &&\n      input.error instanceof Error\n    )\n  ) {\n    return false\n  }\n\n  const err: Error = input.error\n  const [sourceFilename, sourceContent] = getFileData(compilation, input.module)\n\n  const notFoundError = await getNotFoundError(\n    compilation,\n    input,\n    sourceFilename\n  )\n  if (notFoundError !== false) {\n    return notFoundError\n  }\n\n  const babel = getBabelError(sourceFilename, err)\n  if (babel !== false) {\n    return babel\n  }\n\n  const css = getCssError(sourceFilename, err)\n  if (css !== false) {\n    return css\n  }\n\n  const scss = getScssError(sourceFilename, sourceContent, err)\n  if (scss !== false) {\n    return scss\n  }\n\n  return false\n}\n"]},"metadata":{},"sourceType":"script"}