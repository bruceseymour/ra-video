{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst getWatcherManager = require(\"./getWatcherManager\");\n\nconst LinkResolver = require(\"./LinkResolver\");\n\nconst EventEmitter = require(\"events\").EventEmitter;\n\nconst globToRegExp = require(\"glob-to-regexp\");\n\nlet EXISTANCE_ONLY_TIME_ENTRY; // lazy required\n\nconst EMPTY_ARRAY = [];\n\nfunction addWatchersToSet(watchers, set) {\n  for (const w of watchers) {\n    if (w !== true && !set.has(w.directoryWatcher)) {\n      set.add(w.directoryWatcher);\n      addWatchersToSet(w.directoryWatcher.directories.values(), set);\n    }\n  }\n}\n\nconst stringToRegexp = ignored => {\n  const source = globToRegExp(ignored, {\n    globstar: true,\n    extended: true\n  }).source;\n  const matchingStart = source.slice(0, source.length - 1) + \"(?:$|\\\\/)\";\n  return matchingStart;\n};\n\nconst ignoredToRegexp = ignored => {\n  if (Array.isArray(ignored)) {\n    return new RegExp(ignored.map(i => stringToRegexp(i)).join(\"|\"));\n  } else if (typeof ignored === \"string\") {\n    return new RegExp(stringToRegexp(ignored));\n  } else if (ignored instanceof RegExp) {\n    return ignored;\n  } else if (ignored) {\n    throw new Error(`Invalid option for 'ignored': ${ignored}`);\n  } else {\n    return undefined;\n  }\n};\n\nconst normalizeOptions = options => {\n  return {\n    followSymlinks: !!options.followSymlinks,\n    ignored: ignoredToRegexp(options.ignored),\n    poll: options.poll\n  };\n};\n\nconst normalizeCache = new WeakMap();\n\nconst cachedNormalizeOptions = options => {\n  const cacheEntry = normalizeCache.get(options);\n  if (cacheEntry !== undefined) return cacheEntry;\n  const normalized = normalizeOptions(options);\n  normalizeCache.set(options, normalized);\n  return normalized;\n};\n\nclass Watchpack extends EventEmitter {\n  constructor(options) {\n    super();\n    if (!options) options = {};\n\n    if (typeof options.aggregateTimeout !== \"number\") {\n      options.aggregateTimeout = 200;\n    }\n\n    this.options = options;\n    this.watcherOptions = cachedNormalizeOptions(options);\n    this.watcherManager = getWatcherManager(this.watcherOptions);\n    this.watchers = [];\n    this.paused = false;\n    this.aggregatedChanges = new Set();\n    this.aggregatedRemovals = new Set();\n    this.aggregateTimeout = 0;\n    this._onTimeout = this._onTimeout.bind(this);\n  }\n\n  watch(arg1, arg2, arg3) {\n    let files, directories, missing, startTime;\n\n    if (!arg2) {\n      ({\n        files = EMPTY_ARRAY,\n        directories = EMPTY_ARRAY,\n        missing = EMPTY_ARRAY,\n        startTime\n      } = arg1);\n    } else {\n      files = arg1;\n      directories = arg2;\n      missing = EMPTY_ARRAY;\n      startTime = arg3;\n    }\n\n    this.paused = false;\n    const oldWatchers = this.watchers;\n    const ignored = this.watcherOptions.ignored;\n    const filter = ignored ? path => !ignored.test(path.replace(/\\\\/g, \"/\")) : () => true;\n    this.watchers = [];\n\n    if (this.watcherOptions.followSymlinks) {\n      const resolver = new LinkResolver();\n\n      for (const file of files) {\n        if (filter(file)) {\n          for (const innerFile of resolver.resolve(file)) {\n            if (file === innerFile || filter(innerFile)) {\n              const watcher = this._fileWatcher(file, this.watcherManager.watchFile(innerFile, startTime));\n\n              if (watcher) this.watchers.push(watcher);\n            }\n          }\n        }\n      }\n\n      for (const file of missing) {\n        if (filter(file)) {\n          for (const innerFile of resolver.resolve(file)) {\n            if (file === innerFile || filter(innerFile)) {\n              const watcher = this._missingWatcher(file, this.watcherManager.watchFile(innerFile, startTime));\n\n              if (watcher) this.watchers.push(watcher);\n            }\n          }\n        }\n      }\n\n      for (const dir of directories) {\n        if (filter(dir)) {\n          let first = true;\n\n          for (const innerItem of resolver.resolve(dir)) {\n            if (filter(innerItem)) {\n              const watcher = this._dirWatcher(dir, first ? this.watcherManager.watchDirectory(innerItem, startTime) : this.watcherManager.watchFile(innerItem, startTime));\n\n              if (watcher) this.watchers.push(watcher);\n            }\n\n            first = false;\n          }\n        }\n      }\n    } else {\n      for (const file of files) {\n        if (filter(file)) {\n          const watcher = this._fileWatcher(file, this.watcherManager.watchFile(file, startTime));\n\n          if (watcher) this.watchers.push(watcher);\n        }\n      }\n\n      for (const file of missing) {\n        if (filter(file)) {\n          const watcher = this._missingWatcher(file, this.watcherManager.watchFile(file, startTime));\n\n          if (watcher) this.watchers.push(watcher);\n        }\n      }\n\n      for (const dir of directories) {\n        if (filter(dir)) {\n          const watcher = this._dirWatcher(dir, this.watcherManager.watchDirectory(dir, startTime));\n\n          if (watcher) this.watchers.push(watcher);\n        }\n      }\n    }\n\n    for (const w of oldWatchers) w.close();\n  }\n\n  close() {\n    this.paused = true;\n    if (this.aggregateTimeout) clearTimeout(this.aggregateTimeout);\n\n    for (const w of this.watchers) w.close();\n\n    this.watchers.length = 0;\n  }\n\n  pause() {\n    this.paused = true;\n    if (this.aggregateTimeout) clearTimeout(this.aggregateTimeout);\n  }\n\n  getTimes() {\n    const directoryWatchers = new Set();\n    addWatchersToSet(this.watchers, directoryWatchers);\n    const obj = Object.create(null);\n\n    for (const w of directoryWatchers) {\n      const times = w.getTimes();\n\n      for (const file of Object.keys(times)) obj[file] = times[file];\n    }\n\n    return obj;\n  }\n\n  getTimeInfoEntries() {\n    if (EXISTANCE_ONLY_TIME_ENTRY === undefined) {\n      EXISTANCE_ONLY_TIME_ENTRY = require(\"./DirectoryWatcher\").EXISTANCE_ONLY_TIME_ENTRY;\n    }\n\n    const directoryWatchers = new Set();\n    addWatchersToSet(this.watchers, directoryWatchers);\n    const map = new Map();\n\n    for (const w of directoryWatchers) {\n      const times = w.getTimeInfoEntries();\n\n      for (const [path, entry] of times) {\n        if (map.has(path)) {\n          if (entry === EXISTANCE_ONLY_TIME_ENTRY) continue;\n          const value = map.get(path);\n          if (value === entry) continue;\n\n          if (value !== EXISTANCE_ONLY_TIME_ENTRY) {\n            map.set(path, Object.assign({}, value, entry));\n            continue;\n          }\n        }\n\n        map.set(path, entry);\n      }\n    }\n\n    return map;\n  }\n\n  _missingWatcher(file, watcher) {\n    if (watcher) {\n      watcher.on(\"change\", (mtime, type) => {\n        this._onChange(file, mtime, file, type);\n      });\n      watcher.on(\"remove\", type => {\n        this._onRemove(file, file, type);\n      });\n    }\n\n    return watcher;\n  }\n\n  _fileWatcher(file, watcher) {\n    if (watcher) {\n      watcher.on(\"initial-missing\", type => {\n        this._onRemove(file, file, type);\n      });\n      watcher.on(\"change\", (mtime, type) => {\n        this._onChange(file, mtime, file, type);\n      });\n      watcher.on(\"remove\", type => {\n        this._onRemove(file, file, type);\n      });\n    }\n\n    return watcher;\n  }\n\n  _dirWatcher(item, watcher) {\n    watcher.on(\"initial-missing\", type => {\n      this._onRemove(item, item, type);\n    });\n    watcher.on(\"change\", (file, mtime, type) => {\n      this._onChange(item, mtime, file, type);\n    });\n    watcher.on(\"remove\", type => {\n      this._onRemove(item, item, type);\n    });\n    return watcher;\n  }\n\n  _onChange(item, mtime, file, type) {\n    file = file || item;\n    if (this.paused) return;\n    this.emit(\"change\", file, mtime, type);\n    if (this.aggregateTimeout) clearTimeout(this.aggregateTimeout);\n    this.aggregatedRemovals.delete(item);\n    this.aggregatedChanges.add(item);\n    this.aggregateTimeout = setTimeout(this._onTimeout, this.options.aggregateTimeout);\n  }\n\n  _onRemove(item, file, type) {\n    file = file || item;\n    if (this.paused) return;\n    this.emit(\"remove\", file, type);\n    if (this.aggregateTimeout) clearTimeout(this.aggregateTimeout);\n    this.aggregatedChanges.delete(item);\n    this.aggregatedRemovals.add(item);\n    this.aggregateTimeout = setTimeout(this._onTimeout, this.options.aggregateTimeout);\n  }\n\n  _onTimeout() {\n    this.aggregateTimeout = 0;\n    const changes = this.aggregatedChanges;\n    const removals = this.aggregatedRemovals;\n    this.aggregatedChanges = new Set();\n    this.aggregatedRemovals = new Set();\n    this.emit(\"aggregated\", changes, removals);\n  }\n\n}\n\nmodule.exports = Watchpack;","map":{"version":3,"sources":["/Users/bruceseymour/ra-video/client/node_modules/next/node_modules/watchpack/lib/watchpack.js"],"names":["getWatcherManager","require","LinkResolver","EventEmitter","globToRegExp","EXISTANCE_ONLY_TIME_ENTRY","EMPTY_ARRAY","addWatchersToSet","watchers","set","w","has","directoryWatcher","add","directories","values","stringToRegexp","ignored","source","globstar","extended","matchingStart","slice","length","ignoredToRegexp","Array","isArray","RegExp","map","i","join","Error","undefined","normalizeOptions","options","followSymlinks","poll","normalizeCache","WeakMap","cachedNormalizeOptions","cacheEntry","get","normalized","Watchpack","constructor","aggregateTimeout","watcherOptions","watcherManager","paused","aggregatedChanges","Set","aggregatedRemovals","_onTimeout","bind","watch","arg1","arg2","arg3","files","missing","startTime","oldWatchers","filter","path","test","replace","resolver","file","innerFile","resolve","watcher","_fileWatcher","watchFile","push","_missingWatcher","dir","first","innerItem","_dirWatcher","watchDirectory","close","clearTimeout","pause","getTimes","directoryWatchers","obj","Object","create","times","keys","getTimeInfoEntries","Map","entry","value","assign","on","mtime","type","_onChange","_onRemove","item","emit","delete","setTimeout","changes","removals","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst getWatcherManager = require(\"./getWatcherManager\");\nconst LinkResolver = require(\"./LinkResolver\");\nconst EventEmitter = require(\"events\").EventEmitter;\nconst globToRegExp = require(\"glob-to-regexp\");\n\nlet EXISTANCE_ONLY_TIME_ENTRY; // lazy required\n\nconst EMPTY_ARRAY = [];\n\nfunction addWatchersToSet(watchers, set) {\n\tfor (const w of watchers) {\n\t\tif (w !== true && !set.has(w.directoryWatcher)) {\n\t\t\tset.add(w.directoryWatcher);\n\t\t\taddWatchersToSet(w.directoryWatcher.directories.values(), set);\n\t\t}\n\t}\n}\n\nconst stringToRegexp = ignored => {\n\tconst source = globToRegExp(ignored, { globstar: true, extended: true })\n\t\t.source;\n\tconst matchingStart = source.slice(0, source.length - 1) + \"(?:$|\\\\/)\";\n\treturn matchingStart;\n};\n\nconst ignoredToRegexp = ignored => {\n\tif (Array.isArray(ignored)) {\n\t\treturn new RegExp(ignored.map(i => stringToRegexp(i)).join(\"|\"));\n\t} else if (typeof ignored === \"string\") {\n\t\treturn new RegExp(stringToRegexp(ignored));\n\t} else if (ignored instanceof RegExp) {\n\t\treturn ignored;\n\t} else if (ignored) {\n\t\tthrow new Error(`Invalid option for 'ignored': ${ignored}`);\n\t} else {\n\t\treturn undefined;\n\t}\n};\n\nconst normalizeOptions = options => {\n\treturn {\n\t\tfollowSymlinks: !!options.followSymlinks,\n\t\tignored: ignoredToRegexp(options.ignored),\n\t\tpoll: options.poll\n\t};\n};\n\nconst normalizeCache = new WeakMap();\nconst cachedNormalizeOptions = options => {\n\tconst cacheEntry = normalizeCache.get(options);\n\tif (cacheEntry !== undefined) return cacheEntry;\n\tconst normalized = normalizeOptions(options);\n\tnormalizeCache.set(options, normalized);\n\treturn normalized;\n};\n\nclass Watchpack extends EventEmitter {\n\tconstructor(options) {\n\t\tsuper();\n\t\tif (!options) options = {};\n\t\tif (typeof options.aggregateTimeout !== \"number\") {\n\t\t\toptions.aggregateTimeout = 200;\n\t\t}\n\t\tthis.options = options;\n\t\tthis.watcherOptions = cachedNormalizeOptions(options);\n\t\tthis.watcherManager = getWatcherManager(this.watcherOptions);\n\t\tthis.watchers = [];\n\t\tthis.paused = false;\n\t\tthis.aggregatedChanges = new Set();\n\t\tthis.aggregatedRemovals = new Set();\n\t\tthis.aggregateTimeout = 0;\n\t\tthis._onTimeout = this._onTimeout.bind(this);\n\t}\n\n\twatch(arg1, arg2, arg3) {\n\t\tlet files, directories, missing, startTime;\n\t\tif (!arg2) {\n\t\t\t({\n\t\t\t\tfiles = EMPTY_ARRAY,\n\t\t\t\tdirectories = EMPTY_ARRAY,\n\t\t\t\tmissing = EMPTY_ARRAY,\n\t\t\t\tstartTime\n\t\t\t} = arg1);\n\t\t} else {\n\t\t\tfiles = arg1;\n\t\t\tdirectories = arg2;\n\t\t\tmissing = EMPTY_ARRAY;\n\t\t\tstartTime = arg3;\n\t\t}\n\t\tthis.paused = false;\n\t\tconst oldWatchers = this.watchers;\n\t\tconst ignored = this.watcherOptions.ignored;\n\t\tconst filter = ignored\n\t\t\t? path => !ignored.test(path.replace(/\\\\/g, \"/\"))\n\t\t\t: () => true;\n\t\tthis.watchers = [];\n\t\tif (this.watcherOptions.followSymlinks) {\n\t\t\tconst resolver = new LinkResolver();\n\t\t\tfor (const file of files) {\n\t\t\t\tif (filter(file)) {\n\t\t\t\t\tfor (const innerFile of resolver.resolve(file)) {\n\t\t\t\t\t\tif (file === innerFile || filter(innerFile)) {\n\t\t\t\t\t\t\tconst watcher = this._fileWatcher(\n\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\tthis.watcherManager.watchFile(innerFile, startTime)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (watcher) this.watchers.push(watcher);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const file of missing) {\n\t\t\t\tif (filter(file)) {\n\t\t\t\t\tfor (const innerFile of resolver.resolve(file)) {\n\t\t\t\t\t\tif (file === innerFile || filter(innerFile)) {\n\t\t\t\t\t\t\tconst watcher = this._missingWatcher(\n\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\tthis.watcherManager.watchFile(innerFile, startTime)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (watcher) this.watchers.push(watcher);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const dir of directories) {\n\t\t\t\tif (filter(dir)) {\n\t\t\t\t\tlet first = true;\n\t\t\t\t\tfor (const innerItem of resolver.resolve(dir)) {\n\t\t\t\t\t\tif (filter(innerItem)) {\n\t\t\t\t\t\t\tconst watcher = this._dirWatcher(\n\t\t\t\t\t\t\t\tdir,\n\t\t\t\t\t\t\t\tfirst\n\t\t\t\t\t\t\t\t\t? this.watcherManager.watchDirectory(innerItem, startTime)\n\t\t\t\t\t\t\t\t\t: this.watcherManager.watchFile(innerItem, startTime)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (watcher) this.watchers.push(watcher);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const file of files) {\n\t\t\t\tif (filter(file)) {\n\t\t\t\t\tconst watcher = this._fileWatcher(\n\t\t\t\t\t\tfile,\n\t\t\t\t\t\tthis.watcherManager.watchFile(file, startTime)\n\t\t\t\t\t);\n\t\t\t\t\tif (watcher) this.watchers.push(watcher);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const file of missing) {\n\t\t\t\tif (filter(file)) {\n\t\t\t\t\tconst watcher = this._missingWatcher(\n\t\t\t\t\t\tfile,\n\t\t\t\t\t\tthis.watcherManager.watchFile(file, startTime)\n\t\t\t\t\t);\n\t\t\t\t\tif (watcher) this.watchers.push(watcher);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const dir of directories) {\n\t\t\t\tif (filter(dir)) {\n\t\t\t\t\tconst watcher = this._dirWatcher(\n\t\t\t\t\t\tdir,\n\t\t\t\t\t\tthis.watcherManager.watchDirectory(dir, startTime)\n\t\t\t\t\t);\n\t\t\t\t\tif (watcher) this.watchers.push(watcher);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (const w of oldWatchers) w.close();\n\t}\n\n\tclose() {\n\t\tthis.paused = true;\n\t\tif (this.aggregateTimeout) clearTimeout(this.aggregateTimeout);\n\t\tfor (const w of this.watchers) w.close();\n\t\tthis.watchers.length = 0;\n\t}\n\n\tpause() {\n\t\tthis.paused = true;\n\t\tif (this.aggregateTimeout) clearTimeout(this.aggregateTimeout);\n\t}\n\n\tgetTimes() {\n\t\tconst directoryWatchers = new Set();\n\t\taddWatchersToSet(this.watchers, directoryWatchers);\n\t\tconst obj = Object.create(null);\n\t\tfor (const w of directoryWatchers) {\n\t\t\tconst times = w.getTimes();\n\t\t\tfor (const file of Object.keys(times)) obj[file] = times[file];\n\t\t}\n\t\treturn obj;\n\t}\n\n\tgetTimeInfoEntries() {\n\t\tif (EXISTANCE_ONLY_TIME_ENTRY === undefined) {\n\t\t\tEXISTANCE_ONLY_TIME_ENTRY = require(\"./DirectoryWatcher\")\n\t\t\t\t.EXISTANCE_ONLY_TIME_ENTRY;\n\t\t}\n\t\tconst directoryWatchers = new Set();\n\t\taddWatchersToSet(this.watchers, directoryWatchers);\n\t\tconst map = new Map();\n\t\tfor (const w of directoryWatchers) {\n\t\t\tconst times = w.getTimeInfoEntries();\n\t\t\tfor (const [path, entry] of times) {\n\t\t\t\tif (map.has(path)) {\n\t\t\t\t\tif (entry === EXISTANCE_ONLY_TIME_ENTRY) continue;\n\t\t\t\t\tconst value = map.get(path);\n\t\t\t\t\tif (value === entry) continue;\n\t\t\t\t\tif (value !== EXISTANCE_ONLY_TIME_ENTRY) {\n\t\t\t\t\t\tmap.set(path, Object.assign({}, value, entry));\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tmap.set(path, entry);\n\t\t\t}\n\t\t}\n\t\treturn map;\n\t}\n\n\t_missingWatcher(file, watcher) {\n\t\tif (watcher) {\n\t\t\twatcher.on(\"change\", (mtime, type) => {\n\t\t\t\tthis._onChange(file, mtime, file, type);\n\t\t\t});\n\t\t\twatcher.on(\"remove\", type => {\n\t\t\t\tthis._onRemove(file, file, type);\n\t\t\t});\n\t\t}\n\t\treturn watcher;\n\t}\n\n\t_fileWatcher(file, watcher) {\n\t\tif (watcher) {\n\t\t\twatcher.on(\"initial-missing\", type => {\n\t\t\t\tthis._onRemove(file, file, type);\n\t\t\t});\n\t\t\twatcher.on(\"change\", (mtime, type) => {\n\t\t\t\tthis._onChange(file, mtime, file, type);\n\t\t\t});\n\t\t\twatcher.on(\"remove\", type => {\n\t\t\t\tthis._onRemove(file, file, type);\n\t\t\t});\n\t\t}\n\t\treturn watcher;\n\t}\n\n\t_dirWatcher(item, watcher) {\n\t\twatcher.on(\"initial-missing\", type => {\n\t\t\tthis._onRemove(item, item, type);\n\t\t});\n\t\twatcher.on(\"change\", (file, mtime, type) => {\n\t\t\tthis._onChange(item, mtime, file, type);\n\t\t});\n\t\twatcher.on(\"remove\", type => {\n\t\t\tthis._onRemove(item, item, type);\n\t\t});\n\t\treturn watcher;\n\t}\n\n\t_onChange(item, mtime, file, type) {\n\t\tfile = file || item;\n\t\tif (this.paused) return;\n\t\tthis.emit(\"change\", file, mtime, type);\n\t\tif (this.aggregateTimeout) clearTimeout(this.aggregateTimeout);\n\t\tthis.aggregatedRemovals.delete(item);\n\t\tthis.aggregatedChanges.add(item);\n\t\tthis.aggregateTimeout = setTimeout(\n\t\t\tthis._onTimeout,\n\t\t\tthis.options.aggregateTimeout\n\t\t);\n\t}\n\n\t_onRemove(item, file, type) {\n\t\tfile = file || item;\n\t\tif (this.paused) return;\n\t\tthis.emit(\"remove\", file, type);\n\t\tif (this.aggregateTimeout) clearTimeout(this.aggregateTimeout);\n\t\tthis.aggregatedChanges.delete(item);\n\t\tthis.aggregatedRemovals.add(item);\n\t\tthis.aggregateTimeout = setTimeout(\n\t\t\tthis._onTimeout,\n\t\t\tthis.options.aggregateTimeout\n\t\t);\n\t}\n\n\t_onTimeout() {\n\t\tthis.aggregateTimeout = 0;\n\t\tconst changes = this.aggregatedChanges;\n\t\tconst removals = this.aggregatedRemovals;\n\t\tthis.aggregatedChanges = new Set();\n\t\tthis.aggregatedRemovals = new Set();\n\t\tthis.emit(\"aggregated\", changes, removals);\n\t}\n}\n\nmodule.exports = Watchpack;\n"]},"metadata":{},"sourceType":"script"}