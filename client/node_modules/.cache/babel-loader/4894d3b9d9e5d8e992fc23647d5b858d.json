{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.build = build;\n\nvar _base = require(\"./blocks/base\");\n\nvar _css = require(\"./blocks/css\");\n\nvar _utils = require(\"./utils\");\n\nasync function build(config, {\n  rootDirectory,\n  customAppFile,\n  isDevelopment,\n  isServer,\n  assetPrefix,\n  sassOptions,\n  productionBrowserSourceMaps\n}) {\n  const ctx = {\n    rootDirectory,\n    customAppFile,\n    isDevelopment,\n    isProduction: !isDevelopment,\n    isServer,\n    isClient: !isServer,\n    assetPrefix: assetPrefix ? assetPrefix.endsWith('/') ? assetPrefix.slice(0, -1) : assetPrefix : '',\n    sassOptions,\n    productionBrowserSourceMaps\n  };\n  const fn = (0, _utils.pipe)((0, _base.base)(ctx), (0, _css.css)(ctx));\n  return fn(config);\n}","map":{"version":3,"sources":["../../../../build/webpack/config/index.ts"],"names":["ctx","isProduction","isClient","assetPrefix","fn"],"mappings":";;;;;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,IAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEO,eAAA,KAAA,CAAA,MAAA,EAEL;AAAA,EAAA,aAAA;AAAA,EAAA,aAAA;AAAA,EAAA,aAAA;AAAA,EAAA,QAAA;AAAA,EAAA,WAAA;AAAA,EAAA,WAAA;AAFK,EAAA;AAEL,CAFK,EAmB2B;AAChC,QAAMA,GAAyB,GAAG;AAAA,IAAA,aAAA;AAAA,IAAA,aAAA;AAAA,IAAA,aAAA;AAIhCC,IAAAA,YAAY,EAAE,CAJkB,aAAA;AAAA,IAAA,QAAA;AAMhCC,IAAAA,QAAQ,EAAE,CANsB,QAAA;AAOhCC,IAAAA,WAAW,EAAEA,WAAW,GACpBA,WAAW,CAAXA,QAAAA,CAAAA,GAAAA,IACEA,WAAW,CAAXA,KAAAA,CAAAA,CAAAA,EAAqB,CADvBA,CACEA,CADFA,GADoB,WAAA,GAPQ,EAAA;AAAA,IAAA,WAAA;AAAlC,IAAA;AAAkC,GAAlC;AAgBA,QAAMC,EAAE,GAAG,CAAA,GAAA,MAAA,CAAA,IAAA,EAAK,CAAA,GAAA,KAAA,CAAA,IAAA,EAAL,GAAK,CAAL,EAAgB,CAAA,GAAA,IAAA,CAAA,GAAA,EAA3B,GAA2B,CAAhB,CAAX;AACA,SAAOA,EAAE,CAAT,MAAS,CAAT;AACD","sourcesContent":["import webpack from 'webpack'\nimport { base } from './blocks/base'\nimport { css } from './blocks/css'\nimport { ConfigurationContext, pipe } from './utils'\n\nexport async function build(\n  config: webpack.Configuration,\n  {\n    rootDirectory,\n    customAppFile,\n    isDevelopment,\n    isServer,\n    assetPrefix,\n    sassOptions,\n    productionBrowserSourceMaps,\n  }: {\n    rootDirectory: string\n    customAppFile: string | null\n    isDevelopment: boolean\n    isServer: boolean\n    assetPrefix: string\n    sassOptions: any\n    productionBrowserSourceMaps: boolean\n  }\n): Promise<webpack.Configuration> {\n  const ctx: ConfigurationContext = {\n    rootDirectory,\n    customAppFile,\n    isDevelopment,\n    isProduction: !isDevelopment,\n    isServer,\n    isClient: !isServer,\n    assetPrefix: assetPrefix\n      ? assetPrefix.endsWith('/')\n        ? assetPrefix.slice(0, -1)\n        : assetPrefix\n      : '',\n    sassOptions,\n    productionBrowserSourceMaps,\n  }\n\n  const fn = pipe(base(ctx), css(ctx))\n  return fn(config)\n}\n"]},"metadata":{},"sourceType":"script"}