{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _nextServer = _interopRequireDefault(require(\"../next-server/server/next-server\"));\n\nvar _constants = require(\"../lib/constants\");\n\nvar log = _interopRequireWildcard(require(\"../build/output/log\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // This file is used for when users run `require('next')`\n\n\nfunction createServer(options) {\n  const standardEnv = ['production', 'development', 'test'];\n\n  if (options == null) {\n    throw new Error('The server has not been instantiated properly. https://err.sh/next.js/invalid-server-options');\n  }\n\n  if (!options.isNextDevCommand && process.env.NODE_ENV && !standardEnv.includes(process.env.NODE_ENV)) {\n    log.warn(_constants.NON_STANDARD_NODE_ENV);\n  }\n\n  if (options.dev) {\n    if (typeof options.dev !== 'boolean') {\n      console.warn(\"Warning: 'dev' is not a boolean which could introduce unexpected behavior. https://err.sh/next.js/invalid-server-options\");\n    }\n\n    const DevServer = require('./next-dev-server').default;\n\n    return new DevServer(options);\n  }\n\n  return new _nextServer.default(options);\n} // Support commonjs `require('next')`\n\n\nmodule.exports = createServer;\nexports = module.exports; // Support `import next from 'next'`\n\nvar _default = createServer;\nexports.default = _default;","map":{"version":3,"sources":["../../server/next.ts"],"names":["standardEnv","options","process","log","NON_STANDARD_NODE_ENV","console","DevServer","require","Server","module","exports","createServer"],"mappings":";;;;;AAAA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,mCAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,GAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,C,CAAA;;;AACA,SAAA,YAAA,CAAA,OAAA,EAA8D;AAC5D,QAAMA,WAAW,GAAG,CAAA,YAAA,EAAA,aAAA,EAApB,MAAoB,CAApB;;AAEA,MAAIC,OAAO,IAAX,IAAA,EAAqB;AACnB,UAAM,IAAA,KAAA,CAAN,8FAAM,CAAN;AAKF;;AAAA,MACE,CAAEA,OAAD,CAAD,gBAAA,IACAC,OAAO,CAAPA,GAAAA,CADA,QAAA,IAEA,CAACF,WAAW,CAAXA,QAAAA,CAAqBE,OAAO,CAAPA,GAAAA,CAHxB,QAGGF,CAHH,EAIE;AACAG,IAAAA,GAAG,CAAHA,IAAAA,CAASC,UAAAA,CAATD,qBAAAA;AAGF;;AAAA,MAAIF,OAAO,CAAX,GAAA,EAAiB;AACf,QAAI,OAAOA,OAAO,CAAd,GAAA,KAAJ,SAAA,EAAsC;AACpCI,MAAAA,OAAO,CAAPA,IAAAA,CAAAA,0HAAAA;AAKF;;AAAA,UAAMC,SAAS,GAAGC,OAAO,CAAPA,mBAAO,CAAPA,CAAlB,OAAA;;AACA,WAAO,IAAA,SAAA,CAAP,OAAO,CAAP;AAGF;;AAAA,SAAO,IAAIC,WAAAA,CAAJ,OAAA,CAAP,OAAO,CAAP;AAGF,C,CAAA;;;AACAC,MAAM,CAANA,OAAAA,GAAAA,YAAAA;AACAC,OAAO,GAAGD,MAAM,CAAhBC,OAAAA,C,CAEA;;eACeC,Y","sourcesContent":["import Server, { ServerConstructor } from '../next-server/server/next-server'\nimport { NON_STANDARD_NODE_ENV } from '../lib/constants'\nimport * as log from '../build/output/log'\n\ntype NextServerConstructor = ServerConstructor & {\n  /**\n   * Whether to launch Next.js in dev mode - @default false\n   */\n  dev?: boolean\n}\n\n// This file is used for when users run `require('next')`\nfunction createServer(options: NextServerConstructor): Server {\n  const standardEnv = ['production', 'development', 'test']\n\n  if (options == null) {\n    throw new Error(\n      'The server has not been instantiated properly. https://err.sh/next.js/invalid-server-options'\n    )\n  }\n\n  if (\n    !(options as any).isNextDevCommand &&\n    process.env.NODE_ENV &&\n    !standardEnv.includes(process.env.NODE_ENV)\n  ) {\n    log.warn(NON_STANDARD_NODE_ENV)\n  }\n\n  if (options.dev) {\n    if (typeof options.dev !== 'boolean') {\n      console.warn(\n        \"Warning: 'dev' is not a boolean which could introduce unexpected behavior. https://err.sh/next.js/invalid-server-options\"\n      )\n    }\n\n    const DevServer = require('./next-dev-server').default\n    return new DevServer(options)\n  }\n\n  return new Server(options)\n}\n\n// Support commonjs `require('next')`\nmodule.exports = createServer\nexports = module.exports\n\n// Support `import next from 'next'`\nexport default createServer\n"]},"metadata":{},"sourceType":"script"}